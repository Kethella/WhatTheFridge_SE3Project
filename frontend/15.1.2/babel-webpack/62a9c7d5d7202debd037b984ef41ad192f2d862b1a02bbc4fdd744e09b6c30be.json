{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/snack-bar\";\nexport class LoginComponent {\n  constructor(_accountService, formBuilder, http, router, snackBar) {\n    this._accountService = _accountService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.thereIsInputError = false;\n    this.queryParams = new HttpParams();\n    this.account = {\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      securityQuestion: \"\",\n      securityAnswer: \"\"\n    };\n  }\n  ngOnInit() {}\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.fieldsAreEmpty()) {\n        _this.queryParams = _this.queryParams.append(\"email\", _this.account.email);\n        _this.queryParams = _this.queryParams.append(\"password\", _this.account.password);\n        const foundAccount = yield _this._accountService.findAccount(_this.queryParams);\n        if (foundAccount === null) {\n          _this.thereIsInputError = true;\n        } else {\n          _this.account = foundAccount;\n          _this._accountService.sendOwnerAccountToServices(_this.account.id);\n          _this.router.navigate(['home']);\n        }\n      } else {\n        _this.thereIsInputError = true;\n      }\n    })();\n  }\n  fieldsAreEmpty() {\n    if (this.account.password === \"\" || this.account.email === \"\") {\n      return true;\n    }\n    return false;\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 2,\n  consts: [[1, \"bg\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [1, \"sign-up-form\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"routerLink\", \"../sign-up\", 2, \"display\", \"flex\", \"justify-content\", \"flex-end\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\");\n      i0.ɵɵtext(7, \"Welcome back.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"h6\");\n      i0.ɵɵtext(9, \"Clean out your fridge and enjoy a delicious meal\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"form\", 6)(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.account.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵtext(16, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.account.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_22_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 14);\n      i0.ɵɵtext(25, \" New User? Click to sign up! \");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelement(26, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.password);\n    }\n  },\n  dependencies: [i4.RouterOutlet, i4.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\".card[_ngcontent-%COMP%]{\\r\\n    border: none;\\r\\n    border-radius: 25px;\\r\\n    width:500px;\\r\\n    padding:50px;\\r\\n    position: absolute;\\r\\n    top:50%;\\r\\n    left:50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    background: rgb(230, 244, 246);\\r\\n}\\r\\n\\r\\n.bg[_ngcontent-%COMP%]{\\r\\n    background: rgb(95, 193, 172);\\r\\n    height : 100vh;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hY2NvdW50LWF1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFFBQVE7SUFDUixnQ0FBZ0M7SUFDaEMsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICB3aWR0aDo1MDBweDtcclxuICAgIHBhZGRpbmc6NTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDo1MCU7XHJcbiAgICBsZWZ0OjUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDIzMCwgMjQ0LCAyNDYpO1xyXG59XHJcblxyXG4uYmd7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoOTUsIDE5MywgMTcyKTtcclxuICAgIGhlaWdodCA6IDEwMHZoO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;;;;;AAa7D,OAAM,MAAOC,cAAc;EAgBzBC,YAAoBC,eAA+B,EACzCC,WAAwB,EACxBC,IAAe,EACfC,MAAa,EACbC,QAAqB;IAJX,oBAAe,GAAfJ,eAAe;IACzB,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;IAlBlB,sBAAiB,GAAY,KAAK;IAE3B,gBAAW,GAAG,IAAIP,UAAU,EAAE;IAE9B,YAAO,GAAY;MACxBQ,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE;KACjB;EAOmC;EAEpCC,QAAQ,IACR;EAEMC,KAAK;IAAA;IAAA;MACT,IAAG,CAAC,KAAI,CAACC,cAAc,EAAE,EAAC;QAExB,KAAI,CAACC,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,OAAO,EAAE,KAAI,CAACC,OAAO,CAACT,KAAK,CAAC;QACvE,KAAI,CAACO,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,UAAU,EAAE,KAAI,CAACC,OAAO,CAACR,QAAQ,CAAC;QAC7E,MAAMS,YAAY,SAAS,KAAI,CAACjB,eAAe,CAACkB,WAAW,CAAC,KAAI,CAACJ,WAAW,CAAC;QAE7E,IAAGG,YAAY,KAAK,IAAI,EAAC;UACvB,KAAI,CAACE,iBAAiB,GAAG,IAAI;SAC9B,MACI;UACH,KAAI,CAACH,OAAO,GAAGC,YAAY;UAC3B,KAAI,CAACjB,eAAe,CAACoB,0BAA0B,CAAC,KAAI,CAACJ,OAAO,CAACX,EAAE,CAAC;UAChE,KAAI,CAACF,MAAM,CAACkB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;OAEjC,MACG;QACF,KAAI,CAACF,iBAAiB,GAAG,IAAI;;IAC9B;EACH;EAEAN,cAAc;IACZ,IAAG,IAAI,CAACG,OAAO,CAACR,QAAQ,KAAK,EAAE,IAAI,IAAI,CAACQ,OAAO,CAACT,KAAK,KAAK,EAAE,EAAC;MAC3D,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;AAnDWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BC,8BAAgB;MAMYA,6BAAa;MAAAA,iBAAK;MACtBA,0BAAI;MAAAA,gEAAgD;MAAAA,iBAAK;MAE7DA,gCAA2B;MAEgCA,8BAAa;MAAAA,iBAAQ;MACxEA,iCAAuI;MAA5BA;QAAA;MAAA,EAA2B;MAAtIA,iBAAuI;MACvIA,gCAAsC;MAAAA,+DAA8C;MAAAA,iBAAM;MAE5FA,+BAAkB;MACsCA,yBAAQ;MAAAA,iBAAQ;MACtEA,kCAAsH;MAA/BA;QAAA;MAAA,EAA8B;MAArHA,iBAAsH;MAExHA,4BAAK;MAC2CA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAC9EA,8BAA4E;MAACA,8CAA4B;MAAAA,iBAAI;MAQrIA,iCAA+B;;;MAjBoGA,gBAA2B;MAA3BA,2CAA2B;MAK/CA,eAA8B;MAA9BA,8CAA8B","names":["HttpParams","LoginComponent","constructor","_accountService","formBuilder","http","router","snackBar","id","name","email","password","securityQuestion","securityAnswer","ngOnInit","login","fieldsAreEmpty","queryParams","append","account","foundAccount","findAccount","thereIsInputError","sendOwnerAccountToServices","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\login\\login.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\login\\login.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AccountService } from 'src/app/services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  thereIsInputError: boolean = false;\r\n\r\n  public queryParams = new HttpParams();\r\n\r\n  public account: Account = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    securityQuestion: \"\",\r\n    securityAnswer: \"\"\r\n  }\r\n\r\n\r\n  constructor(private _accountService: AccountService,\r\n    private formBuilder: FormBuilder,\r\n    private http:HttpClient,\r\n    private router:Router,\r\n    private snackBar: MatSnackBar ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async login(){\r\n    if(!this.fieldsAreEmpty()){\r\n\r\n      this.queryParams = this.queryParams.append(\"email\", this.account.email);\r\n      this.queryParams = this.queryParams.append(\"password\", this.account.password);\r\n      const foundAccount = await this._accountService.findAccount(this.queryParams);\r\n\r\n      if(foundAccount === null){\r\n        this.thereIsInputError = true;\r\n      }\r\n      else {\r\n        this.account = foundAccount;\r\n        this._accountService.sendOwnerAccountToServices(this.account.id);\r\n        this.router.navigate(['home']);\r\n      }\r\n    }\r\n    else{\r\n      this.thereIsInputError = true;\r\n    }\r\n  }\r\n\r\n  fieldsAreEmpty(): boolean {\r\n    if(this.account.password === \"\" || this.account.email === \"\"){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n","<div class=\"bg\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card\">\r\n                    <div class=\"text-center\">\r\n                        <h1>Welcome back.</h1>\r\n                        <h6>Clean out your fridge and enjoy a delicious meal</h6>\r\n                    </div>\r\n                    <form class=\"sign-up-form\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"email\" [(ngModel)]=\"account.email\">\r\n                            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n                          </div>\r\n                          <div class=\"mb-3\">\r\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" [(ngModel)]=\"account.password\">\r\n                          </div>\r\n                          <div>\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"login()\">Login</button>\r\n                            <a style=\"display: flex; justify-content: flex-end\" routerLink=\"../sign-up\"> New User? Click to sign up! </a>\r\n                          </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}