{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Component, ViewChild, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nlet EditRecipeComponent = class EditRecipeComponent {\n  constructor(dialogRef, data, _formBuilder, _recipeService, _mediaService, dialog) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._formBuilder = _formBuilder;\n    this._recipeService = _recipeService;\n    this._mediaService = _mediaService;\n    this.dialog = dialog;\n    this.restartAfterEdit = new EventEmitter();\n    this.selectedCategory = {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n    this.displayedColumns = ['ingredientName', 'ingredientAmount', 'actions'];\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.addOnBlur = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.progress = {\n      percentage: 0\n    };\n    this.selectedFile = null;\n    this.mediaString = \"\";\n    this.fileIsSelected = false;\n    this.ingredient = {\n      \"ingredientName\": '',\n      \"ingredientAmount\": ''\n    };\n    this.ingredientNames = [];\n    this.ingredientAmounts = [];\n    this.ingredients = [], this.selectedTags = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.recipe = _this.data.selectedRecipe;\n      _this.categories = yield _this._recipeService.getCategories();\n      _this.selectedCategory = _this.getSelectedCategory(_this.recipe.category);\n      _this.ingredientNames = _this.recipe.ingredientNames;\n      _this.ingredientAmounts = _this.recipe.ingredientMeasures;\n      _this.ingredients = _this.getIgredients(_this.ingredientNames, _this.ingredientAmounts);\n    })();\n  }\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n  updateRecipe() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.selectedCategory = _this2.setSelectedCategory(_this2.selectedCategory);\n      _this2.recipe.category = _this2.selectedCategory.enumValue;\n      _this2.recipe.ingredientNames = _this2.ingredientNames;\n      _this2.recipe.ingredientMeasures = _this2.ingredientAmounts;\n      _this2.recipe = yield _this2._recipeService.updateRecipe(_this2.recipe);\n      _this2.dialogRef.close();\n    })();\n  }\n  onSubmit() {\n    if (this.fileIsSelected) {\n      this.progress.percentage = 0;\n      this.currentFileUpload = this.selectedFiles.item(0);\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress.percentage = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.mediaString = JSON.stringify(event.body);\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1);\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\n          this.recipe.image = this.mediaString;\n          this.updateRecipe();\n        }\n        this.selectedFiles = undefined;\n      });\n    } else {\n      this.updateRecipe();\n    }\n  }\n  selectFile(event) {\n    this.fileIsSelected = true;\n    this.selectedFiles = event.target.files;\n  }\n  deleteImage() {\n    this._mediaService.deleteFile(this.recipe.image);\n    this.recipe.image = \"\";\n  }\n  /*  --------------------------------------------------------------------------------\r\n        INGREDIENT METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  getIgredients(ingredientNames, ingredientAmounts) {\n    let returnIngr = [];\n    ingredientNames.forEach(function (value, index) {\n      let temp = {\n        ingredientName: value,\n        ingredientAmount: ingredientAmounts.at(index)\n      };\n      returnIngr.push(temp);\n    });\n    return returnIngr;\n  }\n  onAddIngredient() {\n    var name = this.ingredientName;\n    var amount = this.ingredientAmount;\n    this.ingredientNames.push(name);\n    this.ingredientAmounts.push(amount);\n    let ingredient = {\n      ingredientName: name,\n      ingredientAmount: amount\n    };\n    this.ingredients.push(ingredient);\n    this.table.renderRows();\n  }\n  onDeleteIngredient(element) {\n    let deleteIndex = -1;\n    this.ingredients.forEach(function (value, index) {\n      if (value.ingredientName === element.ingredientName && value.ingredientAmount === element.ingredientAmount) {\n        deleteIndex = index;\n      }\n    });\n    this.ingredientNames.splice(deleteIndex, 1);\n    this.ingredientAmounts.splice(deleteIndex, 1);\n    this.ingredients.splice(deleteIndex, 1);\n    this.table.renderRows();\n  }\n  /*  --------------------------------------------------------------------------------\r\n        CATEGORY METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  setSelectedCategory(selectedCategory) {\n    for (let category of this.categories) {\n      if (selectedCategory.text == category.text) {\n        selectedCategory.enumValue = category.enumValue;\n      }\n    }\n    return selectedCategory;\n  }\n  getSelectedCategory(categoryEnum) {\n    for (let category of this.categories) {\n      if (categoryEnum == category.enumValue) {\n        const returnCategory = {\n          text: category.text,\n          enumValue: category.enumValue\n        };\n        return returnCategory;\n      }\n    }\n    throw Error;\n  }\n  /*  --------------------------------------------------------------------------------\r\n        TAG METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  addTag(event) {\n    const value = (event.value || '').trim();\n    if (value) {\n      this.recipe.tags.push(value);\n    }\n    event.chipInput.clear();\n    console.log(this.recipe.tags);\n  }\n  removeTag(tag) {\n    const index = this.recipe.tags.indexOf(tag);\n    if (index >= 0) {\n      this.recipe.tags.splice(index, 1);\n    }\n    console.log(this.recipe.tags);\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogChangeImage, {\n      data: {\n        recipe: this.recipe\n      }\n    });\n  }\n};\n__decorate([Output()], EditRecipeComponent.prototype, \"restartAfterEdit\", void 0);\n__decorate([ViewChild(MatTable)], EditRecipeComponent.prototype, \"table\", void 0);\nEditRecipeComponent = __decorate([Component({\n  selector: 'app-edit-recipe',\n  templateUrl: './edit-recipe.component.html',\n  styleUrls: ['./edit-recipe.component.css']\n}), __param(1, Inject(MAT_DIALOG_DATA))], EditRecipeComponent);\nexport { EditRecipeComponent };\nlet DialogChangeImage = class DialogChangeImage {\n  constructor(dialogRef, data, _mediaService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._mediaService = _mediaService;\n    this.progress = {\n      percentage: 0\n    };\n    this.selectedFile = null;\n    this.mediaString = \"\";\n    this.fileIsSelected = false;\n  }\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  selectFile(event) {\n    this.fileIsSelected = true;\n    this.selectedFiles = event.target.files;\n  }\n  changeImage() {\n    if (this.fileIsSelected) {\n      this.progress.percentage = 0;\n      this.currentFileUpload = this.selectedFiles.item(0);\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress.percentage = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.mediaString = JSON.stringify(event.body);\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1);\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\n          this.data.recipe.image = this.mediaString;\n        }\n        this.selectedFiles = undefined;\n      });\n    }\n    this.onCancelClick();\n  }\n};\nDialogChangeImage = __decorate([Component({\n  selector: 'dialog-change-image',\n  templateUrl: 'dialog-change-image.html'\n}), __param(1, Inject(MAT_DIALOG_DATA))], DialogChangeImage);\nexport { DialogChangeImage };","map":{"version":3,"mappings":"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","names":["COMMA","ENTER","HttpEventType","HttpResponse","Component","ViewChild","Inject","Output","EventEmitter","MAT_DIALOG_DATA","MatTable","EditRecipeComponent","constructor","dialogRef","data","_formBuilder","_recipeService","_mediaService","dialog","percentage","ingredientNames","ingredientAmounts","ingredients","selectedTags","ngOnInit","recipe","selectedRecipe","categories","getCategories","selectedCategory","getSelectedCategory","category","ingredientMeasures","getIgredients","onCloseClick","close","onCancel","updateRecipe","setSelectedCategory","enumValue","onSubmit","fileIsSelected","progress","currentFileUpload","selectedFiles","item","uploadFile","subscribe","event","type","UploadProgress","Math","round","loaded","total","mediaString","JSON","stringify","body","slice","length","image","undefined","selectFile","target","files","deleteImage","deleteFile","returnIngr","forEach","value","index","temp","ingredientName","ingredientAmount","at","push","onAddIngredient","name","amount","ingredient","table","renderRows","onDeleteIngredient","element","deleteIndex","splice","text","categoryEnum","returnCategory","Error","addTag","trim","tags","chipInput","clear","console","log","removeTag","tag","indexOf","openDialog","open","DialogChangeImage","__decorate","selector","templateUrl","styleUrls","__param","onCancelClick","changeImage"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\edit-recipe.component.ts"],"sourcesContent":["import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { HttpEventType, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Component, ViewChild, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ICategory } from 'src/app/models/category';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { MediaService } from 'src/app/services/media.service';\r\nimport { RecipeService } from 'src/app/services/recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-recipe',\r\n  templateUrl: './edit-recipe.component.html',\r\n  styleUrls: ['./edit-recipe.component.css']\r\n})\r\nexport class EditRecipeComponent {\r\n\r\n  @Output() public restartAfterEdit = new EventEmitter();\r\n\r\n  recipe: Recipe;\r\n\r\n  ingredientName: string;\r\n  ingredientNames: string[];\r\n  ingredientAmount: string;\r\n  ingredientAmounts: string[];\r\n  ingredients: Ingredient[];\r\n\r\n  tags: string;\r\n\r\n  selectedCategory: ICategory = {\"enumValue\": \"\", \"text\":\"\"};\r\n  categories: ICategory[];\r\n\r\n  selectedTags: string[];\r\n\r\n  displayedColumns: string[] = ['ingredientName', 'ingredientAmount', 'actions'];\r\n  tagsAsString: string;\r\n  splitTagsArr:string[];\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  mediaString: string = \"\";\r\n\r\n  fileIsSelected = false;\r\n\r\n\r\n  @ViewChild(MatTable) table: MatTable<Ingredient>;\r\n  ingredient: Ingredient = {\r\n    \"ingredientName\": '',\r\n    \"ingredientAmount\": ''\r\n  }\r\n\r\n  constructor(public dialogRef:MatDialogRef<EditRecipeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    private _formBuilder: FormBuilder,\r\n    private _recipeService:RecipeService,\r\n    private _mediaService: MediaService,\r\n    public dialog: MatDialog){\r\n\r\n      this.ingredientNames = []\r\n      this.ingredientAmounts = []\r\n      this.ingredients = [],\r\n      this.selectedTags =[]\r\n }\r\n\r\n  async ngOnInit(){\r\n    this.recipe= this.data.selectedRecipe;\r\n\r\n    this.categories = await this._recipeService.getCategories();\r\n    this.selectedCategory = this.getSelectedCategory(this.recipe.category)\r\n\r\n    this.ingredientNames = this.recipe.ingredientNames\r\n    this.ingredientAmounts = this.recipe.ingredientMeasures\r\n\r\n    this.ingredients = this.getIgredients(this.ingredientNames, this.ingredientAmounts)\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async updateRecipe(){\r\n\r\n    this.selectedCategory = this.setSelectedCategory(this.selectedCategory)\r\n    this.recipe.category = this.selectedCategory.enumValue\r\n\r\n    this.recipe.ingredientNames = this.ingredientNames;\r\n    this.recipe.ingredientMeasures = this.ingredientAmounts;\r\n\r\n    this.recipe = await this._recipeService.updateRecipe(this.recipe);\r\n    this.dialogRef.close();\r\n }\r\n\r\n  onSubmit(){\r\n    if(this.fileIsSelected) {\r\n      this.progress.percentage = 0;\r\n      this.currentFileUpload = this.selectedFiles.item(0)!;\r\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progress.percentage = Math.round(100 * event.loaded / event.total!);\r\n        } else if (event instanceof HttpResponse) {\r\n          this.mediaString = JSON.stringify(event.body)\r\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1)\r\n\r\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\r\n          this.recipe.image = this.mediaString;\r\n          this.updateRecipe();\r\n        }\r\n        this.selectedFiles = undefined!;\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      this.updateRecipe()\r\n    }\r\n  }\r\n\r\n\r\nselectFile(event) {\r\n  this.fileIsSelected = true;\r\n  this.selectedFiles = event.target.files;\r\n}\r\n\r\ndeleteImage() {\r\n  this._mediaService.deleteFile(this.recipe.image)\r\n  this.recipe.image = \"\";\r\n}\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        INGREDIENT METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n\r\n  getIgredients(ingredientNames: string[], ingredientAmounts: string[]): Ingredient[] {\r\n\r\n    let returnIngr: Ingredient[] = [];\r\n\r\n    ingredientNames.forEach(function (value, index) {\r\n      let temp: Ingredient = {\r\n        ingredientName: value,\r\n        ingredientAmount: ingredientAmounts.at(index)!\r\n      }\r\n      returnIngr.push(temp)\r\n    });\r\n\r\n    return returnIngr;\r\n  }\r\n\r\n  onAddIngredient(){\r\n    var name = this.ingredientName\r\n    var amount = this.ingredientAmount\r\n\r\n    this.ingredientNames.push(name)\r\n    this.ingredientAmounts.push(amount)\r\n\r\n    let ingredient: Ingredient = {\r\n      ingredientName: name,\r\n      ingredientAmount: amount\r\n    }\r\n\r\n    this.ingredients.push(ingredient)\r\n    this.table.renderRows();\r\n  }\r\n\r\n  onDeleteIngredient(element: Ingredient){\r\n\r\n    let deleteIndex = -1\r\n\r\n    this.ingredients.forEach(function (value, index) {\r\n      if(value.ingredientName === element.ingredientName && value.ingredientAmount === element.ingredientAmount) {\r\n        deleteIndex = index\r\n      }\r\n    });\r\n\r\n    this.ingredientNames.splice(deleteIndex, 1)\r\n    this.ingredientAmounts.splice(deleteIndex, 1)\r\n    this.ingredients.splice(deleteIndex, 1)\r\n    this.table.renderRows();\r\n\r\n  }\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        CATEGORY METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n\r\n  setSelectedCategory(selectedCategory: ICategory): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (selectedCategory.text == category.text){\r\n        selectedCategory.enumValue = category.enumValue;\r\n      }\r\n    }\r\n    return selectedCategory;\r\n  }\r\n\r\n  getSelectedCategory(categoryEnum: string): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (categoryEnum == category.enumValue){\r\n        const returnCategory: ICategory = {\r\n          text: category.text,\r\n          enumValue: category.enumValue\r\n        }\r\n        return returnCategory;\r\n      }\r\n    }\r\n    throw Error;\r\n  }\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        TAG METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n  addTag(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    if (value) {\r\n      this.recipe.tags.push(value);\r\n    }\r\n\r\n    event.chipInput!.clear();\r\n    console.log(this.recipe.tags)\r\n  }\r\n\r\n  removeTag(tag: string): void {\r\n    const index = this.recipe.tags.indexOf(tag);\r\n\r\n    if (index >= 0) {\r\n      this.recipe.tags.splice(index, 1);\r\n    }\r\n    console.log(this.recipe.tags)\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogChangeImage, {\r\n      data: {\r\n        recipe: this.recipe\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface Ingredient {\r\n  ingredientName: string;\r\n  ingredientAmount: string;\r\n}\r\n\r\nexport interface tableColumns\r\n{\r\n    ingredientName: string,\r\n    ingredientAmount: string;\r\n    actions: string\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-change-image',\r\n  templateUrl: 'dialog-change-image.html',\r\n})\r\nexport class DialogChangeImage{\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  mediaString: string = \"\";\r\n\r\n  fileIsSelected = false;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogChangeImage>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private _mediaService: MediaService\r\n  ) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.fileIsSelected = true;\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  changeImage() {\r\n    if(this.fileIsSelected) {\r\n      this.progress.percentage = 0;\r\n      this.currentFileUpload = this.selectedFiles.item(0)!;\r\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progress.percentage = Math.round(100 * event.loaded / event.total!);\r\n        } else if (event instanceof HttpResponse) {\r\n          this.mediaString = JSON.stringify(event.body)\r\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1)\r\n\r\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\r\n          this.data.recipe.image = this.mediaString;\r\n        }\r\n        this.selectedFiles = undefined!;\r\n        }\r\n      );\r\n    }\r\n\r\n    this.onCancelClick();\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  recipe: Recipe\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}