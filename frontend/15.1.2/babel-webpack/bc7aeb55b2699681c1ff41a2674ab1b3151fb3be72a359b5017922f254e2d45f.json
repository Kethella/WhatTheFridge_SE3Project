{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FridgeItem } from 'src/app/models/fridgeItem';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/fridge.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/datepicker\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nfunction FridgeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 6);\n    i0.ɵɵtext(2, \"You don't have any fridge items yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FridgeComponent_mat_list_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-list-item\")(1, \"div\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementStart(3, \"div\", 9)(4, \"h3\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 11);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 12);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FridgeComponent_mat_list_item_10_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const fridgeItem_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openEditDialog(fridgeItem_r2));\n    });\n    i0.ɵɵelementStart(11, \"mat-icon\", 14);\n    i0.ɵɵtext(12, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function FridgeComponent_mat_list_item_10_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const fridgeItem_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteItem(fridgeItem_r2));\n    });\n    i0.ɵɵelementStart(14, \"mat-icon\", 14);\n    i0.ɵɵtext(15, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const fridgeItem_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(fridgeItem_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Amount: \", fridgeItem_r2.amount, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Expiration date: \", ctx_r1.handleDate(fridgeItem_r2.expirationDate), \"\");\n  }\n}\nexport class FridgeComponent {\n  constructor(_fridgeService, dialog) {\n    this._fridgeService = _fridgeService;\n    this.dialog = dialog;\n    this.fridgeItems = [];\n    this.text = \"\";\n    this.makeNoItemsElementVisible = true;\n  }\n  ngOnInit() {\n    this.loadItems();\n  }\n  loadItems() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.fridgeItems = yield _this._fridgeService.getFridgeItems();\n      if (_this.fridgeItems) {\n        _this.makeNoItemsElementVisible = false;\n        _this.fridgeItems = _this.fridgeItems.sort((a, b) => a.name.localeCompare(b.name));\n      } else {\n        _this.makeNoItemsElementVisible = true;\n      }\n    })();\n  }\n  openAddDialog() {\n    const dialogRef = this.dialog.open(NewFridgeItemDialog, {\n      width: '500px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n  deleteItem(fridgeItem) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      console.log(\"delete and restart\");\n      _this2.text = yield _this2._fridgeService.deleteItem(fridgeItem);\n      console.log(_this2.text);\n      _this2.ngOnInit();\n    })();\n  }\n  handleDate(dateToFix) {\n    var whereIsT = dateToFix.indexOf(\"T\");\n    var fixedDate = dateToFix.substring(0, whereIsT);\n    return fixedDate;\n  }\n  openEditDialog(fridgeItem) {\n    const dialogRef = this.dialog.open(EditFridgeItemDialog, {\n      width: '500px',\n      data: {\n        selectedItem: fridgeItem\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.ngOnInit();\n    });\n  }\n}\nFridgeComponent.ɵfac = function FridgeComponent_Factory(t) {\n  return new (t || FridgeComponent)(i0.ɵɵdirectiveInject(i1.FridgeService), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nFridgeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FridgeComponent,\n  selectors: [[\"app-fridge\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[\"id\", \"fridge\"], [\"id\", \"top-part\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"matListItemIcon\", \"\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"noItemsElement\"], [1, \"item\"], [\"src\", \"../../../assets/groceries-paper-bag.jpg\", \"alt\", \"Fridge item photo\"], [1, \"item-text\"], [1, \"item-name\"], [1, \"item-amount\"], [1, \"item-date\"], [\"mat-icon-button\", \"\", \"id\", \"delete-button\", 3, \"click\"], [\"id\", \"delete-icon\"]],\n  template: function FridgeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Fridge items\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function FridgeComponent_Template_button_click_4_listener() {\n        return ctx.openAddDialog();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\", 3);\n      i0.ɵɵtext(6, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" Add an item \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, FridgeComponent_div_8_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementStart(9, \"mat-list\");\n      i0.ɵɵtemplate(10, FridgeComponent_mat_list_item_10_Template, 16, 3, \"mat-list-item\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.makeNoItemsElementVisible == true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fridgeItems);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.MatButton, i4.MatIconButton, i5.MatIcon, i6.MatList, i6.MatListItem, i6.MatListItemIcon],\n  styles: [\"#fridge[_ngcontent-%COMP%] {\\r\\n  margin-left: 10%;\\r\\n  margin-right: 10%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n#top-part[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  padding-top: 30px;\\r\\n}\\r\\n\\r\\nmat-list[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-list-item[_ngcontent-%COMP%] {\\r\\n  height: 150px !important;\\r\\n  width: 100% !important;\\r\\n  background-color: #333333;\\r\\n  margin-bottom: 20px;\\r\\n  border-radius: 25px;\\r\\n}\\r\\n\\r\\n.item[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nimg[_ngcontent-%COMP%]{\\r\\n  height: 120px;\\r\\n  width: 120px;\\r\\n  border-radius: 25px;\\r\\n}\\r\\n\\r\\n.item-text[_ngcontent-%COMP%] {\\r\\n  padding-left: 10px;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  font-size: larger;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#delete-icon[_ngcontent-%COMP%] {\\r\\n  transform: scale(1.5);\\r\\n}\\r\\n\\r\\n#noItemsElement[_ngcontent-%COMP%] {\\r\\n  height: 500px;\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.noItemsElement[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n  color: gray;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9mcmlkZ2UvZnJpZGdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0Qix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsWUFBWTtBQUNkOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyIjZnJpZGdlIHtcclxuICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gIG1hcmdpbi1yaWdodDogMTAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuI3RvcC1wYXJ0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcGFkZGluZy10b3A6IDMwcHg7XHJcbn1cclxuXHJcbm1hdC1saXN0IHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LWxpc3QtaXRlbSB7XHJcbiAgaGVpZ2h0OiAxNTBweCAhaW1wb3J0YW50O1xyXG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbn1cclxuXHJcbi5pdGVtIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5pbWd7XHJcbiAgaGVpZ2h0OiAxMjBweDtcclxuICB3aWR0aDogMTIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcclxufVxyXG5cclxuLml0ZW0tdGV4dCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBmb250LXNpemU6IGxhcmdlcjtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbiNkZWxldGUtaWNvbiB7XHJcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xyXG59XHJcblxyXG4jbm9JdGVtc0VsZW1lbnQge1xyXG4gIGhlaWdodDogNTAwcHg7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLm5vSXRlbXNFbGVtZW50IHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIGNvbG9yOiBncmF5O1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class NewFridgeItemDialog {\n  constructor(dialogRef, _fridgeService) {\n    this.dialogRef = dialogRef;\n    this._fridgeService = _fridgeService;\n    this.newItem = new FridgeItem();\n  }\n  ngOnInit() {}\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  onAddClick() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _this3.newItem = yield _this3._fridgeService.saveItem(_this3.newItem);\n      console.log(_this3.newItem);\n      _this3.dialogRef.close();\n    })();\n  }\n}\nNewFridgeItemDialog.ɵfac = function NewFridgeItemDialog_Factory(t) {\n  return new (t || NewFridgeItemDialog)(i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i1.FridgeService));\n};\nNewFridgeItemDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewFridgeItemDialog,\n  selectors: [[\"new-fridge-item-dialog\"]],\n  decls: 27,\n  vars: 5,\n  consts: [[\"id\", \"dialog\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"item-form\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Tomato\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Ex. 5\", \"name\", \"amount\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"name\", \"expirationDate\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function NewFridgeItemDialog_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Add an item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function NewFridgeItemDialog_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newItem.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function NewFridgeItemDialog_Template_input_ngModelChange_12_listener($event) {\n        return ctx.newItem.amount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Expiration date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function NewFridgeItemDialog_Template_input_ngModelChange_16_listener($event) {\n        return ctx.newItem.expirationDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-hint\");\n      i0.ɵɵtext(18, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"mat-datepicker-toggle\", 8)(20, \"mat-datepicker\", null, 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 10)(23, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function NewFridgeItemDialog_Template_button_click_23_listener() {\n        return ctx.onCancelClick();\n      });\n      i0.ɵɵtext(24, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function NewFridgeItemDialog_Template_button_click_25_listener() {\n        return ctx.onAddClick();\n      });\n      i0.ɵɵtext(26, \"Add\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItem.amount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r0)(\"ngModel\", ctx.newItem.expirationDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"for\", _r0);\n    }\n  },\n  dependencies: [i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i4.MatButton, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatHint, i10.MatSuffix],\n  styles: [\".item-form[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9mcmlkZ2UvbmV3LWZyaWRnZS1pdGVtLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiLml0ZW0tZm9ybXtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class EditFridgeItemDialog {\n  constructor(dialogRef, data, _fridgeService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._fridgeService = _fridgeService;\n    this.selectedItem = new FridgeItem();\n  }\n  ngOnInit() {\n    this.selectedItem = this.data.selectedItem;\n    console.log(this.selectedItem);\n    console.log(this.selectedItem.name);\n  }\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  onSaveClick() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.selectedItem = yield _this4._fridgeService.updateItem(_this4.selectedItem);\n      console.log(\"updated:\");\n      console.log(_this4.selectedItem);\n    })();\n  }\n}\nEditFridgeItemDialog.ɵfac = function EditFridgeItemDialog_Factory(t) {\n  return new (t || EditFridgeItemDialog)(i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.FridgeService));\n};\nEditFridgeItemDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditFridgeItemDialog,\n  selectors: [[\"edit-fridge-item-dialog\"]],\n  decls: 27,\n  vars: 6,\n  consts: [[\"id\", \"dialog\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"item-form\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Tomato\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Ex. 5\", \"name\", \"amount\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"name\", \"expirationDate\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function EditFridgeItemDialog_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3)(5, \"mat-form-field\")(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function EditFridgeItemDialog_Template_input_ngModelChange_8_listener($event) {\n        return ctx.selectedItem.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditFridgeItemDialog_Template_input_ngModelChange_12_listener($event) {\n        return ctx.selectedItem.amount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 6)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Expiration date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditFridgeItemDialog_Template_input_ngModelChange_16_listener($event) {\n        return ctx.selectedItem.expirationDate = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-hint\");\n      i0.ɵɵtext(18, \"MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"mat-datepicker-toggle\", 8)(20, \"mat-datepicker\", null, 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 10)(23, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function EditFridgeItemDialog_Template_button_click_23_listener() {\n        return ctx.onCancelClick();\n      });\n      i0.ɵɵtext(24, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function EditFridgeItemDialog_Template_button_click_25_listener() {\n        return ctx.onSaveClick();\n      });\n      i0.ɵɵtext(26, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Edit \", ctx.selectedItem.name, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedItem.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedItem.amount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r0)(\"ngModel\", ctx.selectedItem.expirationDate);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"for\", _r0);\n    }\n  },\n  dependencies: [i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i4.MatButton, i8.MatDatepicker, i8.MatDatepickerInput, i8.MatDatepickerToggle, i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatHint, i10.MatSuffix],\n  styles: [\".item-form[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9mcmlkZ2UvZWRpdC1mcmlkZ2UtaXRlbS1kaWFsb2cuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtLWZvcm17XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FridgeItem","MAT_DIALOG_DATA","i0","FridgeComponent","constructor","_fridgeService","dialog","ngOnInit","loadItems","fridgeItems","getFridgeItems","makeNoItemsElementVisible","sort","a","b","name","localeCompare","openAddDialog","dialogRef","open","NewFridgeItemDialog","width","afterClosed","subscribe","result","deleteItem","fridgeItem","console","log","text","handleDate","dateToFix","whereIsT","indexOf","fixedDate","substring","openEditDialog","EditFridgeItemDialog","data","selectedItem","selectors","decls","vars","consts","template","ctx","onCancelClick","close","onAddClick","newItem","saveItem","onSaveClick","updateItem"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\fridge\\fridge.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\fridge\\fridge.component.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\fridge\\new-fridge-item-dialog.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\fridge\\edit-fridge-item-dialog.html"],"sourcesContent":["import { Component, OnInit, Inject} from '@angular/core';\r\nimport { FridgeService } from 'src/app/services/fridge.service';\r\nimport { FridgeItem } from 'src/app/models/fridgeItem';\r\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-fridge',\r\n  templateUrl: './fridge.component.html',\r\n  styleUrls: ['./fridge.component.css']\r\n})\r\nexport class FridgeComponent {\r\n  public fridgeItems = [] as any;\r\n  text: string = \"\";\r\n  makeNoItemsElementVisible = true;\r\n\r\n  constructor(\r\n    private _fridgeService: FridgeService,\r\n    public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadItems();\r\n\r\n  }\r\n\r\n  async loadItems() {\r\n    this.fridgeItems = await this._fridgeService.getFridgeItems();\r\n    if(this.fridgeItems){\r\n      this.makeNoItemsElementVisible = false;\r\n      this.fridgeItems = this.fridgeItems.sort((a: FridgeItem, b: FridgeItem) => a.name.localeCompare(b.name));\r\n    }\r\n    else{\r\n      this.makeNoItemsElementVisible = true;\r\n    }\r\n  }\r\n\r\n\r\n  openAddDialog(): void {\r\n    const dialogRef = this.dialog.open(NewFridgeItemDialog, {\r\n      width: '500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  async deleteItem(fridgeItem: FridgeItem) {\r\n    console.log(\"delete and restart\");\r\n    this.text = await this._fridgeService.deleteItem(fridgeItem);\r\n    console.log(this.text)\r\n    this.ngOnInit();\r\n  }\r\n\r\n  handleDate(dateToFix: string): string {\r\n    var whereIsT = dateToFix.indexOf(\"T\");\r\n    var fixedDate = dateToFix.substring(0, whereIsT)\r\n\r\n    return fixedDate;\r\n  }\r\n\r\n  openEditDialog(fridgeItem: FridgeItem) {\r\n    const dialogRef = this.dialog.open(EditFridgeItemDialog, {\r\n      width: '500px',\r\n      data: {\r\n        selectedItem: fridgeItem\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'new-fridge-item-dialog',\r\n  templateUrl: 'new-fridge-item-dialog.html',\r\n  styleUrls: ['./new-fridge-item-dialog.css']\r\n})\r\nexport class NewFridgeItemDialog implements OnInit{\r\n\r\n  newItem = new FridgeItem;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<NewFridgeItemDialog>,\r\n    private _fridgeService: FridgeService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async onAddClick() {\r\n    this.newItem = await this._fridgeService.saveItem(this.newItem);\r\n    console.log(this.newItem)\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-fridge-item-dialog',\r\n  templateUrl: './edit-fridge-item-dialog.html',\r\n  styleUrls: ['./edit-fridge-item-dialog.css']\r\n})\r\nexport class EditFridgeItemDialog implements OnInit{\r\n\r\n  selectedItem = new FridgeItem;\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditFridgeItemDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private _fridgeService: FridgeService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.selectedItem = this.data.selectedItem;\r\n    console.log(this.selectedItem)\r\n    console.log(this.selectedItem.name)\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n\r\n  }\r\n\r\n  async onSaveClick() {\r\n    this.selectedItem = await this._fridgeService.updateItem(this.selectedItem);\r\n    console.log(\"updated:\")\r\n    console.log(this.selectedItem)\r\n  }\r\n}\r\n\r\nexport interface DialogData {\r\n  selectedItem: FridgeItem\r\n}\r\n\r\n","<div id=\"fridge\">\r\n\r\n  <div id=\"top-part\">\r\n    <h1>Fridge items</h1>\r\n    <button mat-raised-button (click)=\"openAddDialog()\">\r\n      <mat-icon matListItemIcon>add</mat-icon>\r\n      Add an item\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"makeNoItemsElementVisible == true\">\r\n    <h3 class=\"noItemsElement\">You don't have any fridge items yet.</h3>\r\n  </div>\r\n\r\n  <mat-list>\r\n\r\n    <mat-list-item *ngFor=\"let fridgeItem of fridgeItems\">\r\n\r\n        <div class=\"item\">\r\n\r\n          <img src=\"../../../assets/groceries-paper-bag.jpg\" alt=\"Fridge item photo\">\r\n\r\n          <div class=\"item-text\">\r\n            <h3 class=\"item-name\">{{fridgeItem.name}}</h3>\r\n            <div class=\"item-amount\">Amount: {{fridgeItem.amount}}</div>\r\n            <div class=\"item-date\">Expiration date: {{handleDate(fridgeItem.expirationDate)}}</div>\r\n          </div>\r\n\r\n          <button mat-icon-button id=\"delete-button\" (click)=\"openEditDialog(fridgeItem)\">\r\n            <mat-icon id=\"delete-icon\">edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button id=\"delete-button\" (click)=\"deleteItem(fridgeItem)\">\r\n            <mat-icon id=\"delete-icon\">delete</mat-icon>\r\n          </button>\r\n\r\n        </div>\r\n\r\n    </mat-list-item>\r\n\r\n  </mat-list>\r\n\r\n\r\n</div>\r\n\r\n","<div id=\"dialog\">\r\n\r\n  <h1 mat-dialog-title>Add an item</h1>\r\n\r\n  <div mat-dialog-content>\r\n\r\n    <form class=\"item-form\">\r\n      <mat-form-field>\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"Ex. Tomato\" name=\"name\" [(ngModel)]=\"newItem.name\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Amount</mat-label>\r\n        <input matInput placeholder=\"Ex. 5\" name=\"amount\" [(ngModel)]=\"newItem.amount\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Expiration date</mat-label>\r\n        <input matInput [matDatepicker]=\"picker\" name=\"expirationDate\" [(ngModel)]=\"newItem.expirationDate\">\r\n        <mat-hint>MM/DD/YYYY</mat-hint>\r\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onAddClick()\">Add</button>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n","<div id=\"dialog\">\r\n\r\n  <h1 mat-dialog-title>Edit {{selectedItem.name}}</h1>\r\n\r\n  <div mat-dialog-content>\r\n\r\n    <form class=\"item-form\">\r\n      <mat-form-field>\r\n        <mat-label>Name</mat-label>\r\n        <input matInput placeholder=\"Ex. Tomato\" name=\"name\" [(ngModel)]=\"selectedItem.name\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Amount</mat-label>\r\n        <input matInput placeholder=\"Ex. 5\" name=\"amount\" [(ngModel)]=\"selectedItem.amount\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Expiration date</mat-label>\r\n        <input matInput [matDatepicker]=\"picker\" name=\"expirationDate\" [(ngModel)]=\"selectedItem.expirationDate\">\r\n        <mat-hint>MM/DD/YYYY</mat-hint>\r\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <div mat-dialog-actions>\r\n    <button mat-raised-button (click)=\"onCancelClick()\">Cancel</button>\r\n    <button mat-raised-button (click)=\"onSaveClick()\">Save</button>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}