{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"src/app/services/authentication.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(_accountService, _authService, formBuilder, http, router) {\n    this._accountService = _accountService;\n    this._authService = _authService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.queryParams = new HttpParams();\n    this.account = {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"email\": \"\",\n      \"password\": \"\",\n      \"securityQuestion\": \"\",\n      \"securityAnswer\": \"\"\n    };\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.queryParams = _this.queryParams.append(\"email\", _this.account.email);\n      _this.queryParams = _this.queryParams.append(\"password\", _this.account.password);\n      _this.account = yield _this._accountService.findAccount(_this.queryParams);\n      console.log(_this.account);\n      if (_this.account.id == \"\") {\n        alert(\"User not found. Please check again your email and password.\");\n      } else {\n        _this.loginForm.reset();\n        _this._accountService.sendOwnerAccountToServices(_this.account.id);\n        _this._authService.login();\n      }\n      /*this.http.get<any>(\"http://localhost:8085/api/v1/accounts\")\r\n      .subscribe(res =>{\r\n        let user = res.find((a:Account)=>{\r\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\r\n        }\r\n        )\r\n        console.log(res)\r\n        if(user){\r\n          alert(\"Login success\")\r\n          console.log(user.id);\r\n          this._accountService.sendOwnerAccountToServices(user.id);\r\n          this.router.navigate(['home']);\r\n        } else{\r\n          alert(\"User not found\")\r\n        }\r\n      },\r\n      err=>{\r\n        alert(\"Something went wrong !!\")\r\n            })*/\n    })();\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i5.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 2,\n  consts: [[1, \"bg\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [1, \"sign-up-form\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"routerLink\", \"../sign-up\", 2, \"display\", \"flex\", \"justify-content\", \"flex-end\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\");\n      i0.ɵɵtext(7, \"Welcome back.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"h6\");\n      i0.ɵɵtext(9, \"Clean out your fridge and enjoy a delicious meal\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"form\", 6)(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.account.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵtext(16, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.account.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_22_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 14);\n      i0.ɵɵtext(25, \" New User? Click to sign up! \");\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelement(26, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.password);\n    }\n  },\n  dependencies: [i5.RouterOutlet, i5.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".card[_ngcontent-%COMP%]{\\r\\n    border: none;\\r\\n    border-radius: 25px;\\r\\n    width:500px;\\r\\n    padding:50px;\\r\\n    position: absolute;\\r\\n    top:50%;\\r\\n    left:50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    background: rgb(230, 244, 246);\\r\\n}\\r\\n\\r\\n.bg[_ngcontent-%COMP%]{\\r\\n    background: rgb(95, 193, 172);\\r\\n    height : 100vh;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hY2NvdW50LWF1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFFBQVE7SUFDUixnQ0FBZ0M7SUFDaEMsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICB3aWR0aDo1MDBweDtcclxuICAgIHBhZGRpbmc6NTBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDo1MCU7XHJcbiAgICBsZWZ0OjUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDIzMCwgMjQ0LCAyNDYpO1xyXG59XHJcblxyXG4uYmd7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoOTUsIDE5MywgMTcyKTtcclxuICAgIGhlaWdodCA6IDEwMHZoO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;;;;;AAa7D,OAAM,MAAOC,cAAc;EAazBC,YAAoBC,eAA+B,EACzCC,YAAmC,EACnCC,WAAwB,EACxBC,IAAe,EACfC,MAAa;IAJH,oBAAe,GAAfJ,eAAe;IACzB,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IAdT,gBAAW,GAAG,IAAIP,UAAU,EAAE;IAC9B,YAAO,GAAY;MACxB,IAAI,EAAE,EAAE;MACR,MAAM,EAAE,EAAE;MACV,OAAO,EAAE,EAAE;MACX,UAAU,EAAE,EAAE;MACd,kBAAkB,EAAE,EAAE;MACtB,gBAAgB,EAAE;KACnB;EAM2B;EAE5BQ,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,KAAK,EAAC,CAAC,EAAE,CAAC;MACVC,QAAQ,EAAC,CAAC,EAAE;KACb,CAAC;EACJ;EAEMC,KAAK;IAAA;IAAA;MACT,KAAI,CAACC,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,OAAO,EAAE,KAAI,CAACC,OAAO,CAACL,KAAK,CAAC;MACvE,KAAI,CAACG,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,UAAU,EAAE,KAAI,CAACC,OAAO,CAACJ,QAAQ,CAAC;MAC7E,KAAI,CAACI,OAAO,SAAS,KAAI,CAACb,eAAe,CAACc,WAAW,CAAC,KAAI,CAACH,WAAW,CAAC;MAEvEI,OAAO,CAACC,GAAG,CAAC,KAAI,CAACH,OAAO,CAAC;MAEzB,IAAG,KAAI,CAACA,OAAO,CAACI,EAAE,IAAI,EAAE,EAAC;QACvBC,KAAK,CAAC,6DAA6D,CAAC;OACrE,MACI;QACH,KAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;QACtB,KAAI,CAACnB,eAAe,CAACoB,0BAA0B,CAAC,KAAI,CAACP,OAAO,CAACI,EAAE,CAAC;QAChE,KAAI,CAAChB,YAAY,CAACS,KAAK,EAAE;;MAI3B;;;;;;;;;;;;;;;;;;;IAAA;EAoBF;;;AA/DWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3BC,8BAAgB;MAMYA,6BAAa;MAAAA,iBAAK;MACtBA,0BAAI;MAAAA,gEAAgD;MAAAA,iBAAK;MAE7DA,gCAA2B;MAEgCA,8BAAa;MAAAA,iBAAQ;MACxEA,iCAAuI;MAA5BA;QAAA;MAAA,EAA2B;MAAtIA,iBAAuI;MACvIA,gCAAsC;MAAAA,+DAA8C;MAAAA,iBAAM;MAE5FA,+BAAkB;MACsCA,yBAAQ;MAAAA,iBAAQ;MACtEA,kCAAsH;MAA/BA;QAAA;MAAA,EAA8B;MAArHA,iBAAsH;MAExHA,4BAAK;MAC2CA;QAAA,OAASC,WAAO;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAC9EA,8BAA4E;MAACA,8CAA4B;MAAAA,iBAAI;MAQrIA,iCAA+B;;;MAjBoGA,gBAA2B;MAA3BA,2CAA2B;MAK/CA,eAA8B;MAA9BA,8CAA8B","names":["HttpParams","LoginComponent","constructor","_accountService","_authService","formBuilder","http","router","ngOnInit","loginForm","group","email","password","login","queryParams","append","account","findAccount","console","log","id","alert","reset","sendOwnerAccountToServices","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\login\\login.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\login\\login.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm!: FormGroup;\r\n  public queryParams = new HttpParams();\r\n  public account: Account = {\r\n    \"id\": \"\",\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"securityQuestion\": \"\",\r\n    \"securityAnswer\": \"\"\r\n  }\r\n\r\n  constructor(private _accountService: AccountService,\r\n    private _authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private http:HttpClient,\r\n    private router:Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      email:[''],\r\n      password:[''],\r\n    })\r\n  }\r\n\r\n  async login(){\r\n    this.queryParams = this.queryParams.append(\"email\", this.account.email);\r\n    this.queryParams = this.queryParams.append(\"password\", this.account.password);\r\n    this.account = await this._accountService.findAccount(this.queryParams);\r\n\r\n    console.log(this.account)\r\n\r\n    if(this.account.id == \"\"){\r\n      alert(\"User not found. Please check again your email and password.\")\r\n    }\r\n    else {\r\n      this.loginForm.reset();\r\n      this._accountService.sendOwnerAccountToServices(this.account.id);\r\n      this._authService.login()\r\n    }\r\n\r\n\r\n    /*this.http.get<any>(\"http://localhost:8085/api/v1/accounts\")\r\n    .subscribe(res =>{\r\n      let user = res.find((a:Account)=>{\r\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\r\n      }\r\n      )\r\n      console.log(res)\r\n      if(user){\r\n        alert(\"Login success\")\r\n        console.log(user.id);\r\n        this._accountService.sendOwnerAccountToServices(user.id);\r\n        this.router.navigate(['home']);\r\n      } else{\r\n        alert(\"User not found\")\r\n      }\r\n    },\r\n    err=>{\r\n      alert(\"Something went wrong !!\")\r\n\r\n    })*/\r\n  }\r\n\r\n\r\n  }\r\n\r\n\r\n","<div class=\"bg\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card\">\r\n                    <div class=\"text-center\">\r\n                        <h1>Welcome back.</h1>\r\n                        <h6>Clean out your fridge and enjoy a delicious meal</h6>\r\n                    </div>\r\n                    <form class=\"sign-up-form\">\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"email\" [(ngModel)]=\"account.email\">\r\n                            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n                          </div>\r\n                          <div class=\"mb-3\">\r\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" [(ngModel)]=\"account.password\">\r\n                          </div>\r\n                          <div>\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"login()\">Login</button>\r\n                            <a style=\"display: flex; justify-content: flex-end\" routerLink=\"../sign-up\"> New User? Click to sign up! </a>\r\n                          </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}