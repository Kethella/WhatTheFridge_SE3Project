{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/recipe.service\";\nimport * as i4 from \"src/app/services/media.service\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/chips\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/select\";\nimport * as i14 from \"@angular/material/table\";\nfunction EditRecipeComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Change Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵelement(4, \"img\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 28)(6, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function EditRecipeComponent_div_17_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.deleteImage());\n    });\n    i0.ɵɵtext(7, \"Delete Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function EditRecipeComponent_div_17_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.openDialog());\n    });\n    i0.ɵɵtext(9, \"Change Image\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r0.recipe.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction EditRecipeComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Add Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 35);\n    i0.ɵɵlistener(\"change\", function EditRecipeComponent_div_18_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.selectFile($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditRecipeComponent_th_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 36);\n    i0.ɵɵtext(1, \"Ingredient\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r18.ingredientName, \" \");\n  }\n}\nfunction EditRecipeComponent_th_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 36);\n    i0.ɵɵtext(1, \"Amount\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r19.ingredientAmount, \" \");\n  }\n}\nfunction EditRecipeComponent_th_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 36);\n    i0.ɵɵtext(1, \" Action \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 37)(1, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function EditRecipeComponent_td_42_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const element_r20 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.onDeleteIngredient(element_r20));\n    });\n    i0.ɵɵtext(2, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditRecipeComponent_tr_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 38);\n  }\n}\nfunction EditRecipeComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 39);\n  }\n}\nfunction EditRecipeComponent_mat_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r24.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r24.text, \" \");\n  }\n}\nfunction EditRecipeComponent_mat_chip_row_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 41);\n    i0.ɵɵlistener(\"removed\", function EditRecipeComponent_mat_chip_row_61_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const tag_r25 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.removeTag(tag_r25));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 42)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tag_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r25, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"remove \" + tag_r25);\n  }\n}\nexport class EditRecipeComponent {\n  constructor(dialogRef, data, _formBuilder, _recipeService, _mediaService, dialog, snackBar) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._formBuilder = _formBuilder;\n    this._recipeService = _recipeService;\n    this._mediaService = _mediaService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.restartAfterEdit = new EventEmitter();\n    this.selectedCategory = {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n    this.displayedColumns = ['ingredientName', 'ingredientAmount', 'actions'];\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.addOnBlur = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.progress = {\n      percentage: 0\n    };\n    this.selectedFile = null;\n    this.mediaString = \"\";\n    this.fileIsSelected = false;\n    this.ingredient = {\n      \"ingredientName\": '',\n      \"ingredientAmount\": ''\n    };\n    this.ingredientNames = [];\n    this.ingredientAmounts = [];\n    this.ingredients = [], this.selectedTags = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.recipe = _this.data.selectedRecipe;\n      _this.categories = yield _this._recipeService.getCategories();\n      _this.selectedCategory = _this.getSelectedCategory(_this.recipe.category);\n      _this.ingredientNames = _this.recipe.ingredientNames;\n      _this.ingredientAmounts = _this.recipe.ingredientMeasures;\n      _this.ingredients = _this.getIgredients(_this.ingredientNames, _this.ingredientAmounts);\n    })();\n  }\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n  updateRecipe() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.selectedCategory = _this2.setSelectedCategory(_this2.selectedCategory);\n      _this2.recipe.category = _this2.selectedCategory.enumValue;\n      _this2.recipe.ingredientNames = _this2.ingredientNames;\n      _this2.recipe.ingredientMeasures = _this2.ingredientAmounts;\n      _this2.recipe = yield _this2._recipeService.updateRecipe(_this2.recipe);\n      _this2.dialogRef.close();\n    })();\n  }\n  onSubmit() {\n    if (this.emptyMandatoryFields()) {\n      if (this.fileIsSelected) {\n        this.progress.percentage = 0;\n        this.currentFileUpload = this.selectedFiles.item(0);\n        this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progress.percentage = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            this.mediaString = JSON.stringify(event.body);\n            this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1);\n            // a bit ugly but i cannot get the mediaString out of the subscribe :/\n            this.recipe.image = this.mediaString;\n            this.updateRecipe();\n          }\n          this.selectedFiles = undefined;\n        });\n      } else {\n        this.updateRecipe();\n      }\n    } else {\n      this.snackBar.open(\"Make sure that all mandatory fields are not empty.\", \"Ok\", {\n        duration: 5000,\n        panelClass: ['my-snackbar']\n      });\n    }\n  }\n  selectFile(event) {\n    this.fileIsSelected = true;\n    this.selectedFiles = event.target.files;\n  }\n  deleteImage() {\n    this._mediaService.deleteFile(this.recipe.image);\n    this.recipe.image = \"\";\n  }\n  /*  --------------------------------------------------------------------------------\r\n        INGREDIENT METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  getIgredients(ingredientNames, ingredientAmounts) {\n    let returnIngr = [];\n    ingredientNames.forEach(function (value, index) {\n      let temp = {\n        ingredientName: value,\n        ingredientAmount: ingredientAmounts.at(index)\n      };\n      returnIngr.push(temp);\n    });\n    return returnIngr;\n  }\n  onAddIngredient() {\n    var name = this.ingredientName;\n    var amount = this.ingredientAmount;\n    this.ingredientNames.push(name);\n    this.ingredientAmounts.push(amount);\n    let ingredient = {\n      ingredientName: name,\n      ingredientAmount: amount\n    };\n    this.ingredients.push(ingredient);\n    this.table.renderRows();\n  }\n  onDeleteIngredient(element) {\n    let deleteIndex = -1;\n    this.ingredients.forEach(function (value, index) {\n      if (value.ingredientName === element.ingredientName && value.ingredientAmount === element.ingredientAmount) {\n        deleteIndex = index;\n      }\n    });\n    this.ingredientNames.splice(deleteIndex, 1);\n    this.ingredientAmounts.splice(deleteIndex, 1);\n    this.ingredients.splice(deleteIndex, 1);\n    this.table.renderRows();\n  }\n  /*  --------------------------------------------------------------------------------\r\n        CATEGORY METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  setSelectedCategory(selectedCategory) {\n    for (let category of this.categories) {\n      if (selectedCategory.text == category.text) {\n        selectedCategory.enumValue = category.enumValue;\n      }\n    }\n    return selectedCategory;\n  }\n  getSelectedCategory(categoryEnum) {\n    for (let category of this.categories) {\n      if (categoryEnum == category.enumValue) {\n        const returnCategory = {\n          text: category.text,\n          enumValue: category.enumValue\n        };\n        return returnCategory;\n      }\n    }\n    throw Error;\n  }\n  /*  --------------------------------------------------------------------------------\r\n        TAG METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\n  addTag(event) {\n    const value = (event.value || '').trim();\n    if (value) {\n      this.recipe.tags.push(value);\n    }\n    event.chipInput.clear();\n    console.log(this.recipe.tags);\n  }\n  removeTag(tag) {\n    const index = this.recipe.tags.indexOf(tag);\n    if (index >= 0) {\n      this.recipe.tags.splice(index, 1);\n    }\n    console.log(this.recipe.tags);\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogChangeImage, {\n      data: {\n        recipe: this.recipe\n      }\n    });\n  }\n  /*  --------------------------------------------------------------------------------\r\n        ERROR HANDLING\r\n      --------------------------------------------------------------------------------\r\n  */\n  emptyMandatoryFields() {\n    if (this.recipe.name === \"\" || this.recipe.name === \" \") {\n      return false;\n    }\n    if (this.recipe.ingredientNames.length === 0) {\n      return false;\n    }\n    if (this.recipe.ingredientMeasures.length === 0) {\n      return false;\n    }\n    if (this.recipe.instructions === \"\" || this.recipe.instructions === null) {\n      return false;\n    }\n    if (this.recipe.category == \"\" || this.recipe.category == null) {\n      return false;\n    }\n    return true;\n  }\n}\nEditRecipeComponent.ɵfac = function EditRecipeComponent_Factory(t) {\n  return new (t || EditRecipeComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i4.MediaService), i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nEditRecipeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditRecipeComponent,\n  selectors: [[\"app-edit-recipe\"]],\n  viewQuery: function EditRecipeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatTable, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  outputs: {\n    restartAfterEdit: \"restartAfterEdit\"\n  },\n  decls: 75,\n  vars: 15,\n  consts: [[\"id\", \"dialog-header\"], [\"mat-dialog-title\", \"\", \"id\", \"recipeName\"], [\"id\", \"actions\"], [\"mat-mini-fab\", \"\", \"mat-dialog-close\", \"\", \"id\", \"close-button\", 3, \"click\"], [\"id\", \"recipe\"], [1, \"recipeField\"], [\"matInput\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"id\", \"addIngredient\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 1, \"addButton\", 3, \"click\"], [\"mat-table\", \"\", \"id\", \"table\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"ingredientName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"ingredientAmount\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"id\", \"categoryTitle\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-chip-list\"], [\"chipGrid\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Add tag\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [\"appearance\", \"fill\", 1, \"instructions\"], [1, \"btn-group\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"mat\", \"\", \"mat-raised-button\", \"\", 1, \"focus-btn\", 3, \"click\"], [1, \"content\"], [\"id\", \"recipe-image\", \"height\", \"300px\", \"width\", \"300px\", 3, \"src\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-raised-button\", \"\", 1, \"focus-btn\", 3, \"click\"], [\"type\", \"file\", \"id\", \"customFile\", 3, \"change\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [3, \"value\"], [3, \"removed\"], [\"matChipRemove\", \"\"]],\n  template: function EditRecipeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Edit Recipe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-dialog-actions\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_4_listener() {\n        return ctx.onCloseClick();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6, \"close\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"mat-dialog-content\")(8, \"div\", 4)(9, \"div\", 5)(10, \"h3\");\n      i0.ɵɵtext(11, \"Edit name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.recipe.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 5);\n      i0.ɵɵtemplate(17, EditRecipeComponent_div_17_Template, 10, 1, \"div\", 7);\n      i0.ɵɵtemplate(18, EditRecipeComponent_div_18_Template, 4, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"div\", 8)(21, \"h3\");\n      i0.ɵɵtext(22, \"Add Ingredients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"mat-form-field\")(24, \"mat-label\");\n      i0.ɵɵtext(25, \"Ingredient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.ingredientName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"mat-form-field\")(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.ingredientAmount = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_31_listener() {\n        return ctx.onAddIngredient();\n      });\n      i0.ɵɵtext(32, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"table\", 11);\n      i0.ɵɵelementContainerStart(34, 12);\n      i0.ɵɵtemplate(35, EditRecipeComponent_th_35_Template, 2, 0, \"th\", 13);\n      i0.ɵɵtemplate(36, EditRecipeComponent_td_36_Template, 2, 1, \"td\", 14);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(37, 15);\n      i0.ɵɵtemplate(38, EditRecipeComponent_th_38_Template, 2, 0, \"th\", 13);\n      i0.ɵɵtemplate(39, EditRecipeComponent_td_39_Template, 2, 1, \"td\", 14);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(40, 16);\n      i0.ɵɵtemplate(41, EditRecipeComponent_th_41_Template, 2, 0, \"th\", 13);\n      i0.ɵɵtemplate(42, EditRecipeComponent_td_42_Template, 3, 0, \"td\", 14);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(43, EditRecipeComponent_tr_43_Template, 1, 0, \"tr\", 17);\n      i0.ɵɵtemplate(44, EditRecipeComponent_tr_44_Template, 1, 0, \"tr\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 5)(46, \"h3\", 19);\n      i0.ɵɵtext(47, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"mat-form-field\", 20)(49, \"mat-label\");\n      i0.ɵɵtext(50, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"mat-select\", 21);\n      i0.ɵɵlistener(\"valueChange\", function EditRecipeComponent_Template_mat_select_valueChange_51_listener($event) {\n        return ctx.selectedCategory.text = $event;\n      });\n      i0.ɵɵelementStart(52, \"mat-option\");\n      i0.ɵɵtext(53, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(54, EditRecipeComponent_mat_option_54_Template, 2, 2, \"mat-option\", 22);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(55, \"div\", 5)(56, \"h3\");\n      i0.ɵɵtext(57, \"Tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"mat-form-field\", 23)(59, \"mat-chip-grid\", null, 24);\n      i0.ɵɵtemplate(61, EditRecipeComponent_mat_chip_row_61_Template, 5, 2, \"mat-chip-row\", 25);\n      i0.ɵɵelementStart(62, \"input\", 26);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function EditRecipeComponent_Template_input_matChipInputTokenEnd_62_listener($event) {\n        return ctx.addTag($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(63, \"div\", 5)(64, \"h3\");\n      i0.ɵɵtext(65, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"mat-form-field\", 27)(67, \"mat-label\");\n      i0.ɵɵtext(68, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"textarea\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_textarea_ngModelChange_69_listener($event) {\n        return ctx.recipe.instructions = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(70, \"div\", 28)(71, \"button\", 29);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_71_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(72, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"button\", 30);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_73_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(74, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r11 = i0.ɵɵreference(60);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.recipe.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.recipe.image != \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.recipe.image === \"\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.ingredientName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.ingredientAmount);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"dataSource\", ctx.ingredients);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", ctx.selectedCategory.text);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.recipe.tags);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matChipInputFor\", _r11)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.recipe.instructions);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.NgModel, i7.MatOption, i8.MatButton, i8.MatMiniFabButton, i9.MatChipGrid, i9.MatChipInput, i9.MatChipRemove, i9.MatChipRow, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i10.MatIcon, i11.MatInput, i12.MatFormField, i12.MatLabel, i13.MatSelect, i14.MatTable, i14.MatHeaderCellDef, i14.MatHeaderRowDef, i14.MatColumnDef, i14.MatCellDef, i14.MatRowDef, i14.MatHeaderCell, i14.MatCell, i14.MatHeaderRow, i14.MatRow],\n  styles: [\"#dialog-header[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.recipeField[_ngcontent-%COMP%] {\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\\r\\n#categoryTitle[_ngcontent-%COMP%] {\\r\\n  padding-top: 15px;\\r\\n}\\r\\n\\r\\n.focus-btn[_ngcontent-%COMP%] {\\r\\n  background-color: aquamarine;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.example-chip-list[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.instructions[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-group[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  gap: 10px;\\r\\n}\\r\\n\\r\\n#recipe-image[_ngcontent-%COMP%]{\\r\\n  padding-bottom: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9teS1yZWNpcGVzL3JlY2lwZS1saXN0L2VkaXQtcmVjaXBlL2VkaXQtcmVjaXBlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7OztBQUdBO0VBQ0UsV0FBVztBQUNiOzs7QUFHQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztBQUNYOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiI2RpYWxvZy1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbi5yZWNpcGVGaWVsZCB7XHJcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbiNjYXRlZ29yeVRpdGxlIHtcclxuICBwYWRkaW5nLXRvcDogMTVweDtcclxufVxyXG5cclxuLmZvY3VzLWJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYXF1YW1hcmluZTtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4uaW5zdHJ1Y3Rpb25ze1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5cclxuLmJ0bi1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGdhcDogMTBweDtcclxufVxyXG5cclxuI3JlY2lwZS1pbWFnZXtcclxuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class DialogChangeImage {\n  constructor(dialogRef, data, _mediaService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._mediaService = _mediaService;\n    this.progress = {\n      percentage: 0\n    };\n    this.selectedFile = null;\n    this.mediaString = \"\";\n    this.fileIsSelected = false;\n  }\n  onCancelClick() {\n    this.dialogRef.close();\n  }\n  selectFile(event) {\n    this.fileIsSelected = true;\n    this.selectedFiles = event.target.files;\n  }\n  changeImage() {\n    if (this.fileIsSelected) {\n      this.progress.percentage = 0;\n      this.currentFileUpload = this.selectedFiles.item(0);\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress.percentage = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.mediaString = JSON.stringify(event.body);\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1);\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\n          this.data.recipe.image = this.mediaString;\n        }\n        this.selectedFiles = undefined;\n      });\n    }\n    this.onCancelClick();\n  }\n}\nDialogChangeImage.ɵfac = function DialogChangeImage_Factory(t) {\n  return new (t || DialogChangeImage)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.MediaService));\n};\nDialogChangeImage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogChangeImage,\n  selectors: [[\"dialog-change-image\"]],\n  decls: 10,\n  vars: 0,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"type\", \"file\", \"id\", \"customFile\", 3, \"change\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", 3, \"click\"]],\n  template: function DialogChangeImage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\", 0);\n      i0.ɵɵtext(2, \"Change file\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n      i0.ɵɵlistener(\"change\", function DialogChangeImage_Template_input_change_4_listener($event) {\n        return ctx.selectFile($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function DialogChangeImage_Template_button_click_6_listener() {\n        return ctx.onCancelClick();\n      });\n      i0.ɵɵtext(7, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function DialogChangeImage_Template_button_click_8_listener() {\n        return ctx.changeImage();\n      });\n      i0.ɵɵtext(9, \"Change\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i8.MatButton, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["COMMA","ENTER","HttpEventType","HttpResponse","EventEmitter","MAT_DIALOG_DATA","MatTable","i0","EditRecipeComponent","constructor","dialogRef","data","_formBuilder","_recipeService","_mediaService","dialog","snackBar","percentage","ingredientNames","ingredientAmounts","ingredients","selectedTags","ngOnInit","recipe","selectedRecipe","categories","getCategories","selectedCategory","getSelectedCategory","category","ingredientMeasures","getIgredients","onCloseClick","close","onCancel","updateRecipe","setSelectedCategory","enumValue","onSubmit","emptyMandatoryFields","fileIsSelected","progress","currentFileUpload","selectedFiles","item","uploadFile","subscribe","event","type","UploadProgress","Math","round","loaded","total","mediaString","JSON","stringify","body","slice","length","image","undefined","open","duration","panelClass","selectFile","target","files","deleteImage","deleteFile","returnIngr","forEach","value","index","temp","ingredientName","ingredientAmount","at","push","onAddIngredient","name","amount","ingredient","table","renderRows","onDeleteIngredient","element","deleteIndex","splice","text","categoryEnum","returnCategory","Error","addTag","trim","tags","chipInput","clear","console","log","removeTag","tag","indexOf","openDialog","DialogChangeImage","instructions","selectors","viewQuery","ctx","onCancelClick","changeImage","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\edit-recipe.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\edit-recipe.component.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\dialog-change-image.html"],"sourcesContent":["import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { HttpEventType, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Component, ViewChild, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ICategory } from 'src/app/models/category';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { MediaService } from 'src/app/services/media.service';\r\nimport { RecipeService } from 'src/app/services/recipe.service';\r\nimport { MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-recipe',\r\n  templateUrl: './edit-recipe.component.html',\r\n  styleUrls: ['./edit-recipe.component.css']\r\n})\r\nexport class EditRecipeComponent {\r\n\r\n  @Output() public restartAfterEdit = new EventEmitter();\r\n\r\n  recipe: Recipe;\r\n\r\n  ingredientName: string;\r\n  ingredientNames: string[];\r\n  ingredientAmount: string;\r\n  ingredientAmounts: string[];\r\n  ingredients: Ingredient[];\r\n\r\n  tags: string;\r\n\r\n  selectedCategory: ICategory = {\"enumValue\": \"\", \"text\":\"\"};\r\n  categories: ICategory[];\r\n\r\n  selectedTags: string[];\r\n\r\n  displayedColumns: string[] = ['ingredientName', 'ingredientAmount', 'actions'];\r\n  tagsAsString: string;\r\n  splitTagsArr:string[];\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  mediaString: string = \"\";\r\n\r\n  fileIsSelected = false;\r\n\r\n\r\n  @ViewChild(MatTable) table: MatTable<Ingredient>;\r\n  ingredient: Ingredient = {\r\n    \"ingredientName\": '',\r\n    \"ingredientAmount\": ''\r\n  }\r\n\r\n  constructor(public dialogRef:MatDialogRef<EditRecipeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    private _formBuilder: FormBuilder,\r\n    private _recipeService:RecipeService,\r\n    private _mediaService: MediaService,\r\n    public dialog: MatDialog,\r\n    private snackBar:MatSnackBar){\r\n\r\n      this.ingredientNames = []\r\n      this.ingredientAmounts = []\r\n      this.ingredients = [],\r\n      this.selectedTags =[]\r\n }\r\n\r\n  async ngOnInit(){\r\n    this.recipe= this.data.selectedRecipe;\r\n\r\n    this.categories = await this._recipeService.getCategories();\r\n    this.selectedCategory = this.getSelectedCategory(this.recipe.category)\r\n\r\n    this.ingredientNames = this.recipe.ingredientNames\r\n    this.ingredientAmounts = this.recipe.ingredientMeasures\r\n\r\n    this.ingredients = this.getIgredients(this.ingredientNames, this.ingredientAmounts)\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  async updateRecipe(){\r\n\r\n    this.selectedCategory = this.setSelectedCategory(this.selectedCategory)\r\n    this.recipe.category = this.selectedCategory.enumValue\r\n\r\n    this.recipe.ingredientNames = this.ingredientNames;\r\n    this.recipe.ingredientMeasures = this.ingredientAmounts;\r\n\r\n    this.recipe = await this._recipeService.updateRecipe(this.recipe);\r\n    this.dialogRef.close();\r\n }\r\n\r\n  onSubmit(){\r\n    if(this.emptyMandatoryFields()){\r\n      if(this.fileIsSelected) {\r\n        this.progress.percentage = 0;\r\n        this.currentFileUpload = this.selectedFiles.item(0)!;\r\n        this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\r\n          if (event.type === HttpEventType.UploadProgress) {\r\n            this.progress.percentage = Math.round(100 * event.loaded / event.total!);\r\n          } else if (event instanceof HttpResponse) {\r\n            this.mediaString = JSON.stringify(event.body)\r\n            this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1)\r\n\r\n            // a bit ugly but i cannot get the mediaString out of the subscribe :/\r\n            this.recipe.image = this.mediaString;\r\n            this.updateRecipe();\r\n          }\r\n          this.selectedFiles = undefined!;\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        this.updateRecipe()\r\n      }\r\n    }\r\n    else{\r\n      this.snackBar.open(\"Make sure that all mandatory fields are not empty.\", \"Ok\", {\r\n        duration: 5000,\r\n        panelClass: ['my-snackbar']\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\nselectFile(event) {\r\n  this.fileIsSelected = true;\r\n  this.selectedFiles = event.target.files;\r\n}\r\n\r\ndeleteImage() {\r\n  this._mediaService.deleteFile(this.recipe.image)\r\n  this.recipe.image = \"\";\r\n}\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        INGREDIENT METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n\r\n  getIgredients(ingredientNames: string[], ingredientAmounts: string[]): Ingredient[] {\r\n\r\n    let returnIngr: Ingredient[] = [];\r\n\r\n    ingredientNames.forEach(function (value, index) {\r\n      let temp: Ingredient = {\r\n        ingredientName: value,\r\n        ingredientAmount: ingredientAmounts.at(index)!\r\n      }\r\n      returnIngr.push(temp)\r\n    });\r\n\r\n    return returnIngr;\r\n  }\r\n\r\n  onAddIngredient(){\r\n    var name = this.ingredientName\r\n    var amount = this.ingredientAmount\r\n\r\n    this.ingredientNames.push(name)\r\n    this.ingredientAmounts.push(amount)\r\n\r\n    let ingredient: Ingredient = {\r\n      ingredientName: name,\r\n      ingredientAmount: amount\r\n    }\r\n\r\n    this.ingredients.push(ingredient)\r\n    this.table.renderRows();\r\n  }\r\n\r\n  onDeleteIngredient(element: Ingredient){\r\n\r\n    let deleteIndex = -1\r\n\r\n    this.ingredients.forEach(function (value, index) {\r\n      if(value.ingredientName === element.ingredientName && value.ingredientAmount === element.ingredientAmount) {\r\n        deleteIndex = index\r\n      }\r\n    });\r\n\r\n    this.ingredientNames.splice(deleteIndex, 1)\r\n    this.ingredientAmounts.splice(deleteIndex, 1)\r\n    this.ingredients.splice(deleteIndex, 1)\r\n    this.table.renderRows();\r\n\r\n  }\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        CATEGORY METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n\r\n  setSelectedCategory(selectedCategory: ICategory): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (selectedCategory.text == category.text){\r\n        selectedCategory.enumValue = category.enumValue;\r\n      }\r\n    }\r\n    return selectedCategory;\r\n  }\r\n\r\n  getSelectedCategory(categoryEnum: string): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (categoryEnum == category.enumValue){\r\n        const returnCategory: ICategory = {\r\n          text: category.text,\r\n          enumValue: category.enumValue\r\n        }\r\n        return returnCategory;\r\n      }\r\n    }\r\n    throw Error;\r\n  }\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        TAG METHODS\r\n      --------------------------------------------------------------------------------\r\n  */\r\n  addTag(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    if (value) {\r\n      this.recipe.tags.push(value);\r\n    }\r\n\r\n    event.chipInput!.clear();\r\n    console.log(this.recipe.tags)\r\n  }\r\n\r\n  removeTag(tag: string): void {\r\n    const index = this.recipe.tags.indexOf(tag);\r\n\r\n    if (index >= 0) {\r\n      this.recipe.tags.splice(index, 1);\r\n    }\r\n    console.log(this.recipe.tags)\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogChangeImage, {\r\n      data: {\r\n        recipe: this.recipe\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /*  --------------------------------------------------------------------------------\r\n        ERROR HANDLING\r\n      --------------------------------------------------------------------------------\r\n  */\r\n  emptyMandatoryFields(): boolean {\r\n    if(this.recipe.name === \"\" || this.recipe.name === \" \"){\r\n\r\n      return false;\r\n    }\r\n    if(this.recipe.ingredientNames.length===0){\r\n\r\n      return false;\r\n    }\r\n    if(this.recipe.ingredientMeasures.length===0 ){\r\n\r\n      return false;\r\n    }\r\n    if(this.recipe.instructions===\"\" || this.recipe.instructions===null){\r\n\r\n      return false;\r\n    }\r\n    if(this.recipe.category==\"\" ||this.recipe.category==null){\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface Ingredient {\r\n  ingredientName: string;\r\n  ingredientAmount: string;\r\n}\r\n\r\nexport interface tableColumns\r\n{\r\n    ingredientName: string,\r\n    ingredientAmount: string;\r\n    actions: string\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-change-image',\r\n  templateUrl: 'dialog-change-image.html',\r\n})\r\nexport class DialogChangeImage{\r\n\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  mediaString: string = \"\";\r\n\r\n  fileIsSelected = false;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogChangeImage>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private _mediaService: MediaService\r\n  ) {}\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.fileIsSelected = true;\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  changeImage() {\r\n    if(this.fileIsSelected) {\r\n      this.progress.percentage = 0;\r\n      this.currentFileUpload = this.selectedFiles.item(0)!;\r\n      this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progress.percentage = Math.round(100 * event.loaded / event.total!);\r\n        } else if (event instanceof HttpResponse) {\r\n          this.mediaString = JSON.stringify(event.body)\r\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1)\r\n\r\n          // a bit ugly but i cannot get the mediaString out of the subscribe :/\r\n          this.data.recipe.image = this.mediaString;\r\n        }\r\n        this.selectedFiles = undefined!;\r\n        }\r\n      );\r\n    }\r\n\r\n    this.onCancelClick();\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  recipe: Recipe\r\n}\r\n","<div id=\"dialog-header\">\r\n  <h3 mat-dialog-title id=\"recipeName\">Edit Recipe</h3>\r\n\r\n  <mat-dialog-actions id=\"actions\">\r\n    <button mat-mini-fab mat-dialog-close id=\"close-button\" (click)=\"onCloseClick()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n\r\n<div id=\"recipe\">\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Edit name</h3>\r\n    <mat-form-field>\r\n      <mat-label>Name</mat-label>\r\n      <input matInput [(ngModel)]=\"recipe.name\" required>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"recipeField\">\r\n\r\n      <div *ngIf='this.recipe.image != \"\"'>\r\n        <h2>Change Image</h2>\r\n\r\n        <div class=\"content\">\r\n          <img id=\"recipe-image\" [src]=\"recipe.image\" height=\"300px\" width=\"300px\">\r\n        </div>\r\n\r\n        <div class=\"btn-group\">\r\n          <button mat-raised-button color=\"warn\" (click)=\"deleteImage()\">Delete Image</button>\r\n          <button mat-raised-button class=\"focus-btn \" (click)=\"openDialog()\">Change Image</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf='this.recipe.image === \"\"'>\r\n        <h2>Add Image</h2>\r\n        <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <div id=\"addIngredient\">\r\n\r\n        <h3>Add Ingredients</h3>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Ingredient</mat-label>\r\n          <input matInput [(ngModel)]=\"ingredientName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Amount</mat-label>\r\n          <input matInput [(ngModel)]=\"ingredientAmount\">\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button (click)=\"onAddIngredient()\" class=\"addButton\">Add</button>\r\n\r\n      </div>\r\n\r\n      <table mat-table [dataSource]=\"ingredients\" class=\"mat-elevation-z8\" id=\"table\" >\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"ingredientName\">\r\n          <th mat-header-cell *matHeaderCellDef>Ingredient</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ingredientName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"ingredientAmount\">\r\n          <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ingredientAmount}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"><button mat-raised-button color=\"warn\" (click)=\"onDeleteIngredient(element)\">Delete</button> </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      </table>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3 id=\"categoryTitle\">Category</h3>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Category</mat-label>\r\n        <mat-select  [(value)]=\"selectedCategory.text\">\r\n          <mat-option>All</mat-option>\r\n          <mat-option *ngFor=\"let category of categories\" [value]=\"category.text\" >\r\n            {{category.text}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Tags</h3>\r\n    <mat-form-field class=\"example-chip-list\">\r\n      <mat-chip-grid #chipGrid>\r\n        <mat-chip-row *ngFor=\"let tag of recipe.tags\" (removed)=\"removeTag(tag)\">\r\n          {{tag}}\r\n          <button matChipRemove [attr.aria-label]=\"'remove ' + tag\">\r\n            <mat-icon>cancel</mat-icon>\r\n          </button>\r\n        </mat-chip-row>\r\n        <input placeholder=\"Add tag\"\r\n              [matChipInputFor]=\"chipGrid\"\r\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n              [matChipInputAddOnBlur]=\"addOnBlur\"\r\n              (matChipInputTokenEnd)=\"addTag($event)\" />\r\n      </mat-chip-grid>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Instructions</h3>\r\n    <mat-form-field appearance=\"fill\" class=\"instructions\">\r\n      <mat-label>Instructions</mat-label>\r\n      <textarea matInput  [(ngModel)]=\"recipe.instructions\"></textarea>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div class=\"btn-group\">\r\n  <button mat-raised-button (click)=\"onCancel()\">Cancel</button>\r\n  <button mat mat-raised-button class=\"focus-btn\" (click)=\"onSubmit()\">Save</button>\r\n</div>\r\n\r\n\r\n\r\n</mat-dialog-content>\r\n","<div>\r\n  <h1 mat-dialog-title>Change file</h1>\r\n</div>\r\n<div mat-dialog-content>\r\n  <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-button mat-dialog-close cdkFocusInitial (click)=\"changeImage()\">Change</button>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}