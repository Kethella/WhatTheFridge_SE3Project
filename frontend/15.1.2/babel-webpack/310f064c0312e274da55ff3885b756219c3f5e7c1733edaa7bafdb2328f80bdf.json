{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/account.service\";\nimport * as i3 from \"src/app/services/authentication.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/flex-layout/extended\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/stepper\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/form-field\";\nimport * as i15 from \"@angular/material/select\";\nfunction SignUpComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \"Create account\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_ng_template_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \"Security question\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", question_r4.enumValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r4.text, \" \");\n  }\n}\nexport class SignUpComponent {\n  constructor(_formBuilder, _accountService, _authService, router, _snackBar) {\n    this._formBuilder = _formBuilder;\n    this._accountService = _accountService;\n    this._authService = _authService;\n    this.router = router;\n    this._snackBar = _snackBar;\n    this.visible1 = true;\n    this.changetype1 = true;\n    this.visible2 = true;\n    this.changetype2 = true;\n  }\n  ngOnInit() {\n    this.getSecQuestions();\n    this.firstFormGroup = this._formBuilder.group({\n      username: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, Validators.required],\n      passwordRepeat: new FormControl(\"\", Validators.required)\n    }, {\n      validator: this.ConfirmedValidator(\"password\", \"passwordRepeat\") //works both ways\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      securityQuestion: [null, Validators.required],\n      securityAnswer: [null, Validators.required]\n    });\n  }\n  getSecQuestions() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const res = yield _this._accountService.getSecurityQuestions();\n      _this.securityQuestions = res;\n    })();\n  }\n  ConfirmedValidator(controlName, matchingControlName) {\n    return formGroup => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors['confirmedValidator']) {\n        return;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          confirmedValidator: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n  onSignUp() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.firstFormGroup.valid && _this2.secondFormGroup.valid) {\n        _this2.account = {\n          id: \"\",\n          name: _this2.firstFormGroup.get('username')?.value,\n          email: _this2.firstFormGroup.get('email')?.value,\n          password: _this2.firstFormGroup.get('password')?.value,\n          securityQuestion: _this2.secondFormGroup.get('securityQuestion')?.value,\n          securityAnswer: _this2.secondFormGroup.get('securityAnswer')?.value\n        };\n        const res = yield _this2._accountService.createAccount(_this2.account);\n        _this2.account = res; //to get the actual id\n        _this2.firstFormGroup.reset(); //check if you actually need it\n        _this2.secondFormGroup.reset(); //same as above\n        _this2._accountService.sendOwnerAccountToServices(res.id);\n        _this2._authService.login();\n      } else if (_this2.firstFormGroup.invalid || _this2.secondFormGroup.invalid) {\n        _this2._snackBar.open('Invalid input. Please look at the errors and try again.', 'Ok', {\n          duration: 5000,\n          panelClass: ['my-snackbar']\n        });\n        return;\n      } else {\n        err => {\n          console.log(err);\n          _this2.handleError(err);\n        };\n      }\n    })();\n  }\n  viewpass(whichOne) {\n    if (whichOne == 1) {\n      this.visible1 = !this.visible1;\n      this.changetype1 = !this.changetype1;\n    } else if (whichOne == 2) {\n      this.visible2 = !this.visible2;\n      this.changetype2 = !this.changetype2;\n    }\n  }\n  handleError(err) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // if error is client-side error\n      errorMessage = `Error: ${err.message}`;\n    } else {\n      // if error is server-side error\n      errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n    }\n    alert(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.MatSnackBar));\n};\nSignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: STEPPER_GLOBAL_OPTIONS,\n    useValue: {\n      showError: true\n    }\n  }])],\n  decls: 58,\n  vars: 12,\n  consts: [[1, \"bg\"], [1, \"sign-up-form\", 3, \"ngSubmit\"], [\"id\", \"stepper\", 3, \"linear\"], [\"stepper\", \"matHorizontalStepper\"], [3, \"stepControl\"], [3, \"formGroup\"], [\"matStepLabel\", \"\", \"class\", \"stepper-label\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [1, \"eyeicon\"], [3, \"ngClass\", \"click\"], [\"for\", \"passwordRepeat\"], [\"matInput\", \"\", \"formControlName\", \"passwordRepeat\", \"required\", \"\", 3, \"type\"], [1, \"buttons\"], [\"mat-raised-button\", \"\", \"matStepperNext\", \"\", \"matStepperNext\", \"\"], [3, \"stepControl\", \"editable\", \"completed\", \"click\"], [\"matStepLabel\", \"\"], [\"formControlName\", \"securityQuestion\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"securityAnswer\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"matStepperPrevious\", \"\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"routerLink\", \"../login\", 2, \"display\", \"flex\", \"justify-content\", \"flex-end\"], [1, \"stepper-label\"], [3, \"value\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n      i0.ɵɵtext(4, \"Create an account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSignUp();\n      });\n      i0.ɵɵelementStart(7, \"mat-stepper\", 2, 3)(9, \"mat-step\", 4)(10, \"form\", 5);\n      i0.ɵɵtemplate(11, SignUpComponent_ng_template_11_Template, 2, 0, \"ng-template\", 6);\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 9);\n      i0.ɵɵelementStart(24, \"span\", 10)(25, \"mat-icon\", 11);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_mat_icon_click_25_listener() {\n        return ctx.viewpass(1);\n      });\n      i0.ɵɵtext(26, \" visibility \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"mat-form-field\")(28, \"mat-label\", 12);\n      i0.ɵɵtext(29, \"Confirm password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 13);\n      i0.ɵɵelementStart(31, \"span\", 10)(32, \"mat-icon\", 11);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_mat_icon_click_32_listener() {\n        return ctx.viewpass(2);\n      });\n      i0.ɵɵtext(33, \" visibility \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"div\", 14)(35, \"button\", 15);\n      i0.ɵɵtext(36, \"Next\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(37, \"mat-step\", 16);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_mat_step_click_37_listener($event) {\n        return $event.stopPropagation();\n      });\n      i0.ɵɵelementStart(38, \"form\", 5);\n      i0.ɵɵtemplate(39, SignUpComponent_ng_template_39_Template, 2, 0, \"ng-template\", 17);\n      i0.ɵɵelementStart(40, \"mat-form-field\")(41, \"mat-label\");\n      i0.ɵɵtext(42, \"Select a security question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"mat-select\", 18);\n      i0.ɵɵtemplate(44, SignUpComponent_mat_option_44_Template, 2, 2, \"mat-option\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"mat-form-field\")(46, \"mat-label\");\n      i0.ɵɵtext(47, \"Type your answer here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 14)(50, \"button\", 21);\n      i0.ɵɵtext(51, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_button_click_52_listener() {\n        return ctx.onSignUp();\n      });\n      i0.ɵɵtext(53, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(54, \"div\")(55, \"a\", 23);\n      i0.ɵɵtext(56, \" Already registered? \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(57, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"linear\", ctx.isLinear);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"stepControl\", ctx.firstFormGroup);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.firstFormGroup);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"type\", ctx.changetype1 ? \"password\" : \"text\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.visible1 ? \"visibility\" : \"visibility_off\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.changetype2 ? \"password\" : \"text\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.visible2 ? \"visibility\" : \"visibility_off\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"stepControl\", ctx.secondFormGroup)(\"editable\", false)(\"completed\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.secondFormGroup);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.securityQuestions);\n    }\n  },\n  dependencies: [i6.NgClass, i6.NgForOf, i4.RouterOutlet, i4.RouterLink, i7.DefaultClassDirective, i8.MatOption, i9.MatButton, i10.MatCard, i10.MatCardContent, i10.MatCardHeader, i10.MatCardTitle, i11.MatStep, i11.MatStepLabel, i11.MatStepper, i11.MatStepperNext, i11.MatStepperPrevious, i12.MatIcon, i13.MatInput, i14.MatFormField, i14.MatLabel, i15.MatSelect, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgForm],\n  styles: [\".bg[_ngcontent-%COMP%]{\\r\\n    background: rgb(95, 193, 172);\\r\\n    height : 100vh;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n  width: 500px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background-color: rgb(230, 244, 246);\\r\\n  border-radius: 25px;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\nmat-stepper[_ngcontent-%COMP%] {\\r\\n    background-color: rgb(230, 244, 246);\\r\\n}\\r\\n\\r\\n.stepper-label[_ngcontent-%COMP%]{\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.question-label[_ngcontent-%COMP%]{\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.form-unit[_ngcontent-%COMP%]{\\r\\n    padding-bottom: 10px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.buttons[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    gap: 10px;\\r\\n}\\r\\n\\r\\n.eyeicon[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    right: -10px;\\r\\n    top: 17px;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.alert[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n  .mat-horizontal-stepper-header{\\r\\n    pointer-events: none !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hY2NvdW50LWF1dGgvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBNkI7SUFDN0IsY0FBYztJQUNkLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0FBQzNCOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG9DQUFvQztFQUNwQyxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLCtCQUErQjtBQUNuQyIsInNvdXJjZXNDb250ZW50IjpbIi5iZ3tcclxuICAgIGJhY2tncm91bmQ6IHJnYig5NSwgMTkzLCAxNzIpO1xyXG4gICAgaGVpZ2h0IDogMTAwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5cclxubWF0LWNhcmQge1xyXG4gIHdpZHRoOiA1MDBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzMCwgMjQ0LCAyNDYpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbm1hdC1zdGVwcGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzAsIDI0NCwgMjQ2KTtcclxufVxyXG5cclxuLnN0ZXBwZXItbGFiZWx7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5xdWVzdGlvbi1sYWJlbHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmZvcm0tdW5pdHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5idXR0b25zIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4uZXllaWNvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogLTEwcHg7XHJcbiAgICB0b3A6IDE3cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5hbGVydHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXJ7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","STEPPER_GLOBAL_OPTIONS","throwError","i0","SignUpComponent","constructor","_formBuilder","_accountService","_authService","router","_snackBar","ngOnInit","getSecQuestions","firstFormGroup","group","username","required","email","password","passwordRepeat","validator","ConfirmedValidator","secondFormGroup","securityQuestion","securityAnswer","res","getSecurityQuestions","securityQuestions","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","value","setErrors","confirmedValidator","onSignUp","valid","account","id","name","get","createAccount","reset","sendOwnerAccountToServices","login","invalid","open","duration","panelClass","err","console","log","handleError","viewpass","whichOne","visible1","changetype1","visible2","changetype2","errorMessage","error","ErrorEvent","message","status","alert","selectors","features","provide","useValue","showError","decls","vars","consts","template","ctx","$event"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\sign-up\\sign-up.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\sign-up\\sign-up.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Account } from 'src/app/models/account';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\nimport { ISecurityQuestion } from 'src/app/models/securityQuestions';\r\nimport { throwError } from 'rxjs';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n  providers: [\r\n    {\r\n      provide: STEPPER_GLOBAL_OPTIONS,\r\n      useValue: {showError: true},\r\n    },\r\n  ],\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  signUpSuccessful: boolean;\r\n\r\n  account: Account;\r\n\r\n  securityQuestions: ISecurityQuestion[]\r\n\r\n  visible1:boolean = true;\r\n  changetype1:boolean =true;\r\n  visible2:boolean = true;\r\n  changetype2:boolean =true;\r\n\r\n  isLinear:true;\r\n\r\n  constructor( private _formBuilder: FormBuilder,\r\n    private _accountService: AccountService,\r\n    private _authService: AuthenticationService,\r\n    private router: Router,\r\n    private _snackBar:MatSnackBar,\r\n    ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.getSecQuestions()\r\n\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      username : [null, Validators.required],\r\n      email: [null, [Validators.required, Validators.email]],\r\n      password: [null, Validators.required],\r\n      passwordRepeat: new FormControl(\"\", Validators.required)\r\n    }, {\r\n      validator: this.ConfirmedValidator(\"password\", \"passwordRepeat\") //works both ways\r\n    });\r\n\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      securityQuestion: [null, Validators.required],\r\n      securityAnswer: [null, Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  async getSecQuestions() {\r\n    const res: any = await this._accountService.getSecurityQuestions();\r\n      this.securityQuestions = res;\r\n  }\r\n\r\n  ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      if (\r\n        matchingControl.errors &&\r\n        !matchingControl.errors['confirmedValidator']\r\n      ) {\r\n        return;\r\n      }\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ confirmedValidator: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  async onSignUp(){\r\n\r\n    if (this.firstFormGroup.valid && this.secondFormGroup.valid) {\r\n      this.account = {\r\n        id: \"\",\r\n        name: this.firstFormGroup.get('username')?.value,\r\n        email: this.firstFormGroup.get('email')?.value,\r\n        password: this.firstFormGroup.get('password')?.value,\r\n        securityQuestion: this.secondFormGroup.get('securityQuestion')?.value,\r\n        securityAnswer: this.secondFormGroup.get('securityAnswer')?.value\r\n      }\r\n\r\n      const res: any = await this._accountService.createAccount(this.account);\r\n      this.account = res; //to get the actual id\r\n\r\n      this.firstFormGroup.reset();  //check if you actually need it\r\n      this.secondFormGroup.reset(); //same as above\r\n\r\n      this._accountService.sendOwnerAccountToServices(res.id)\r\n      this._authService.login()\r\n\r\n    }\r\n    else if(this.firstFormGroup.invalid ||this.secondFormGroup.invalid){\r\n      this._snackBar.open('Invalid input. Please look at the errors and try again.', 'Ok', {\r\n        duration: 5000,\r\n        panelClass: ['my-snackbar']\r\n      });\r\n      return;\r\n    }\r\n    else {\r\n      (err: any) => {\r\n        console.log(err)\r\n        this.handleError(err)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  viewpass(whichOne:number){\r\n    if(whichOne==1){\r\n      this.visible1 = !this.visible1;\r\n      this.changetype1 = !this.changetype1;\r\n    }\r\n    else if(whichOne==2){\r\n      this.visible2 = !this.visible2;\r\n      this.changetype2 = !this.changetype2;\r\n    }\r\n  }\r\n\r\n  handleError(err: { error: any; message: any; status: any; }) {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // if error is client-side error\r\n      errorMessage = `Error: ${err.message}`;\r\n    } else {\r\n      // if error is server-side error\r\n      errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\r\n    }\r\n    alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","<div class=\"bg\">\r\n    <mat-card>\r\n\r\n        <mat-card-header>\r\n            <mat-card-title>Create an account</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <form class=\"sign-up-form\" (ngSubmit)=\"onSignUp()\" >\r\n                <mat-stepper id=\"stepper\" #stepper=\"matHorizontalStepper\" [linear]=\"isLinear\">\r\n                    <mat-step [stepControl]=\"firstFormGroup\" >\r\n                        <form [formGroup]=\"firstFormGroup\">\r\n                            <ng-template matStepLabel class=\"stepper-label\"><div class=\"stepper-label\">Create account</div></ng-template>\r\n\r\n                            <mat-form-field>\r\n                                <mat-label>Username</mat-label>\r\n                                <input matInput formControlName=\"username\" required>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field>\r\n                                <mat-label>Email</mat-label>\r\n                                <input matInput formControlName=\"email\" required>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field>\r\n                                <mat-label>Password</mat-label>\r\n                                <input matInput formControlName=\"password\" required [type]=\"changetype1?'password':'text'\">\r\n                                <span class=\"eyeicon\"><mat-icon (click)=\"viewpass(1)\" [ngClass]=\"visible1?'visibility':'visibility_off'\">\r\n                                    visibility\r\n                                </mat-icon></span>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field>\r\n                                <mat-label for=\"passwordRepeat\">Confirm password</mat-label>\r\n                                <input matInput formControlName=\"passwordRepeat\" required [type]=\"changetype2?'password':'text'\" >\r\n                                <span class=\"eyeicon\"><mat-icon (click)=\"viewpass(2)\" [ngClass]=\"visible2?'visibility':'visibility_off'\">\r\n                                    visibility\r\n                                </mat-icon></span>\r\n                            </mat-form-field>\r\n\r\n\r\n                            <div class=\"buttons\">\r\n                                <button mat-raised-button matStepperNext matStepperNext>Next</button>\r\n                            </div>\r\n                        </form>\r\n                    </mat-step>\r\n\r\n                    <mat-step [stepControl]=\"secondFormGroup\" [editable]=\"false\" [completed]=\"false\"  (click)=\"$event.stopPropagation()\" >\r\n                        <form [formGroup]=\"secondFormGroup\">\r\n                            <ng-template matStepLabel><div class=\"stepper-label\">Security question</div></ng-template>\r\n\r\n                                <mat-form-field>\r\n                                    <mat-label>Select a security question</mat-label>\r\n                                    <mat-select formControlName=\"securityQuestion\" required>\r\n                                        <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.enumValue\">\r\n                                            {{question.text}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field>\r\n                                    <mat-label>Type your answer here</mat-label>\r\n                                    <input matInput formControlName=\"securityAnswer\" required>\r\n                                </mat-form-field>\r\n\r\n                                <div class=\"buttons\">\r\n                                    <button mat-raised-button matStepperPrevious>Back</button>\r\n                                    <button mat-raised-button (click)=\"onSignUp()\">Sign Up</button>\r\n                                </div>\r\n                        </form>\r\n                    </mat-step>\r\n                </mat-stepper>\r\n                <div>\r\n                    <a style=\"display: flex; justify-content: flex-end\" routerLink=\"../login\"> Already registered? </a>\r\n                  </div>\r\n            </form>\r\n        </mat-card-content>\r\n\r\n    </mat-card>\r\n</div>\r\n<router-outlet></router-outlet>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}