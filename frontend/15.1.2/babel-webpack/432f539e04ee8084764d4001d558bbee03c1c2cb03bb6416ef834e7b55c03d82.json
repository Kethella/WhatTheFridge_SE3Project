{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/recipe.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/chips\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/table\";\nfunction EditRecipeComponent_th_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 31);\n    i0.ɵɵtext(1, \"Ingredient\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.ingredientName, \" \");\n  }\n}\nfunction EditRecipeComponent_th_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 31);\n    i0.ɵɵtext(1, \"Amount\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r12.ingredientAmount, \" \");\n  }\n}\nfunction EditRecipeComponent_th_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 31);\n    i0.ɵɵtext(1, \" Action \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditRecipeComponent_td_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 32)(1, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function EditRecipeComponent_td_39_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const element_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onDeleteIngredient(element_r13));\n    });\n    i0.ɵɵtext(2, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EditRecipeComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 34);\n  }\n}\nfunction EditRecipeComponent_tr_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 35);\n  }\n}\nfunction EditRecipeComponent_mat_option_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r17.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r17.text, \" \");\n  }\n}\nfunction EditRecipeComponent_mat_chip_row_58_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 37);\n    i0.ɵɵlistener(\"removed\", function EditRecipeComponent_mat_chip_row_58_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const tag_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.removeTag(tag_r18));\n    })(\"ngModelChange\", function EditRecipeComponent_mat_chip_row_58_Template_mat_chip_row_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.splitTagsArr = $event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 38)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tag_r18 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r10.splitTagsArr);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r18, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"remove \" + tag_r18);\n  }\n}\nexport class EditRecipeComponent {\n  constructor(dialogRef, data, _formBuilder, _recipeService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._formBuilder = _formBuilder;\n    this._recipeService = _recipeService;\n    this.restartAfterEdit = new EventEmitter();\n    this.selectedCategory = {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n    this.displayedColumns = ['ingredientName', 'ingredientAmount', 'actions'];\n    this.ingredient = {\n      \"ingredientName\": '',\n      \"ingredientAmount\": ''\n    };\n    this.visible = true;\n    this.selectable = true;\n    this.removable = true;\n    this.addOnBlur = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.ingredienNames = [];\n    this.ingredientAmounts = [];\n    this.ingredients = [], this.selectedTags = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.recipe = _this.data.selectedRecipe;\n      _this.recipeForm = _this._formBuilder.group({\n        name: [null, Validators.required],\n        ingredientName: [null, Validators.required],\n        ingredientAmount: [null, Validators.required],\n        category: [null, Validators.required],\n        tags: [null, Validators.required],\n        instructions: [null, Validators.required]\n      });\n      _this.categories = yield _this._recipeService.getCategories();\n      _this.selectedCategory = _this.getSelectedCategory(_this.recipe.category);\n    })();\n  }\n  onCloseClick() {\n    this.dialogRef.close();\n  }\n  splitTags() {\n    this.tagsAsString = this.data.selectedTags.toString();\n    this.splitTagsArr = this.tagsAsString.split(\", \");\n    console.log(this.splitTagsArr);\n  }\n  onSubmit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.selectedCategory = _this2.setSelectedCategory(_this2.selectedCategory);\n      _this2.recipe = {\n        id: '',\n        name: _this2.recipeForm.get('name')?.value,\n        ingredientNames: _this2.ingredienNames,\n        ingredientMeasures: _this2.ingredientAmounts,\n        category: _this2.selectedCategory.enumValue,\n        tags: _this2.selectedTags,\n        instructions: _this2.recipeForm.get('instructions')?.value,\n        image: 'http://localhost:8085/media/download/63c95e3d664c9260ee663f9c',\n        link: '',\n        ownerAccount: ''\n      };\n      _this2.recipe = yield _this2._recipeService.updateRecipe(_this2.recipe);\n      console.log(_this2.recipe);\n      _this2.dialogRef.close();\n    })();\n  }\n  onAddIngredient() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var name = _this3.recipeForm.get(\"ingredientName\")?.value;\n      var amount = _this3.recipeForm.get(\"ingredientAmount\")?.value;\n      _this3.ingredienNames.push(name);\n      _this3.ingredientAmounts.push(amount);\n      let ingredient = {\n        ingredientName: name,\n        ingredientAmount: amount\n      };\n      _this3.ingredients.push(ingredient);\n      _this3.table.renderRows();\n    })();\n  }\n  onDeleteIngredient(index) {\n    console.log(this.ingredients);\n    this.ingredients.splice(index, 1);\n  }\n  setSelectedCategory(selectedCategory) {\n    for (let category of this.categories) {\n      if (selectedCategory.text == category.text) {\n        selectedCategory.enumValue = category.enumValue;\n      }\n    }\n    return selectedCategory;\n  }\n  getSelectedCategory(categoryEnum) {\n    for (let category of this.categories) {\n      if (categoryEnum == category.enumValue) {\n        const returnCategory = {\n          text: category.text,\n          enumValue: category.enumValue\n        };\n        return returnCategory;\n      }\n    }\n    throw Error;\n  }\n  addTag(event) {\n    const value = (event.value || '').trim();\n    if (value) {\n      this.selectedTags.push(value);\n    }\n    event.chipInput.clear();\n  }\n  removeTag(tag) {\n    const index = this.selectedTags.indexOf(tag);\n    if (index >= 0) {\n      this.selectedTags.splice(index, 1);\n    }\n  }\n}\nEditRecipeComponent.ɵfac = function EditRecipeComponent_Factory(t) {\n  return new (t || EditRecipeComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.RecipeService));\n};\nEditRecipeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditRecipeComponent,\n  selectors: [[\"app-edit-recipe\"]],\n  viewQuery: function EditRecipeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatTable, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  outputs: {\n    restartAfterEdit: \"restartAfterEdit\"\n  },\n  decls: 72,\n  vars: 12,\n  consts: [[\"id\", \"dialog-header\"], [\"mat-dialog-title\", \"\", \"id\", \"recipeName\"], [\"id\", \"actions\"], [\"mat-mini-fab\", \"\", \"mat-dialog-close\", \"\", \"id\", \"close-button\", 3, \"click\"], [\"id\", \"recipe\"], [1, \"recipeField\"], [\"matInput\", \"\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"addIngredient\"], [\"matInput\", \"\", \"required\", \"\"], [\"mat-raised-button\", \"\", 1, \"addButton\", 3, \"click\"], [\"mat-table\", \"\", \"id\", \"table\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"ingredientName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"ingredientAmount\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"id\", \"categoryTitle\"], [\"appearance\", \"fill\"], [3, \"value\", \"ngModel\", \"valueChange\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-chip-list\"], [\"chipGrid\", \"\"], [3, \"ngModel\", \"removed\", \"ngModelChange\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Add tag\", \"formControlName\", \"tags\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [\"appearance\", \"fill\", 1, \"instructions\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"action-buttons\"], [\"mat-raised-button\", \"\"], [\"mat\", \"\", \"mat-raised-button\", \"\", \"id\", \"create-btn\", 3, \"click\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [3, \"value\"], [3, \"ngModel\", \"removed\", \"ngModelChange\"], [\"matChipRemove\", \"\"]],\n  template: function EditRecipeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Edit Recipe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-dialog-actions\", 2)(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_4_listener() {\n        return ctx.onCloseClick();\n      });\n      i0.ɵɵelementStart(5, \"mat-icon\");\n      i0.ɵɵtext(6, \"close\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"mat-dialog-content\")(8, \"div\", 4)(9, \"div\", 5)(10, \"h3\");\n      i0.ɵɵtext(11, \"Edit name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.recipe.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 7)(18, \"h3\");\n      i0.ɵɵtext(19, \"Add Ingredients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\")(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Ingredient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\")(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_28_listener() {\n        return ctx.onAddIngredient();\n      });\n      i0.ɵɵtext(29, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"table\", 10);\n      i0.ɵɵelementContainerStart(31, 11);\n      i0.ɵɵtemplate(32, EditRecipeComponent_th_32_Template, 2, 0, \"th\", 12);\n      i0.ɵɵtemplate(33, EditRecipeComponent_td_33_Template, 2, 1, \"td\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(34, 14);\n      i0.ɵɵtemplate(35, EditRecipeComponent_th_35_Template, 2, 0, \"th\", 12);\n      i0.ɵɵtemplate(36, EditRecipeComponent_td_36_Template, 2, 1, \"td\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(37, 15);\n      i0.ɵɵtemplate(38, EditRecipeComponent_th_38_Template, 2, 0, \"th\", 12);\n      i0.ɵɵtemplate(39, EditRecipeComponent_td_39_Template, 3, 0, \"td\", 13);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(40, EditRecipeComponent_tr_40_Template, 1, 0, \"tr\", 16);\n      i0.ɵɵtemplate(41, EditRecipeComponent_tr_41_Template, 1, 0, \"tr\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\", 5)(43, \"h3\", 18);\n      i0.ɵɵtext(44, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"mat-form-field\", 19)(46, \"mat-label\");\n      i0.ɵɵtext(47, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"mat-select\", 20);\n      i0.ɵɵlistener(\"valueChange\", function EditRecipeComponent_Template_mat_select_valueChange_48_listener($event) {\n        return ctx.selectedCategory.text = $event;\n      })(\"ngModelChange\", function EditRecipeComponent_Template_mat_select_ngModelChange_48_listener($event) {\n        return ctx.selectedCategory = $event;\n      });\n      i0.ɵɵelementStart(49, \"mat-option\");\n      i0.ɵɵtext(50, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, EditRecipeComponent_mat_option_51_Template, 2, 2, \"mat-option\", 21);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(52, \"div\", 5)(53, \"h3\");\n      i0.ɵɵtext(54, \"Tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"mat-form-field\", 22)(56, \"mat-chip-grid\", null, 23);\n      i0.ɵɵtemplate(58, EditRecipeComponent_mat_chip_row_58_Template, 5, 3, \"mat-chip-row\", 24);\n      i0.ɵɵelementStart(59, \"input\", 25);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function EditRecipeComponent_Template_input_matChipInputTokenEnd_59_listener($event) {\n        return ctx.addTag($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(60, \"div\", 5)(61, \"h3\");\n      i0.ɵɵtext(62, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"mat-form-field\", 26)(64, \"mat-label\");\n      i0.ɵɵtext(65, \"Instructions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"textarea\", 27);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRecipeComponent_Template_textarea_ngModelChange_66_listener($event) {\n        return ctx.recipe.instructions = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(67, \"div\", 28)(68, \"button\", 29);\n      i0.ɵɵtext(69, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"button\", 30);\n      i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_button_click_70_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(71, \"Edit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r9 = i0.ɵɵreference(57);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.recipe.name);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"dataSource\", ctx.ingredients);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", ctx.selectedCategory.text)(\"ngModel\", ctx.selectedCategory);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectedTags);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matChipInputFor\", _r9)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.recipe.instructions);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.NgModel, i5.MatOption, i6.MatButton, i6.MatMiniFabButton, i7.MatChipGrid, i7.MatChipInput, i7.MatChipRemove, i7.MatChipRow, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i8.MatIcon, i9.MatInput, i10.MatFormField, i10.MatLabel, i11.MatSelect, i12.MatTable, i12.MatHeaderCellDef, i12.MatHeaderRowDef, i12.MatColumnDef, i12.MatCellDef, i12.MatRowDef, i12.MatHeaderCell, i12.MatCell, i12.MatHeaderRow, i12.MatRow, i2.FormControlName],\n  styles: [\"#dialog-header[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n  }\\r\\n  \\r\\n  .recipeField[_ngcontent-%COMP%] {\\r\\n    padding-bottom: 30px;\\r\\n  }\\r\\n  \\r\\n  #categoryTitle[_ngcontent-%COMP%] {\\r\\n    padding-top: 15px;\\r\\n  }\\r\\n  \\r\\n  #create-btn[_ngcontent-%COMP%] {\\r\\n    background-color: aquamarine;\\r\\n    color: black;\\r\\n  }\\r\\n  \\r\\n  .example-chip-list[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  .instructions[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9teS1yZWNpcGVzL3JlY2lwZS1saXN0L2VkaXQtcmVjaXBlL2VkaXQtcmVjaXBlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtFQUNoQzs7RUFFQTtJQUNFLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLDRCQUE0QjtJQUM1QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxXQUFXO0VBQ2I7OztFQUdBO0lBQ0UsV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiI2RpYWxvZy1oZWFkZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWNpcGVGaWVsZCB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcclxuICB9XHJcbiAgXHJcbiAgI2NhdGVnb3J5VGl0bGUge1xyXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gICNjcmVhdGUtYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWFtYXJpbmU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgLmluc3RydWN0aW9uc3tcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["COMMA","ENTER","EventEmitter","Validators","MAT_DIALOG_DATA","MatTable","i0","EditRecipeComponent","constructor","dialogRef","data","_formBuilder","_recipeService","ingredienNames","ingredientAmounts","ingredients","selectedTags","ngOnInit","recipe","selectedRecipe","recipeForm","group","name","required","ingredientName","ingredientAmount","category","tags","instructions","categories","getCategories","selectedCategory","getSelectedCategory","onCloseClick","close","splitTags","tagsAsString","toString","splitTagsArr","split","console","log","onSubmit","setSelectedCategory","id","get","value","ingredientNames","ingredientMeasures","enumValue","image","link","ownerAccount","updateRecipe","onAddIngredient","amount","push","ingredient","table","renderRows","onDeleteIngredient","index","splice","text","categoryEnum","returnCategory","Error","addTag","event","trim","chipInput","clear","removeTag","tag","indexOf","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\edit-recipe.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\my-recipes\\recipe-list\\edit-recipe\\edit-recipe.component.html"],"sourcesContent":["import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Component, ViewChild, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ICategory } from 'src/app/models/category';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { RecipeService } from 'src/app/services/recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-recipe',\r\n  templateUrl: './edit-recipe.component.html',\r\n  styleUrls: ['./edit-recipe.component.css']\r\n})\r\nexport class EditRecipeComponent {\r\n\r\n  @Output() public restartAfterEdit = new EventEmitter();\r\n\r\n  recipeForm: FormGroup;\r\n\r\n  recipe: Recipe;\r\n  ingredienNames: string[];\r\n  ingredientAmounts: string[];\r\n  ingredients: Ingredient[];\r\n\r\n  selectedCategory: ICategory = {\"enumValue\": \"\", \"text\":\"\"};\r\n  categories: ICategory[];\r\n\r\n  selectedTags: string[];\r\n\r\n  displayedColumns: string[] = ['ingredientName', 'ingredientAmount', 'actions'];\r\n  tagsAsString: string;\r\n  splitTagsArr:string[];\r\n\r\n  @ViewChild(MatTable) table: MatTable<Ingredient>;\r\n  ingredient: Ingredient = {\r\n    \"ingredientName\": '',\r\n    \"ingredientAmount\": ''\r\n  }\r\n\r\n  constructor(public dialogRef:MatDialogRef<EditRecipeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data:any,\r\n    private _formBuilder: FormBuilder,\r\n    private _recipeService:RecipeService){\r\n      this.ingredienNames = []\r\n      this.ingredientAmounts = []\r\n      this.ingredients = [],\r\n      this.selectedTags =[]\r\n }\r\n\r\n  async ngOnInit(){\r\n    this.recipe= this.data.selectedRecipe;\r\n\r\n    this.recipeForm=this._formBuilder.group({\r\n      name:[null, Validators.required],\r\n      ingredientName:[null, Validators.required],\r\n      ingredientAmount:[null, Validators.required],\r\n      category:[null, Validators.required],\r\n      tags:[null, Validators.required],\r\n      instructions:[null, Validators.required]\r\n    })\r\n\r\n    this.categories = await this._recipeService.getCategories();\r\n\r\n    this.selectedCategory = this.getSelectedCategory(this.recipe.category)\r\n  }\r\n\r\n  onCloseClick() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  splitTags(){\r\n    this.tagsAsString = this.data.selectedTags.toString();\r\n    this.splitTagsArr = this.tagsAsString.split(\", \");\r\n    console.log(this.splitTagsArr)\r\n  }\r\n\r\n  async onSubmit(){\r\n\r\n    this.selectedCategory = this.setSelectedCategory(this.selectedCategory)\r\n\r\n    this.recipe={\r\n      id: '',\r\n      name:this.recipeForm.get('name')?.value,\r\n      ingredientNames: this.ingredienNames,\r\n      ingredientMeasures: this.ingredientAmounts,\r\n      category: this.selectedCategory.enumValue,\r\n      tags: this.selectedTags,\r\n      instructions:this.recipeForm.get('instructions')?.value,\r\n      image:'http://localhost:8085/media/download/63c95e3d664c9260ee663f9c',\r\n      link:'',\r\n      ownerAccount:''\r\n    }\r\n    this.recipe = await this._recipeService.updateRecipe(this.recipe);\r\n    console.log(this.recipe)\r\n    this.dialogRef.close();\r\n }\r\n\r\n\r\n  async onAddIngredient(){\r\n    var name = this.recipeForm.get(\"ingredientName\")?.value\r\n    var amount = this.recipeForm.get(\"ingredientAmount\")?.value\r\n\r\n    this.ingredienNames.push(name)\r\n    this.ingredientAmounts.push(amount)\r\n\r\n    let ingredient: Ingredient = {\r\n      ingredientName: name,\r\n      ingredientAmount: amount\r\n    }\r\n\r\n    this.ingredients.push(ingredient)\r\n    this.table.renderRows();\r\n\r\n  }\r\n\r\n  onDeleteIngredient(index:any){\r\n    console.log(this.ingredients)\r\n      this.ingredients.splice(index,1)\r\n\r\n  }\r\n\r\n  setSelectedCategory(selectedCategory: ICategory): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (selectedCategory.text == category.text){\r\n        selectedCategory.enumValue = category.enumValue;\r\n      }\r\n    }\r\n    return selectedCategory;\r\n  }\r\n\r\n  getSelectedCategory(categoryEnum: string): ICategory{\r\n\r\n    for (let category of this.categories){\r\n      if (categoryEnum == category.enumValue){\r\n        const returnCategory: ICategory = {\r\n          text: category.text,\r\n          enumValue: category.enumValue\r\n        }\r\n        return returnCategory;\r\n      }\r\n    }\r\n    throw Error;\r\n  }\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  addTag(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    if (value) {\r\n      this.selectedTags.push(value);\r\n    }\r\n\r\n    event.chipInput!.clear();\r\n  }\r\n\r\n  removeTag(tag: string): void {\r\n    const index = this.selectedTags.indexOf(tag);\r\n\r\n    if (index >= 0) {\r\n      this.selectedTags.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface Ingredient {\r\n  ingredientName: string;\r\n  ingredientAmount: string;\r\n}\r\n\r\nexport interface tableColumns\r\n{\r\n    ingredientName: string,\r\n    ingredientAmount: string;\r\n    actions: string\r\n}\r\n\r\n\r\n","<div id=\"dialog-header\">\r\n  <h3 mat-dialog-title id=\"recipeName\">Edit Recipe</h3>\r\n\r\n  <mat-dialog-actions id=\"actions\">\r\n    <button mat-mini-fab mat-dialog-close id=\"close-button\" (click)=\"onCloseClick()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-dialog-actions>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n\r\n<div id=\"recipe\">\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Edit name</h3>\r\n    <mat-form-field>\r\n      <mat-label>Name</mat-label>\r\n      <input matInput [(ngModel)]=\"recipe.name\" required>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <div id=\"addIngredient\">\r\n\r\n        <h3>Add Ingredients</h3>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Ingredient</mat-label>\r\n          <input matInput required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Amount</mat-label>\r\n          <input matInput required>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button (click)=\"onAddIngredient()\" class=\"addButton\">Add</button>\r\n\r\n      </div>\r\n\r\n      <table mat-table [dataSource]=\"ingredients\" class=\"mat-elevation-z8\" id=\"table\" >\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"ingredientName\">\r\n          <th mat-header-cell *matHeaderCellDef>Ingredient</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ingredientName}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"ingredientAmount\">\r\n          <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.ingredientAmount}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"><button mat-raised-button color=\"primary\" (click)=\"onDeleteIngredient(element)\">Delete</button> </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      </table>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3 id=\"categoryTitle\">Category</h3>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Category</mat-label>\r\n        <mat-select  [(value)]=\"selectedCategory.text\" [(ngModel)]=\"selectedCategory\">\r\n          <mat-option>All</mat-option>\r\n          <mat-option *ngFor=\"let category of categories\" [value]=\"category.text\" >\r\n            {{category.text}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Tags</h3>\r\n    <mat-form-field class=\"example-chip-list\">\r\n      <mat-chip-grid #chipGrid>\r\n        <mat-chip-row *ngFor=\"let tag of selectedTags\" (removed)=\"removeTag(tag)\" [(ngModel)]=\"splitTagsArr\">\r\n          {{tag}}\r\n          <button matChipRemove [attr.aria-label]=\"'remove ' + tag\">\r\n            <mat-icon>cancel</mat-icon>\r\n          </button>\r\n        </mat-chip-row>\r\n        <input placeholder=\"Add tag\"\r\n              [matChipInputFor]=\"chipGrid\"\r\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n              [matChipInputAddOnBlur]=\"addOnBlur\"\r\n              (matChipInputTokenEnd)=\"addTag($event)\"\r\n              formControlName=\"tags\"\r\n              />\r\n      </mat-chip-grid>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"recipeField\">\r\n      <h3>Instructions</h3>\r\n    <mat-form-field appearance=\"fill\" class=\"instructions\">\r\n      <mat-label>Instructions</mat-label>\r\n      <textarea matInput [(ngModel)]=\"recipe.instructions\"></textarea>\r\n    </mat-form-field>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<div id=\"action-buttons\">\r\n  <button mat-raised-button>Cancel</button>\r\n  <button mat mat-raised-button id=\"create-btn\" (click)=\"onSubmit()\">Edit</button>\r\n</div>\r\n\r\n\r\n\r\n</mat-dialog-content>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}