{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ValidationService {\n  constructor() {}\n  passwordMatchValidator(password, confirmPassword) {\n    return formGroup => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors['passwordMismatch']) {\n        return null;\n      }\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({\n          passwordMismatch: true\n        });\n        return true;\n      } else {\n        confirmPasswordControl.setErrors(null);\n        return null;\n      }\n    };\n  }\n}\nValidationService.ɵfac = function ValidationService_Factory(t) {\n  return new (t || ValidationService)();\n};\nValidationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ValidationService,\n  factory: ValidationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,eAAgB;EAEhBC,sBAAsB,CAACC,QAAgB,EAAEC,eAAuB;IAC9D,OAAQC,SAAoB,IAAI;MAC9B,MAAMC,eAAe,GAAGD,SAAS,CAACE,QAAQ,CAACJ,QAAQ,CAAC;MACpD,MAAMK,sBAAsB,GAAGH,SAAS,CAACE,QAAQ,CAACH,eAAe,CAAC;MAElE,IAAI,CAACE,eAAe,IAAI,CAACE,sBAAsB,EAAE;QAC/C,OAAO,IAAI;;MAGb,IACEA,sBAAsB,CAACC,MAAM,IAC7B,CAACD,sBAAsB,CAACC,MAAM,CAAC,kBAAkB,CAAC,EAClD;QACA,OAAO,IAAI;;MAGb,IAAIH,eAAe,CAACI,KAAK,KAAKF,sBAAsB,CAACE,KAAK,EAAE;QAC1DF,sBAAsB,CAACG,SAAS,CAAC;UAAEC,gBAAgB,EAAE;QAAI,CAAE,CAAC;QAC1D,OAAO,IAAI;OACd,MAAM;QACLJ,sBAAsB,CAACG,SAAS,CAAC,IAAI,CAAC;QACpC,OAAO,IAAI;;IAEjB,CAAC;EACH;;AA5BWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAa,SAAjBb,iBAAiB;EAAAc,YAFhB;AAAM","names":["ValidationService","constructor","passwordMatchValidator","password","confirmPassword","formGroup","passwordControl","controls","confirmPasswordControl","errors","value","setErrors","passwordMismatch","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\validation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidationService {\r\n\r\n  constructor() { }\r\n  \r\n  passwordMatchValidator(password: string, confirmPassword: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const passwordControl = formGroup.controls[password];\r\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\r\n\r\n      if (!passwordControl || !confirmPasswordControl) {\r\n        return null;\r\n      }\r\n\r\n      if (\r\n        confirmPasswordControl.errors &&\r\n        !confirmPasswordControl.errors['passwordMismatch']\r\n      ) {\r\n        return null;\r\n      }\r\n\r\n      if (passwordControl.value !== confirmPasswordControl.value) {\r\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\r\n          return true;\r\n      } else {\r\n        confirmPasswordControl.setErrors(null);\r\n          return null;\r\n      }\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}