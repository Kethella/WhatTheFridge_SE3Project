{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { HttpParams } from '@angular/common/http';\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(_accountService, _authService, formBuilder, http, router) {\n    this._accountService = _accountService;\n    this._authService = _authService;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.queryParams = new HttpParams();\n    this.account = {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"email\": \"\",\n      \"password\": \"\",\n      \"securityQuestion\": \"\",\n      \"securityAnswer\": \"\"\n    };\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.queryParams = _this.queryParams.append(\"email\", _this.account.email);\n      _this.queryParams = _this.queryParams.append(\"password\", _this.account.password);\n      _this.account = yield _this._accountService.findAccount(_this.queryParams);\n      console.log(_this.account);\n      if (_this.account.id == \"\") {\n        alert(\"User not found. Please check again your email and password.\");\n      } else {\n        _this.loginForm.reset();\n        _this._accountService.sendOwnerAccountToServices(_this.account.id);\n        _this._authService.login();\n      }\n      /*this.http.get<any>(\"http://localhost:8085/api/v1/accounts\")\r\n      .subscribe(res =>{\r\n        let user = res.find((a:Account)=>{\r\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\r\n        }\r\n        )\r\n        console.log(res)\r\n        if(user){\r\n          alert(\"Login success\")\r\n          console.log(user.id);\r\n          this._accountService.sendOwnerAccountToServices(user.id);\r\n          this.router.navigate(['home']);\r\n        } else{\r\n          alert(\"User not found\")\r\n        }\r\n      },\r\n      err=>{\r\n        alert(\"Something went wrong !!\")\r\n            })*/\n    })();\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";;AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAASC,SAAS,QAAgB,eAAe;AAY1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAazBC,YAAoBC,eAA+B,EACzCC,YAAmC,EACnCC,WAAwB,EACxBC,IAAe,EACfC,MAAa;IAJH,oBAAe,GAAfJ,eAAe;IACzB,iBAAY,GAAZC,YAAY;IACZ,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IAdT,gBAAW,GAAG,IAAIR,UAAU,EAAE;IAC9B,YAAO,GAAY;MACxB,IAAI,EAAE,EAAE;MACR,MAAM,EAAE,EAAE;MACV,OAAO,EAAE,EAAE;MACX,UAAU,EAAE,EAAE;MACd,kBAAkB,EAAE,EAAE;MACtB,gBAAgB,EAAE;KACnB;EAM2B;EAE5BS,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACtCC,KAAK,EAAC,CAAC,EAAE,CAAC;MACVC,QAAQ,EAAC,CAAC,EAAE;KACb,CAAC;EACJ;EAEMC,KAAK;IAAA;IAAA;MACT,KAAI,CAACC,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,OAAO,EAAE,KAAI,CAACC,OAAO,CAACL,KAAK,CAAC;MACvE,KAAI,CAACG,WAAW,GAAG,KAAI,CAACA,WAAW,CAACC,MAAM,CAAC,UAAU,EAAE,KAAI,CAACC,OAAO,CAACJ,QAAQ,CAAC;MAC7E,KAAI,CAACI,OAAO,SAAS,KAAI,CAACb,eAAe,CAACc,WAAW,CAAC,KAAI,CAACH,WAAW,CAAC;MAEvEI,OAAO,CAACC,GAAG,CAAC,KAAI,CAACH,OAAO,CAAC;MAEzB,IAAG,KAAI,CAACA,OAAO,CAACI,EAAE,IAAI,EAAE,EAAC;QACvBC,KAAK,CAAC,6DAA6D,CAAC;OACrE,MACI;QACH,KAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;QACtB,KAAI,CAACnB,eAAe,CAACoB,0BAA0B,CAAC,KAAI,CAACP,OAAO,CAACI,EAAE,CAAC;QAChE,KAAI,CAAChB,YAAY,CAACS,KAAK,EAAE;;MAI3B;;;;;;;;;;;;;;;;;;;IAAA;EAoBF;CAGC;;AAlEUZ,cAAc,eAL1BD,SAAS,CAAC;EACTwB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWzB,cAAc,CAkExB;SAlEUA,cAAc","names":["HttpParams","Component","LoginComponent","constructor","_accountService","_authService","formBuilder","http","router","ngOnInit","loginForm","group","email","password","login","queryParams","append","account","findAccount","console","log","id","alert","reset","sendOwnerAccountToServices","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-auth\\login\\login.component.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Account } from 'src/app/models/account';\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm!: FormGroup;\r\n  public queryParams = new HttpParams();\r\n  public account: Account = {\r\n    \"id\": \"\",\r\n    \"name\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"securityQuestion\": \"\",\r\n    \"securityAnswer\": \"\"\r\n  }\r\n\r\n  constructor(private _accountService: AccountService,\r\n    private _authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private http:HttpClient,\r\n    private router:Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      email:[''],\r\n      password:[''],\r\n    })\r\n  }\r\n\r\n  async login(){\r\n    this.queryParams = this.queryParams.append(\"email\", this.account.email);\r\n    this.queryParams = this.queryParams.append(\"password\", this.account.password);\r\n    this.account = await this._accountService.findAccount(this.queryParams);\r\n\r\n    console.log(this.account)\r\n\r\n    if(this.account.id == \"\"){\r\n      alert(\"User not found. Please check again your email and password.\")\r\n    }\r\n    else {\r\n      this.loginForm.reset();\r\n      this._accountService.sendOwnerAccountToServices(this.account.id);\r\n      this._authService.login()\r\n    }\r\n\r\n\r\n    /*this.http.get<any>(\"http://localhost:8085/api/v1/accounts\")\r\n    .subscribe(res =>{\r\n      let user = res.find((a:Account)=>{\r\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\r\n      }\r\n      )\r\n      console.log(res)\r\n      if(user){\r\n        alert(\"Login success\")\r\n        console.log(user.id);\r\n        this._accountService.sendOwnerAccountToServices(user.id);\r\n        this.router.navigate(['home']);\r\n      } else{\r\n        alert(\"User not found\")\r\n      }\r\n    },\r\n    err=>{\r\n      alert(\"Something went wrong !!\")\r\n\r\n    })*/\r\n  }\r\n\r\n\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}