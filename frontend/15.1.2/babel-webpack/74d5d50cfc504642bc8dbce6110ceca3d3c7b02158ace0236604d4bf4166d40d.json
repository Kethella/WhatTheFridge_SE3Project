{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = \"http://localhost:8085/api/v1/accounts\";\n  }\n  createAccount(account) {\n    return this.http.post(`${this._baseUrl}`, account);\n  }\n  getSecurityQuestions() {\n    return this.http.get(\"http://localhost:8085/api/v1/securityQuestions\");\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAwCA,WAAW,QAAQ,sBAAsB;;;AAIjF,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKH,OAAM,MAAOG,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,aAAQ,GAAG,uCAAuC;EAGlB;EAExCC,aAAa,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAU,GAAG,IAAI,CAACC,QAAQ,EAAE,EAAEF,OAAO,CAAC;EAC7D;EAEAG,oBAAoB;IAClB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAsB,gDAAgD,CAAC;EAC7F;;AAbWR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["HttpHeaders","httpOptions","headers","AccountService","constructor","http","createAccount","account","post","_baseUrl","getSecurityQuestions","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Account } from '../models/account'\r\nimport { ISecurityQuestion } from '../models/securityQuestions';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  private _baseUrl = \"http://localhost:8085/api/v1/accounts\";\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createAccount(account: Account): Observable<Account> {\r\n    return this.http.post<Account>(`${this._baseUrl}`, account);\r\n  }\r\n\r\n  getSecurityQuestions(): Observable<ISecurityQuestion[]> {\r\n    return this.http.get<ISecurityQuestion[]>(\"http://localhost:8085/api/v1/securityQuestions\")\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}