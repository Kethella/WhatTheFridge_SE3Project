{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nexport class AuthGuard {\n  constructor(router, _authService) {\n    this.router = router;\n    this._authService = _authService;\n  }\n  canActivate(route, state) {\n    console.log(\"Guard\");\n    if (this._authService.isLoggedInValue()) {\n      return true;\n    } else {\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAmBC,MAAc,EAASC,YAAmC;IAA1D,WAAM,GAAND,MAAM;IAAiB,iBAAY,GAAZC,YAAY;EAEtD;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,IAAI,CAACL,YAAY,CAACM,eAAe,EAAE,EAAE;MACvC,OAAO,IAAI;KACZ,MACI;MACH,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAGhB;;AAnBWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","router","_authService","canActivate","route","state","console","log","isLoggedInValue","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(public router: Router, public _authService: AuthenticationService) {\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    console.log(\"Guard\")\n    if (this._authService.isLoggedInValue()) {\n      return true;\n    }\n    else {\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}