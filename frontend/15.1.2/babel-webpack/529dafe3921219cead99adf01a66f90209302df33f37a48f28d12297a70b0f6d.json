{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/list\";\nimport * as i12 from \"@angular/material/select\";\nfunction AccountViewComponent_mat_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", question_r1.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r1.text, \" \");\n  }\n}\nexport class AccountViewComponent {\n  constructor(_accountService, router) {\n    this._accountService = _accountService;\n    this.router = router;\n    this.isDisabled = true;\n    this.btnText = \"Edit\";\n    this.fakePassword = \"*********\";\n    this.fakeSecurityAnswer = \"*********\";\n    this.account = {\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      securityQuestion: \"\",\n      securityAnswer: \"\"\n    };\n    this.selectedSecurityQuestion = {\n      enumValue: \"\",\n      text: \"\"\n    };\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.account = yield _this._accountService.getAccountInfo();\n      _this.securityQuestions = yield _this._accountService.getSecurityQuestions();\n      _this.selectedSecurityQuestion = _this.getSecurityQuestion(true, _this.account.securityQuestion);\n    })();\n  }\n  navigateToUpdateAccount() {\n    this.router.navigate(['update_account']);\n  }\n  changeDisabled() {\n    if (this.isDisabled) {\n      this.isDisabled = false;\n      this.btnText = \"Save\";\n      this.fakePassword = this.account.password;\n      this.fakeSecurityAnswer = this.account.securityAnswer;\n    } else {\n      this.isDisabled = true;\n      this.btnText = \"Edit\";\n      this.account.password = this.fakePassword;\n      this.fakePassword = \"*********\";\n      this.account.securityQuestion = this.getSecurityQuestion(false, this.selectedSecurityQuestion.text).enumValue;\n      this.account.securityAnswer = this.fakeSecurityAnswer;\n      this.fakeSecurityAnswer = \"*********\";\n      console.log(this.account);\n      //this.updateAccount()\n    }\n  }\n\n  getSecurityQuestion(enumToText, input) {\n    if (enumToText) {\n      for (let question of this.securityQuestions) {\n        if (question.enumValue === input) {\n          return question;\n        }\n      }\n    } else {\n      for (let question of this.securityQuestions) {\n        if (question.text === input) {\n          return question;\n        }\n      }\n    }\n    return {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n  }\n  updateAccount() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let response = yield _this2._accountService.updateAccountInfo(_this2.account);\n      console.log(response);\n    })();\n  }\n  deleteAccount() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      //let response: Account = await this._accountService.deleteAccount()\n      //console.log(response)\n      _this3.router.navigate(['login']);\n    })();\n  }\n}\nAccountViewComponent.ɵfac = function AccountViewComponent_Factory(t) {\n  return new (t || AccountViewComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAccountViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountViewComponent,\n  selectors: [[\"app-account-view\"]],\n  decls: 38,\n  vars: 12,\n  consts: [[1, \"parent\"], [1, \"profile-card\"], [\"mat-raised-button\", \"\", 1, \"btn\", 3, \"click\"], [\"matListItemIcon\", \"\"], [1, \"profile-info-section\"], [1, \"info-block\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"appearance\", \"fill\"], [3, \"value\", \"disabled\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [3, \"value\"]],\n  template: function AccountViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"h1\");\n      i0.ɵɵtext(4, \"Account Settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountViewComponent_Template_button_click_5_listener() {\n        return ctx.changeDisabled();\n      });\n      i0.ɵɵelementStart(6, \"mat-icon\", 3);\n      i0.ɵɵtext(7, \"settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"h3\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.account.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"h3\");\n      i0.ɵɵtext(17, \"E-Mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-form-field\")(19, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.account.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"h3\");\n      i0.ɵɵtext(22, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"mat-form-field\")(24, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.fakePassword = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"h3\");\n      i0.ɵɵtext(27, \"Security question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"mat-form-field\", 8)(29, \"mat-select\", 9);\n      i0.ɵɵlistener(\"valueChange\", function AccountViewComponent_Template_mat_select_valueChange_29_listener($event) {\n        return ctx.selectedSecurityQuestion.text = $event;\n      });\n      i0.ɵɵtemplate(30, AccountViewComponent_mat_option_30_Template, 2, 2, \"mat-option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 5)(32, \"h3\");\n      i0.ɵɵtext(33, \"Security Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-form-field\")(35, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.fakeSecurityAnswer = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AccountViewComponent_Template_button_click_36_listener() {\n        return ctx.deleteAccount();\n      });\n      i0.ɵɵtext(37, \"Delete account\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" \", ctx.btnText, \" \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.name)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.email)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.fakePassword)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.selectedSecurityQuestion.text)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.securityQuestions);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.fakeSecurityAnswer)(\"disabled\", ctx.isDisabled);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatOption, i6.MatButton, i7.MatCard, i7.MatCardHeader, i8.MatIcon, i9.MatInput, i10.MatFormField, i11.MatListItemIcon, i12.MatSelect],\n  styles: [\".parent[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.profile-card[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    margin-top: 30px;\\r\\n    border-radius: 25px;\\r\\n    min-width: 400px;\\r\\n    width: 500px;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  width: 100%;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  color: white;\\r\\n  margin-right: 50px;\\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%] {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n}\\r\\n\\r\\n.info-block[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.profile-info-section[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n  background-color: #D0F4EC;\\r\\n  color: black;\\r\\n  width: 130px;\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hY2NvdW50LXZpZXcvYWNjb3VudC12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHdCQUFtQjtFQUFuQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtBQUN6Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7O0FBRWQiLCJzb3VyY2VzQ29udGVudCI6WyIucGFyZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ucHJvZmlsZS1jYXJkIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgbWluLXdpZHRoOiA0MDBweDtcclxuICAgIHdpZHRoOiA1MDBweDtcclxufVxyXG5cclxubWF0LWNhcmQtaGVhZGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbmgxIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG5oMyB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIge1xyXG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcbn1cclxuXHJcbi5pbmZvLWJsb2NrIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcbi5wcm9maWxlLWluZm8tc2VjdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG59XHJcblxyXG4uYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDBGNEVDO1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB3aWR0aDogMTMwcHg7XHJcblxyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;IAqCYA,sCAA+E;IAC7EA,YACF;IAAAA,iBAAa;;;;IAF0CA,wCAAuB;IAC5EA,eACF;IADEA,iDACF;;;AC5BZ,OAAM,MAAOC,oBAAoB;EAU/BC,YAAoBC,eAA+B,EAAUC,MAAc;IAAvD,oBAAe,GAAfD,eAAe;IAA0B,WAAM,GAANC,MAAM;IALnE,eAAU,GAAY,IAAI;IAC1B,YAAO,GAAW,MAAM;IACxB,iBAAY,GAAW,WAAW;IAClC,uBAAkB,GAAW,WAAW;IAGtC,IAAI,CAACC,OAAO,GAAG;MACbC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE;KACjB;IAED,IAAI,CAACC,wBAAwB,GAAG;MAACC,SAAS,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAC;EAE3D;EAEMC,QAAQ;IAAA;IAAA;MACZ,KAAI,CAACV,OAAO,SAAS,KAAI,CAACF,eAAe,CAACa,cAAc,EAAE;MAC1D,KAAI,CAACC,iBAAiB,SAAS,KAAI,CAACd,eAAe,CAACe,oBAAoB,EAAE;MAC1E,KAAI,CAACN,wBAAwB,GAAG,KAAI,CAACO,mBAAmB,CAAC,IAAI,EAAE,KAAI,CAACd,OAAO,CAACK,gBAAgB,CAAC;IAAA;EAC/F;EAEAU,uBAAuB;IACrB,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EAC1C;EAEAC,cAAc;IACZ,IAAG,IAAI,CAACC,UAAU,EAAE;MAClB,IAAI,CAACA,UAAU,GAAG,KAAK;MACvB,IAAI,CAACC,OAAO,GAAG,MAAM;MACrB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACpB,OAAO,CAACI,QAAQ;MACzC,IAAI,CAACiB,kBAAkB,GAAG,IAAI,CAACrB,OAAO,CAACM,cAAc;KACtD,MACI;MACH,IAAI,CAACY,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,OAAO,GAAG,MAAM;MACrB,IAAI,CAACnB,OAAO,CAACI,QAAQ,GAAG,IAAI,CAACgB,YAAY;MACzC,IAAI,CAACA,YAAY,GAAG,WAAW;MAC/B,IAAI,CAACpB,OAAO,CAACK,gBAAgB,GAAG,IAAI,CAACS,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAACP,wBAAwB,CAACE,IAAI,CAAC,CAACD,SAAS;MAC7G,IAAI,CAACR,OAAO,CAACM,cAAc,GAAG,IAAI,CAACe,kBAAkB;MACrD,IAAI,CAACA,kBAAkB,GAAG,WAAW;MACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvB,OAAO,CAAC;MACzB;;EAEJ;;EAEAc,mBAAmB,CAACU,UAAmB,EAAEC,KAAa;IACpD,IAAGD,UAAU,EAAE;MACb,KAAI,IAAIE,QAAQ,IAAI,IAAI,CAACd,iBAAiB,EAAE;QAC1C,IAAGc,QAAQ,CAAClB,SAAS,KAAKiB,KAAK,EAAE;UAC/B,OAAOC,QAAQ;;;KAGpB,MACI;MACH,KAAI,IAAIA,QAAQ,IAAI,IAAI,CAACd,iBAAiB,EAAE;QAC1C,IAAGc,QAAQ,CAACjB,IAAI,KAAKgB,KAAK,EAAE;UAC1B,OAAOC,QAAQ;;;;IAKrB,OAAO;MAAC,WAAW,EAAE,EAAE;MAAE,MAAM,EAAE;IAAE,CAAC;EACtC;EAEMC,aAAa;IAAA;IAAA;MACjB,IAAIC,QAAQ,SAAkB,MAAI,CAAC9B,eAAe,CAAC+B,iBAAiB,CAAC,MAAI,CAAC7B,OAAO,CAAC;MAClFsB,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;IAAA;EACvB;EAEME,aAAa;IAAA;IAAA;MACjB;MACA;MACA,MAAI,CAAC/B,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAC;EAClC;;AAlFWpB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXjCxC,8BAAoB;MAGVA,gCAAgB;MAAAA,iBAAK;MACzBA,iCAAiE;MAA3BA;QAAA,OAASyC,oBAAgB;MAAA,EAAC;MAC9DzC,mCAA0B;MAAAA,wBAAQ;MAAAA,iBAAW;MAC7CA,YACF;MAAAA,iBAAS;MAGXA,8BAAkC;MAGxBA,qBAAI;MAAAA,iBAAK;MACbA,uCAAgB;MACcA;QAAA;MAAA,EAA0B;MAAtDA,iBAA+E;MAIrFA,+BAAwB;MAChBA,uBAAM;MAAAA,iBAAK;MACfA,uCAAgB;MACeA;QAAA;MAAA,EAA2B;MAAxDA,iBAAiF;MAIvFA,+BAAwB;MAChBA,yBAAQ;MAAAA,iBAAK;MACjBA,uCAAgB;MACcA;QAAA;MAAA,EAA0B;MAAtDA,iBAA+E;MAIrFA,+BAAwB;MAClBA,kCAAiB;MAAAA,iBAAK;MAC1BA,0CAAkC;MACpBA;QAAA;MAAA,EAAyC;MACnDA,sFAEa;MACfA,iBAAa;MAIjBA,+BAAwB;MAChBA,gCAAe;MAAAA,iBAAK;MACxBA,uCAAgB;MACcA;QAAA;MAAA,EAAgC;MAA5DA,iBAAqF;MAI3FA,mCAAiE;MAA1BA;QAAA,OAASyC,mBAAe;MAAA,EAAC;MAACzC,+BAAc;MAAAA,iBAAS;;;MA7CtFA,eACF;MADEA,4CACF;MAQkCA,eAA0B;MAA1BA,0CAA0B;MAOzBA,eAA2B;MAA3BA,2CAA2B;MAO5BA,eAA0B;MAA1BA,0CAA0B;MAO5CA,eAAyC;MAAzCA,yDAAyC;MAClBA,eAAoB;MAApBA,+CAAoB;MAUzBA,eAAgC;MAAhCA,gDAAgC","names":["i0","AccountViewComponent","constructor","_accountService","router","account","id","name","email","password","securityQuestion","securityAnswer","selectedSecurityQuestion","enumValue","text","ngOnInit","getAccountInfo","securityQuestions","getSecurityQuestions","getSecurityQuestion","navigateToUpdateAccount","navigate","changeDisabled","isDisabled","btnText","fakePassword","fakeSecurityAnswer","console","log","enumToText","input","question","updateAccount","response","updateAccountInfo","deleteAccount","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-view\\account-view.component.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-view\\account-view.component.ts"],"sourcesContent":["<div class=\"parent\">\r\n  <mat-card class=\"profile-card\">\r\n    <mat-card-header>\r\n      <h1>Account Settings</h1>\r\n      <button mat-raised-button class=\"btn\" (click)=\"changeDisabled()\">\r\n        <mat-icon matListItemIcon>settings</mat-icon>\r\n        {{btnText}}\r\n      </button>\r\n    </mat-card-header>\r\n\r\n    <div class=\"profile-info-section\">\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Name</h3>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [(ngModel)]=\"account.name\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>E-Mail</h3>\r\n          <mat-form-field>\r\n            <input type=\"email\" matInput [(ngModel)]=\"account.email\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Password</h3>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [(ngModel)]=\"fakePassword\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n        <h3>Security question</h3>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-select [(value)]=\"selectedSecurityQuestion.text\" [disabled]=\"isDisabled\">\r\n            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.text\">\r\n              {{question.text}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Security Answer</h3>\r\n          <mat-form-field>\r\n            <input matInput type=\"text\" [(ngModel)]=\"fakeSecurityAnswer\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <button mat-raised-button color=\"warn\" (click)=\"deleteAccount()\">Delete account</button>\r\n\r\n\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from 'src/app/models/account';\r\nimport { ISecurityQuestion } from 'src/app/models/securityQuestions'\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { Router, TitleStrategy } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-view',\r\n  templateUrl: './account-view.component.html',\r\n  styleUrls: ['./account-view.component.css']\r\n})\r\nexport class AccountViewComponent implements OnInit {\r\n  account: Account;\r\n  securityQuestions: ISecurityQuestion[];\r\n  selectedSecurityQuestion: ISecurityQuestion;\r\n\r\n  isDisabled: boolean = true;\r\n  btnText: string = \"Edit\";\r\n  fakePassword: string = \"*********\"\r\n  fakeSecurityAnswer: string = \"*********\"\r\n\r\n  constructor(private _accountService: AccountService, private router: Router){\r\n    this.account = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      securityQuestion: \"\",\r\n      securityAnswer: \"\"\r\n    }\r\n\r\n    this.selectedSecurityQuestion = {enumValue: \"\", text: \"\"}\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.account = await this._accountService.getAccountInfo()\r\n    this.securityQuestions = await this._accountService.getSecurityQuestions()\r\n    this.selectedSecurityQuestion = this.getSecurityQuestion(true, this.account.securityQuestion)\r\n  }\r\n\r\n  navigateToUpdateAccount(){\r\n    this.router.navigate(['update_account'])\r\n  }\r\n\r\n  changeDisabled() {\r\n    if(this.isDisabled) {\r\n      this.isDisabled = false;\r\n      this.btnText = \"Save\"\r\n      this.fakePassword = this.account.password;\r\n      this.fakeSecurityAnswer = this.account.securityAnswer;\r\n    }\r\n    else {\r\n      this.isDisabled = true;\r\n      this.btnText = \"Edit\"\r\n      this.account.password = this.fakePassword;\r\n      this.fakePassword = \"*********\";\r\n      this.account.securityQuestion = this.getSecurityQuestion(false, this.selectedSecurityQuestion.text).enumValue;\r\n      this.account.securityAnswer = this.fakeSecurityAnswer;\r\n      this.fakeSecurityAnswer = \"*********\"\r\n      console.log(this.account)\r\n      //this.updateAccount()\r\n    }\r\n  }\r\n\r\n  getSecurityQuestion(enumToText: boolean, input: string): ISecurityQuestion {\r\n    if(enumToText) {\r\n      for(let question of this.securityQuestions) {\r\n        if(question.enumValue === input) {\r\n          return question;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for(let question of this.securityQuestions) {\r\n        if(question.text === input) {\r\n          return question;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\"enumValue\": \"\", \"text\": \"\"};\r\n  }\r\n\r\n  async updateAccount() {\r\n    let response: Account = await this._accountService.updateAccountInfo(this.account)\r\n    console.log(response)\r\n  }\r\n\r\n  async deleteAccount() {\r\n    //let response: Account = await this._accountService.deleteAccount()\r\n    //console.log(response)\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}