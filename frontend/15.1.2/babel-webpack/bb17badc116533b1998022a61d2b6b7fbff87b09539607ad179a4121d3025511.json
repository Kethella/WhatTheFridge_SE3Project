{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { NonNullableFormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/recipe.service\";\nfunction RecipeSortFilterComponent_mat_chip_row_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 13);\n    i0.ɵɵlistener(\"removed\", function RecipeSortFilterComponent_mat_chip_row_20_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const fruit_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.remove(fruit_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 14)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const fruit_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"remove \" + fruit_r3);\n  }\n}\nfunction RecipeFilterDialog_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r2.text, \" \");\n  }\n}\nfunction RecipeFilterDialog_mat_chip_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", tag_r3)(\"selected\", ctx_r1.tagWasSelected(tag_r3, ctx_r1.data.selectedTagsAsArray));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r3, \" \");\n  }\n}\nexport class RecipeSortFilterComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.newQueryEvent = new EventEmitter();\n    this.newSortEvent = new EventEmitter();\n    this.queryParams = new HttpParams();\n    this.ingredientsAsArray = [];\n    this.addOnBlur = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.selectedIngredients = \"\";\n    this.selectedTags = \"\";\n    this.selectedTagsAsArray = [];\n    this.tags = [];\n    this.selectedCategory = {\n      text: \"\",\n      enumValue: \"\"\n    };\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(RecipeFilterDialog, {\n      width: '900px',\n      data: {\n        selectedCategory: this.selectedCategory,\n        selectedTagsAsArray: this.selectedTagsAsArray\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result?.selectedCategory.enumValue != NonNullableFormBuilder) {\n        this.selectedCategory = result.selectedCategory;\n      }\n      if (result?.selectedTagsAsArray != null) {\n        this.selectedTagsAsArray = result.selectedTagsAsArray;\n      }\n      if (!this.selectedTagsAsArray.length) {\n        this.selectedTags = \"\";\n      } else {\n        this.selectedTagsAsArray.forEach((value, index) => {\n          if (index == 0) {\n            this.selectedTags = value;\n          } else {\n            this.selectedTags = this.selectedTags.concat(\",\" + value);\n          }\n        });\n      }\n      this.query();\n    });\n  }\n  query() {\n    this.queryParams = this.queryParams.delete('category');\n    this.queryParams = this.queryParams.delete('tags');\n    if (this.selectedCategory && this.selectedCategory.text != \"\") {\n      this.queryParams = this.queryParams.append(\"category\", this.selectedCategory.enumValue);\n    }\n    if (this.selectedTags) {\n      this.queryParams = this.queryParams.append(\"tags\", this.selectedTags);\n    }\n    if (this.selectedIngredients) {\n      this.queryParams = this.queryParams.append(\"ingredientNames\", this.selectedIngredients);\n    }\n    this.newQueryEvent.emit(this.queryParams);\n  }\n  //METHODS FOR THE INGREDIENTS FILTERING\n  add(event) {\n    const value = (event.value || '').trim();\n    if (value) {\n      this.ingredientsAsArray.push({\n        name: value\n      });\n      this.prepIngredientsQuery();\n      this.query();\n    }\n    event.chipInput.clear();\n  }\n  remove(ingredient) {\n    const index = this.ingredientsAsArray.indexOf(ingredient);\n    if (index >= 0) {\n      this.ingredientsAsArray.splice(index, 1);\n      this.prepIngredientsQuery();\n      this.query();\n    }\n  }\n  prepIngredientsQuery() {\n    this.selectedIngredients = '';\n    for (let ingredient of this.ingredientsAsArray) {\n      if (this.ingredientsAsArray.indexOf(ingredient) > 0) {\n        this.selectedIngredients = this.selectedIngredients.concat(',' + ingredient.name);\n      } else {\n        this.selectedIngredients = ingredient.name;\n      }\n    }\n    this.queryParams = this.queryParams.delete('ingredientNames');\n  }\n  //METHODS FOR THE SORT BUTTON\n  sortByName(startWith) {\n    this.newSortEvent.emit(\"name\" + startWith);\n  }\n}\nRecipeSortFilterComponent.ɵfac = function RecipeSortFilterComponent_Factory(t) {\n  return new (t || RecipeSortFilterComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n};\nRecipeSortFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeSortFilterComponent,\n  selectors: [[\"app-recipe-sort-filter\"]],\n  outputs: {\n    newQueryEvent: \"newQueryEvent\",\n    newSortEvent: \"newSortEvent\"\n  },\n  decls: 31,\n  vars: 7,\n  consts: [[1, \"query-functions\"], [1, \"textAndButtons\"], [1, \"buttons\"], [\"mat-raised-button\", \"\", 3, \"matMenuTriggerFor\"], [\"sort\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"appearance\", \"fill\", 1, \"ingredients-chip-list\"], [\"chipGrid\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New ingredient...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [1, \"query-info\"], [1, \"query-info\", \"main\"], [3, \"removed\"], [\"matChipRemove\", \"\"]],\n  template: function RecipeSortFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"What would you like to use?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Sort\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-menu\", null, 4)(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function RecipeSortFilterComponent_Template_button_click_9_listener() {\n        return ctx.sortByName(\"A\");\n      });\n      i0.ɵɵtext(10, \"Name: A-Z\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function RecipeSortFilterComponent_Template_button_click_11_listener() {\n        return ctx.sortByName(\"Z\");\n      });\n      i0.ɵɵtext(12, \"Name: Z-A\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function RecipeSortFilterComponent_Template_button_click_13_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(14, \"Filter\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"mat-form-field\", 7)(16, \"mat-label\");\n      i0.ɵɵtext(17, \"Ingredients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"mat-chip-grid\", null, 8);\n      i0.ɵɵtemplate(20, RecipeSortFilterComponent_mat_chip_row_20_Template, 5, 2, \"mat-chip-row\", 9);\n      i0.ɵɵelementStart(21, \"input\", 10);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function RecipeSortFilterComponent_Template_input_matChipInputTokenEnd_21_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"div\")(24, \"span\", 12);\n      i0.ɵɵtext(25, \"Category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\")(28, \"span\", 12);\n      i0.ɵɵtext(29, \"Tags:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n      const _r1 = i0.ɵɵreference(19);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"matMenuTriggerFor\", _r0);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ingredientsAsArray);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.selectedCategory.text, \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.selectedTags, \"\");\n    }\n  },\n  styles: [\".query-functions[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.textAndButtons[_ngcontent-%COMP%] {\\r\\n  width: 80%;\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.buttons[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  gap: 10px;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]{\\r\\n  height: 50px;\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.ingredients-chip-list[_ngcontent-%COMP%] {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.query-info[_ngcontent-%COMP%]{\\r\\n  width: 80%;\\r\\n  margin-top: -20px;\\r\\n}\\r\\n\\r\\n.query-info.main[_ngcontent-%COMP%]{\\r\\n  font-weight: bold;\\r\\n  color: black;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9ob21lL3JlY2lwZS1zb3J0LWZpbHRlci9yZWNpcGUtc29ydC1maWx0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1QsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5xdWVyeS1mdW5jdGlvbnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4udGV4dEFuZEJ1dHRvbnMge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uYnV0dG9uc3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMTBweDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICBoZWlnaHQ6IDUwcHg7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4uaW5ncmVkaWVudHMtY2hpcC1saXN0IHtcclxuICB3aWR0aDogODAlO1xyXG59XHJcblxyXG4ucXVlcnktaW5mb3tcclxuICB3aWR0aDogODAlO1xyXG4gIG1hcmdpbi10b3A6IC0yMHB4O1xyXG59XHJcblxyXG4ucXVlcnktaW5mby5tYWlue1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport class RecipeFilterDialog {\n  constructor(dialogRef, data, _recipeService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this._recipeService = _recipeService;\n    this.queryParams = new HttpParams();\n    this.tags = [];\n    this.selectedCategory = {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n    this.selectedCategory = data.selectedCategory;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.tags = yield _this._recipeService.getTags();\n      _this.categories = yield _this._recipeService.getCategories();\n    })();\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  onCloseClick(categories, selectedCategory) {\n    if (selectedCategory.text != undefined) {\n      this.data.selectedCategory = this.setSelectedCategory(categories, selectedCategory);\n    } else {\n      this.selectedCategory.text = \"\";\n      this.selectedCategory.enumValue = \"\";\n    }\n    this.dialogRef.close(this.data);\n  }\n  tagWasSelected(tagToCheck, tagsAsArray) {\n    for (let tag of tagsAsArray) {\n      if (tag == tagToCheck) {\n        return true;\n      }\n    }\n    return false;\n  }\n  setSelectedCategory(categories, selectedCategory) {\n    for (let category of categories) {\n      if (selectedCategory.text == category.text) {\n        selectedCategory.enumValue = category.enumValue;\n      }\n    }\n    return selectedCategory;\n  }\n}\nRecipeFilterDialog.ɵfac = function RecipeFilterDialog_Factory(t) {\n  return new (t || RecipeFilterDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.RecipeService));\n};\nRecipeFilterDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeFilterDialog,\n  selectors: [[\"recipe-filter-dialog\"]],\n  decls: 22,\n  vars: 4,\n  consts: [[\"id\", \"dialog\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"selectable\", \"\", \"multiple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"chip\", 3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [3, \"value\"], [1, \"chip\", 3, \"value\", \"selected\"]],\n  template: function RecipeFilterDialog_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Hi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h1\");\n      i0.ɵɵtext(5, \"Categories\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-form-field\", 3)(7, \"mat-label\");\n      i0.ɵɵtext(8, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-select\", 4);\n      i0.ɵɵlistener(\"valueChange\", function RecipeFilterDialog_Template_mat_select_valueChange_9_listener($event) {\n        return ctx.selectedCategory.text = $event;\n      });\n      i0.ɵɵelementStart(10, \"mat-option\");\n      i0.ɵɵtext(11, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, RecipeFilterDialog_mat_option_12_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"h1\");\n      i0.ɵɵtext(14, \"Tags\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-chip-listbox\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RecipeFilterDialog_Template_mat_chip_listbox_ngModelChange_15_listener($event) {\n        return ctx.data.selectedTagsAsArray = $event;\n      });\n      i0.ɵɵtemplate(16, RecipeFilterDialog_mat_chip_option_16_Template, 2, 3, \"mat-chip-option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RecipeFilterDialog_Template_button_click_18_listener() {\n        return ctx.onNoClick();\n      });\n      i0.ɵɵtext(19, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RecipeFilterDialog_Template_button_click_20_listener() {\n        return ctx.onCloseClick(ctx.categories, ctx.selectedCategory);\n      });\n      i0.ɵɵtext(21, \"Apply\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"value\", ctx.selectedCategory.text);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.data.selectedTagsAsArray);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n    }\n  },\n  styles: [\"#dialog[_ngcontent-%COMP%] {\\r\\n  background: #2B2B2B;\\r\\n}\\r\\n\\r\\n.mat-mdc-chip-selected[_ngcontent-%COMP%]{\\r\\n  background-color: #69f0ae !important;\\r\\n  --mdc-chip-label-text-color: black !important;\\r\\n  --mdc-chip-with-icon-selected-icon-color: black !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9ob21lL3JlY2lwZS1zb3J0LWZpbHRlci9yZWNpcGUtZmlsdGVyLWRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsNkNBQTZDO0VBQzdDLDBEQUEwRDtBQUM1RCIsInNvdXJjZXNDb250ZW50IjpbIiNkaWFsb2cge1xyXG4gIGJhY2tncm91bmQ6ICMyQjJCMkI7XHJcbn1cclxuXHJcbi5tYXQtbWRjLWNoaXAtc2VsZWN0ZWR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY5ZjBhZSAhaW1wb3J0YW50O1xyXG4gIC0tbWRjLWNoaXAtbGFiZWwtdGV4dC1jb2xvcjogYmxhY2sgIWltcG9ydGFudDtcclxuICAtLW1kYy1jaGlwLXdpdGgtaWNvbi1zZWxlY3RlZC1pY29uLWNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","HttpParams","MAT_DIALOG_DATA","ENTER","COMMA","NonNullableFormBuilder","i0","RecipeSortFilterComponent","constructor","dialog","selectedIngredients","selectedTags","selectedTagsAsArray","tags","selectedCategory","text","enumValue","openDialog","dialogRef","open","RecipeFilterDialog","width","data","afterClosed","subscribe","result","length","forEach","value","index","concat","query","queryParams","delete","append","newQueryEvent","emit","add","event","trim","ingredientsAsArray","push","name","prepIngredientsQuery","chipInput","clear","remove","ingredient","indexOf","splice","sortByName","startWith","newSortEvent","selectors","outputs","decls","vars","consts","template","ctx","_recipeService","ngOnInit","getTags","categories","getCategories","onNoClick","close","onCloseClick","undefined","setSelectedCategory","tagWasSelected","tagToCheck","tagsAsArray","tag","category"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\home\\recipe-sort-filter\\recipe-sort-filter.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\home\\recipe-sort-filter\\recipe-sort-filter.component.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\home\\recipe-sort-filter\\recipe-filter-dialog.html"],"sourcesContent":["import { Component, Output, EventEmitter, Inject, OnInit, LOCALE_ID } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatChipEditedEvent, MatChipInputEvent} from '@angular/material/chips';\r\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\r\nimport { RecipeService } from 'src/app/services/recipe.service';\r\nimport { ICategory } from 'src/app/models/category';\r\nimport { FormBuilder, FormGroup,FormControl,Validators, NonNullableFormBuilder } from '@angular/forms';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-recipe-sort-filter',\r\n  templateUrl: './recipe-sort-filter.component.html',\r\n  styleUrls: ['./recipe-sort-filter.component.css']\r\n})\r\nexport class RecipeSortFilterComponent{\r\n\r\n  @Output() public newQueryEvent = new EventEmitter<HttpParams>();\r\n  @Output() public newSortEvent = new EventEmitter();\r\n\r\n  public queryParams = new HttpParams();\r\n\r\n  selectedCategory: ICategory;\r\n\r\n  tags: string[];\r\n  selectedTagsAsArray: string[];\r\n  selectedTags: string;\r\n\r\n  ingredientsAsArray: Ingredient[] = [];\r\n  selectedIngredients: string;\r\n\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\r\n\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    this.selectedIngredients = \"\";\r\n    this.selectedTags = \"\";\r\n    this.selectedTagsAsArray = [];\r\n    this.tags = [];\r\n    this.selectedCategory = {text: \"\", enumValue: \"\"};\r\n  }\r\n\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(RecipeFilterDialog, {\r\n      width: '900px',\r\n      data: {\r\n        selectedCategory: this.selectedCategory,\r\n        selectedTagsAsArray: this.selectedTagsAsArray\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n\r\n      if (result?.selectedCategory.enumValue != NonNullableFormBuilder) {\r\n        this.selectedCategory = result.selectedCategory;\r\n      }\r\n\r\n      if(result?.selectedTagsAsArray != null) {\r\n        this.selectedTagsAsArray = result.selectedTagsAsArray;\r\n      }\r\n\r\n\r\n      if (!this.selectedTagsAsArray.length){\r\n        this.selectedTags = \"\";\r\n      }\r\n      else{\r\n        this.selectedTagsAsArray.forEach((value: string, index: number) => {\r\n          if (index == 0){\r\n            this.selectedTags = value;\r\n          }\r\n          else {\r\n            this.selectedTags = this.selectedTags.concat(\",\" + value)\r\n          }\r\n        });\r\n      }\r\n\r\n\r\n\r\n\r\n      this.query();\r\n    });\r\n  }\r\n\r\n  query(){\r\n    this.queryParams = this.queryParams.delete('category');\r\n      this.queryParams = this.queryParams.delete('tags');\r\n\r\n\r\n\r\n    if (this.selectedCategory && this.selectedCategory.text != \"\"){\r\n      this.queryParams = this.queryParams.append(\"category\", this.selectedCategory.enumValue);\r\n    }\r\n\r\n    if (this.selectedTags){\r\n      this.queryParams = this.queryParams.append(\"tags\", this.selectedTags);\r\n    }\r\n\r\n    if (this.selectedIngredients){\r\n      this.queryParams = this.queryParams.append(\"ingredientNames\", this.selectedIngredients);\r\n    }\r\n\r\n    this.newQueryEvent.emit(this.queryParams);\r\n  }\r\n\r\n\r\n\r\n  //METHODS FOR THE INGREDIENTS FILTERING\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    if (value) {\r\n      this.ingredientsAsArray.push({name: value});\r\n      this.prepIngredientsQuery();\r\n      this.query();\r\n    }\r\n\r\n    event.chipInput!.clear();\r\n  }\r\n\r\n  remove(ingredient: Ingredient): void {\r\n    const index = this.ingredientsAsArray.indexOf(ingredient);\r\n\r\n    if (index >= 0) {\r\n      this.ingredientsAsArray.splice(index, 1);\r\n      this.prepIngredientsQuery();\r\n      this.query();\r\n    }\r\n  }\r\n\r\n  prepIngredientsQuery(){\r\n    this.selectedIngredients='';\r\n\r\n    for (let ingredient of this.ingredientsAsArray){\r\n      if(this.ingredientsAsArray.indexOf(ingredient) > 0 ){\r\n        this.selectedIngredients = this.selectedIngredients.concat(','+ingredient.name);\r\n      }\r\n      else{\r\n        this.selectedIngredients = ingredient.name;\r\n      }\r\n    }\r\n    this.queryParams = this.queryParams.delete('ingredientNames');\r\n  }\r\n\r\n\r\n  //METHODS FOR THE SORT BUTTON\r\n  sortByName(startWith: String): void {\r\n    this.newSortEvent.emit(\"name\"+startWith);\r\n  }\r\n}\r\n\r\nexport interface Ingredient {\r\n  name: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'recipe-filter-dialog',\r\n  templateUrl: 'recipe-filter-dialog.html',\r\n  styleUrls: ['./recipe-filter-dialog.css']\r\n})\r\nexport class RecipeFilterDialog implements OnInit{\r\n\r\n  public queryParams = new HttpParams();\r\n\r\n  tags: String[] = [];\r\n  selectedTagsAsArray: String[];\r\n  selectedCategory: ICategory = {\"enumValue\": \"\", \"text\":\"\"};\r\n  categories: ICategory[];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RecipeFilterDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private _recipeService: RecipeService) {\r\n      this.selectedCategory = data.selectedCategory;\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.tags = await this._recipeService.getTags();\r\n    this.categories = await this._recipeService.getCategories();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onCloseClick(categories: ICategory[], selectedCategory: ICategory): void {\r\n    if(selectedCategory.text != undefined){\r\n      this.data.selectedCategory = this.setSelectedCategory(categories, selectedCategory)\r\n    }\r\n    else {\r\n      this.selectedCategory.text = \"\"\r\n      this.selectedCategory.enumValue = \"\"\r\n    }\r\n    this.dialogRef.close(this.data)\r\n  }\r\n\r\n  tagWasSelected(tagToCheck: String, tagsAsArray: String[]): boolean {\r\n    for (let tag of tagsAsArray){\r\n      if (tag == tagToCheck){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setSelectedCategory(categories: ICategory[], selectedCategory: ICategory): ICategory{\r\n\r\n    for (let category of categories){\r\n      if (selectedCategory.text == category.text){\r\n        selectedCategory.enumValue = category.enumValue;\r\n      }\r\n    }\r\n\r\n    return selectedCategory;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  selectedCategory: ICategory;\r\n  selectedTagsAsArray: String[]\r\n}\r\n\r\n\r\n\r\n","<div class=\"query-functions\">\r\n\r\n  <div class=\"textAndButtons\">\r\n    <h1>What would you like to use?</h1>\r\n    <div class=\"buttons\">\r\n      <button mat-raised-button [matMenuTriggerFor]=\"sort\">Sort</button>\r\n        <mat-menu #sort=\"matMenu\">\r\n          <button mat-menu-item (click)=\"sortByName('A')\">Name: A-Z</button>\r\n          <button mat-menu-item (click)=\"sortByName('Z')\">Name: Z-A</button>\r\n        </mat-menu>\r\n      <button mat-raised-button (click)=\"openDialog()\">Filter</button>\r\n    </div>\r\n  </div>\r\n\r\n  <mat-form-field class=\"ingredients-chip-list\" appearance=\"fill\">\r\n    <mat-label>Ingredients</mat-label>\r\n    <mat-chip-grid #chipGrid>\r\n      <mat-chip-row *ngFor=\"let fruit of ingredientsAsArray\"\r\n                    (removed)=\"remove(fruit)\">\r\n        {{fruit.name}}\r\n        <button matChipRemove [attr.aria-label]=\"'remove ' + fruit\">\r\n          <mat-icon>cancel</mat-icon>\r\n        </button>\r\n      </mat-chip-row>\r\n      <input placeholder=\"New ingredient...\"\r\n            [matChipInputFor]=\"chipGrid\"\r\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n            [matChipInputAddOnBlur]=\"addOnBlur\"\r\n            (matChipInputTokenEnd)=\"add($event)\"/>\r\n    </mat-chip-grid>\r\n  </mat-form-field>\r\n\r\n  <div class=\"query-info\">\r\n    <div><span class=\"query-info main\">Category:</span> {{selectedCategory.text}} </div>\r\n    <div><span class=\"query-info main\">Tags:</span> {{selectedTags}}</div>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n","<div id=\"dialog\">\r\n\r\n  <h1 mat-dialog-title>Hi</h1>\r\n  <div mat-dialog-content>\r\n    <h1>Categories</h1>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Category</mat-label>\r\n      <mat-select [(value)]=\"selectedCategory.text\">\r\n        <mat-option>All</mat-option>\r\n        <mat-option *ngFor=\"let category of categories\" [value]=\"category.text\">\r\n          {{category.text}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <h1>Tags</h1>\r\n    <mat-chip-listbox [(ngModel)]=\"data.selectedTagsAsArray\" selectable multiple>\r\n      <mat-chip-option  class=\"chip\" *ngFor=\"let tag of tags\" [value]=\"tag\" [selected]=\"tagWasSelected(tag, data.selectedTagsAsArray)\">\r\n        {{tag}}\r\n      </mat-chip-option>\r\n    </mat-chip-listbox>\r\n\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n    <button mat-button (click)=\"onCloseClick(categories, selectedCategory)\">Apply</button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}