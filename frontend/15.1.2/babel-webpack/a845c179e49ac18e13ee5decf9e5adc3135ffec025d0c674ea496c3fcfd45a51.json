{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/select\";\nfunction AccountViewComponent_mat_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r1.text, \" \");\n  }\n}\nexport class AccountViewComponent {\n  constructor(_accountService, router) {\n    this._accountService = _accountService;\n    this.router = router;\n    this.isDisabled = true;\n    this.btnText = \"Edit\";\n    this.fakePassword = \"*********\";\n    this.account = {\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      securityQuestion: \"\",\n      securityAnswer: \"\"\n    };\n    this.selectedSecurityQuestion = {\n      enumValue: \"\",\n      text: \"\"\n    };\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.account = yield _this._accountService.getAccountInfo();\n      _this.securityQuestions = yield _this._accountService.getSecurityQuestions();\n      _this.selectedSecurityQuestion = _this.getSecurityQuestion(_this.account.securityQuestion);\n      console.log(_this.selectedSecurityQuestion);\n    })();\n  }\n  navigateToUpdateAccount() {\n    this.router.navigate(['update_account']);\n  }\n  changeDisabled() {\n    if (this.isDisabled) {\n      this.isDisabled = false;\n      this.btnText = \"Save\";\n      this.fakePassword = this.account.password;\n    } else {\n      this.isDisabled = true;\n      this.btnText = \"Edit\";\n      this.account.password = this.fakePassword;\n      this.fakePassword = \"*********\";\n      console.log(this.account);\n      //this.updateAccount()\n    }\n  }\n\n  getSecurityQuestion(enumValue) {\n    for (let question of this.securityQuestions) {\n      if (question.enumValue === enumValue) {\n        return question;\n      }\n    }\n    return {\n      \"enumValue\": \"\",\n      \"text\": \"\"\n    };\n  }\n  updateAccount() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let response = yield _this2._accountService.updateAccountInfo(_this2.account);\n      console.log(response);\n    })();\n  }\n  deleteAccount() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      //let response: Account = await this._accountService.deleteAccount()\n      //console.log(response)\n      _this3.router.navigate(['login']);\n    })();\n  }\n}\nAccountViewComponent.ɵfac = function AccountViewComponent_Factory(t) {\n  return new (t || AccountViewComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAccountViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountViewComponent,\n  selectors: [[\"app-account-view\"]],\n  decls: 35,\n  vars: 12,\n  consts: [[1, \"parent\"], [1, \"profile-card\"], [\"mat-raised-button\", \"\", 1, \"btn\", 3, \"click\"], [1, \"profile-info-section\"], [1, \"info-block\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [3, \"value\", \"disabled\", \"valueChange\"], [\"value\", \"question.enumValue\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"value\", \"question.enumValue\"]],\n  template: function AccountViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"h1\");\n      i0.ɵɵtext(4, \"Account Settings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountViewComponent_Template_button_click_5_listener() {\n        return ctx.changeDisabled();\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"h3\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\")(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.account.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"h3\");\n      i0.ɵɵtext(15, \"E-Mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.account.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"h3\");\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\")(22, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.fakePassword = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"h3\");\n      i0.ɵɵtext(25, \"Security question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-select\", 7);\n      i0.ɵɵlistener(\"valueChange\", function AccountViewComponent_Template_mat_select_valueChange_26_listener($event) {\n        return ctx.selectedSecurityQuestion = $event;\n      });\n      i0.ɵɵtemplate(27, AccountViewComponent_mat_option_27_Template, 2, 1, \"mat-option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 4)(29, \"h3\");\n      i0.ɵɵtext(30, \"Security Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"mat-form-field\")(32, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AccountViewComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.account.securityAnswer = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountViewComponent_Template_button_click_33_listener() {\n        return ctx.deleteAccount();\n      });\n      i0.ɵɵtext(34, \"Delete account\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.btnText);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.name)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.email)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.fakePassword)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.selectedSecurityQuestion)(\"disabled\", ctx.isDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.securityQuestions);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.account.securityAnswer)(\"disabled\", ctx.isDisabled);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatOption, i6.MatButton, i7.MatCard, i7.MatCardHeader, i8.MatInput, i9.MatFormField, i10.MatSelect],\n  styles: [\".parent[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.profile-card[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    margin-top: 30px;\\r\\n    border-radius: 25px;\\r\\n    min-width: 400px;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  width: 100%;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  color: white;\\r\\n  margin-right: 50px;\\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%] {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n}\\r\\n\\r\\n.info-block[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.profile-info-section[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n  background-color: #D0F4EC;\\r\\n  color: black;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hY2NvdW50LXZpZXcvYWNjb3VudC12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCw4QkFBOEI7RUFDOUIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx3QkFBbUI7RUFBbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5wYXJlbnQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5wcm9maWxlLWNhcmQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICBtaW4td2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICB3aWR0aDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuaDEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBtYXJnaW4tcmlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbmgzIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbm1hdC1jYXJkLWhlYWRlciB7XHJcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxufVxyXG5cclxuLmluZm8tYmxvY2sge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG5cclxuLnByb2ZpbGUtaW5mby1zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbi5idG4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEMEY0RUM7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AccountViewComponent","constructor","_accountService","router","account","id","name","email","password","securityQuestion","securityAnswer","selectedSecurityQuestion","enumValue","text","ngOnInit","getAccountInfo","securityQuestions","getSecurityQuestions","getSecurityQuestion","console","log","navigateToUpdateAccount","navigate","changeDisabled","isDisabled","btnText","fakePassword","question","updateAccount","response","updateAccountInfo","deleteAccount","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-view\\account-view.component.html","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\account-view\\account-view.component.ts"],"sourcesContent":["<div class=\"parent\">\r\n  <mat-card class=\"profile-card\">\r\n    <mat-card-header>\r\n      <h1>Account Settings</h1>\r\n      <button mat-raised-button class=\"btn\" (click)=\"changeDisabled()\">{{btnText}}</button>\r\n    </mat-card-header>\r\n\r\n    <div class=\"profile-info-section\">\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Name</h3>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [(ngModel)]=\"account.name\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>E-Mail</h3>\r\n          <mat-form-field>\r\n            <input type=\"email\" matInput [(ngModel)]=\"account.email\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Password</h3>\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [(ngModel)]=\"fakePassword\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n        <h3>Security question</h3>\r\n        <mat-select [(value)]=\"selectedSecurityQuestion\" [disabled]=\"isDisabled\">\r\n            <mat-option *ngFor=\"let question of securityQuestions\" value=\"question.enumValue\">\r\n                {{question.text}}\r\n            </mat-option>\r\n        </mat-select>\r\n      </div>\r\n\r\n      <div class=\"info-block\">\r\n          <h3>Security Answer</h3>\r\n          <mat-form-field>\r\n            <input matInput type=\"text\" [(ngModel)]=\"account.securityAnswer\" [disabled]=\"isDisabled\">\r\n          </mat-form-field>\r\n      </div>\r\n\r\n      <button mat-raised-button class=\"btn\" (click)=\"deleteAccount()\">Delete account</button>\r\n\r\n\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Account } from 'src/app/models/account';\r\nimport { ISecurityQuestion } from 'src/app/models/securityQuestions'\r\nimport { AccountService } from 'src/app/services/account.service';\r\nimport { Router, TitleStrategy } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-view',\r\n  templateUrl: './account-view.component.html',\r\n  styleUrls: ['./account-view.component.css']\r\n})\r\nexport class AccountViewComponent implements OnInit {\r\n  account: Account;\r\n  securityQuestions: ISecurityQuestion[];\r\n  selectedSecurityQuestion: ISecurityQuestion;\r\n\r\n  isDisabled: boolean = true;\r\n  btnText: string = \"Edit\";\r\n  fakePassword: string = \"*********\"\r\n\r\n  constructor(private _accountService: AccountService, private router: Router){\r\n    this.account = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      securityQuestion: \"\",\r\n      securityAnswer: \"\"\r\n    }\r\n\r\n    this.selectedSecurityQuestion = {enumValue: \"\", text: \"\"}\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.account = await this._accountService.getAccountInfo()\r\n    this.securityQuestions = await this._accountService.getSecurityQuestions()\r\n    this.selectedSecurityQuestion = this.getSecurityQuestion(this.account.securityQuestion)\r\n    console.log(this.selectedSecurityQuestion)\r\n  }\r\n\r\n  navigateToUpdateAccount(){\r\n    this.router.navigate(['update_account'])\r\n  }\r\n\r\n  changeDisabled() {\r\n    if(this.isDisabled) {\r\n      this.isDisabled = false;\r\n      this.btnText = \"Save\"\r\n      this.fakePassword = this.account.password;\r\n    }\r\n    else {\r\n      this.isDisabled = true;\r\n      this.btnText = \"Edit\"\r\n      this.account.password = this.fakePassword;\r\n      this.fakePassword = \"*********\";\r\n      console.log(this.account)\r\n      //this.updateAccount()\r\n    }\r\n  }\r\n\r\n  getSecurityQuestion(enumValue: string): ISecurityQuestion {\r\n    for(let question of this.securityQuestions) {\r\n      if(question.enumValue === enumValue) {\r\n        return question;\r\n      }\r\n    }\r\n    return {\"enumValue\": \"\", \"text\": \"\"};\r\n  }\r\n\r\n  async updateAccount() {\r\n    let response: Account = await this._accountService.updateAccountInfo(this.account)\r\n    console.log(response)\r\n  }\r\n\r\n  async deleteAccount() {\r\n    //let response: Account = await this._accountService.deleteAccount()\r\n    //console.log(response)\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}