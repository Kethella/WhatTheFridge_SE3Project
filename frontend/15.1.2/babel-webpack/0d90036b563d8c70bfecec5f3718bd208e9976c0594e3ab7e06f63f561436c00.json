{"ast":null,"code":"import { HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MediaService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = \"http://localhost:8085/media\";\n  }\n  uploadFile(selectedFiles) {\n    this.currentFileUpload = selectedFiles.item(0);\n    const data = new FormData();\n    data.append('file', this.currentFileUpload);\n    const newRequest = new HttpRequest('POST', 'http://localhost:8085/media/upload', data, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n    this.http.request(newRequest).subscribe(event => {\n      let mediaString = JSON.stringify(event.body);\n      mediaString = mediaString.slice(1, mediaString.length - 1);\n      console.log(\"bruh \" + mediaString);\n      return mediaString;\n    });\n  }\n  uploadMedia(selectedFiles) {\n    this.currentFileUpload = selectedFiles.item(0);\n    this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\n      if (event instanceof HttpResponse) {\n        this.mediaString = JSON.stringify(event.body);\n        this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1);\n        console.log(\"bruh \" + this.mediaString);\n        return this.mediaString;\n      }\n      this.selectedFiles = undefined;\n    });\n  }\n}\nMediaService.ɵfac = function MediaService_Factory(t) {\n  return new (t || MediaService)(i0.ɵɵinject(i1.HttpClient));\n};\nMediaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MediaService,\n  factory: MediaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAA4CA,WAAW,QAAQ,sBAAsB;;;AAOrF,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,aAAQ,GAAG,6BAA6B;EAKR;EAGxCC,UAAU,CAACC,aAAuB;IAChC,IAAI,CAACC,iBAAiB,GAAGD,aAAa,CAACE,IAAI,CAAC,CAAC,CAAE;IAC/C,MAAMC,IAAI,GAAa,IAAIC,QAAQ,EAAE;IACrCD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACJ,iBAAiB,CAAC;IAC3C,MAAMK,UAAU,GAAG,IAAIX,WAAW,CAAC,MAAM,EAAE,oCAAoC,EAAEQ,IAAI,EAAE;MACvFI,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE;KACb,CAAC;IAEF,IAAI,CAACV,IAAI,CAACW,OAAO,CAACH,UAAU,CAAC,CAACI,SAAS,CAACC,KAAK,IAAG;MAE9C,IAAIC,WAAW,GAAWC,IAAI,CAACC,SAAS,CAACH,KAAK,CAACI,IAAI,CAAC;MACpDH,WAAW,GAAGA,WAAW,CAACI,KAAK,CAAC,CAAC,EAAEJ,WAAW,CAACK,MAAM,GAAG,CAAC,CAAC;MAC1DC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGP,WAAW,CAAC;MAClC,OAAOA,WAAW;IAIpB,CAAC,CAAC;EACJ;EAKAQ,WAAW,CAACpB,aAAuB;IAEjC,IAAI,CAACC,iBAAiB,GAAGD,aAAa,CAACE,IAAI,CAAC,CAAC,CAAE;IAC/C,IAAI,CAACmB,aAAa,CAACtB,UAAU,CAAC,IAAI,CAACE,iBAAiB,CAAC,CAACS,SAAS,CAACC,KAAK,IAAG;MACtE,IAAIA,KAAK,YAAYW,YAAY,EAAE;QAC/B,IAAI,CAACV,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAACI,IAAI,CAAC;QAC7C,IAAI,CAACH,WAAW,GAAG,IAAI,CAACA,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,IAAI,CAACJ,WAAW,CAACK,MAAM,GAAG,CAAC,CAAC;QACzEC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAG,IAAI,CAACP,WAAW,CAAC;QACvC,OAAO,IAAI,CAACA,WAAW;;MAE3B,IAAI,CAACZ,aAAa,GAAGuB,SAAU;IAC/B,CAAC,CACF;EAEH;;AAhDW3B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA4B,SAAZ5B,YAAY;EAAA6B,YAFX;AAAM","names":["HttpRequest","MediaService","constructor","http","uploadFile","selectedFiles","currentFileUpload","item","data","FormData","append","newRequest","reportProgress","responseType","request","subscribe","event","mediaString","JSON","stringify","body","slice","length","console","log","uploadMedia","_mediaService","HttpResponse","undefined","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\media.service.ts"],"sourcesContent":["import { HttpClient, HttpEvent, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { firstValueFrom, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaService {\r\n\r\n  private _baseUrl = \"http://localhost:8085/media\";\r\n\r\n  currentFileUpload: File;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  uploadFile(selectedFiles: FileList): Observable<HttpEvent<{}>> {\r\n    this.currentFileUpload = selectedFiles.item(0)!;\r\n    const data: FormData = new FormData();\r\n    data.append('file', this.currentFileUpload);\r\n    const newRequest = new HttpRequest('POST', 'http://localhost:8085/media/upload', data, {\r\n    reportProgress: true,\r\n    responseType: 'text'\r\n    });\r\n\r\n    this.http.request(newRequest).subscribe(event => {\r\n\r\n      let mediaString: string = JSON.stringify(event.body)\r\n      mediaString = mediaString.slice(1, mediaString.length - 1)\r\n      console.log(\"bruh \" + mediaString)\r\n      return mediaString;\r\n\r\n\r\n\r\n    })\r\n  }\r\n\r\n  //selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n\r\n  uploadMedia(selectedFiles: FileList) {\r\n\r\n    this.currentFileUpload = selectedFiles.item(0)!;\r\n    this._mediaService.uploadFile(this.currentFileUpload).subscribe(event => {\r\n      if (event instanceof HttpResponse) {\r\n          this.mediaString = JSON.stringify(event.body)\r\n          this.mediaString = this.mediaString.slice(1, this.mediaString.length - 1)\r\n          console.log(\"bruh \" + this.mediaString)\r\n          return this.mediaString\r\n      }\r\n      this.selectedFiles = undefined!;\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}