{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecipeService {\n  constructor(http) {\n    this.http = http;\n    this.data = {};\n    this._baseUriRecipe = \"http://localhost:8085/api/v1/recipes/oa=1310140241453400/\";\n    this._baseUriTags = \"http://localhost:8085/api/v1/recipes/tags/oa=1310140241453400/\";\n  }\n  getRecipes(queryParams) {\n    if (queryParams) {\n      return this.http.get(this._baseUriRecipe, {\n        params: queryParams\n      }).pipe(catchError(this.errorHandler));\n    } else {\n      return this.http.get(this._baseUriRecipe).pipe(catchError(this.errorHandler));\n    }\n  }\n  getTags() {\n    return this.http.get(this._baseUriTags).pipe(catchError(this.errorHandler));\n  }\n  errorHandler(error) {\n    return throwError(error.message || \"Server Error\");\n  }\n  save(recipe) {\n    return this.http.post(this._baseUriRecipe, recipe);\n  }\n}\nRecipeService.ɵfac = function RecipeService_Factory(t) {\n  return new (t || RecipeService)(i0.ɵɵinject(i1.HttpClient));\n};\nRecipeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RecipeService,\n  factory: RecipeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,EAAEC,UAAU,QAAiB,MAAM;;;AAMlE,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,SAAI,GAAG,EAAE;IACD,mBAAc,GAAW,2DAA2D;IACpF,iBAAY,GAAW,gEAAgE;EAEvD;EAExCC,UAAU,CAACC,WAAuB;IAChC,IAAIA,WAAW,EAAE;MACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACC,cAAc,EAAE;QAACC,MAAM,EAACH;MAAW,CAAC,CAAC,CACxEI,IAAI,CAACV,UAAU,CAAC,IAAI,CAACW,YAAY,CAAC,CAAC;KACrC,MACI;MACH,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAW,IAAI,CAACC,cAAc,CAAC,CAClDE,IAAI,CAACV,UAAU,CAAC,IAAI,CAACW,YAAY,CAAC,CAAC;;EAGxC;EAEAC,OAAO;IAEL,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAW,IAAI,CAACM,YAAY,CAAC,CAChDH,IAAI,CAACV,UAAU,CAAC,IAAI,CAACW,YAAY,CAAC,CAAC;EAEtC;EAEQA,YAAY,CAACG,KAAwB;IAC3C,OAAOb,UAAU,CAACa,KAAK,CAACC,OAAO,IAAI,cAAc,CAAC;EACpD;EAEOC,IAAI,CAACC,MAAc;IACxB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAS,IAAI,CAACV,cAAc,EAAES,MAAM,CAAC;EAC5D;;AAjCWf,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAiB,SAAbjB,aAAa;EAAAkB,YAFZ;AAAM","names":["catchError","throwError","RecipeService","constructor","http","getRecipes","queryParams","get","_baseUriRecipe","params","pipe","errorHandler","getTags","_baseUriTags","error","message","save","recipe","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\recipe.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, catchError, throwError, Subject } from 'rxjs';\r\nimport { Recipe } from '../models/recipe';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeService {\r\n\r\n  data = {};\r\n  private _baseUriRecipe: string = \"http://localhost:8085/api/v1/recipes/oa=1310140241453400/\"\r\n  private _baseUriTags: string = \"http://localhost:8085/api/v1/recipes/tags/oa=1310140241453400/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRecipes(queryParams: HttpParams): Observable<Recipe[]> {\r\n    if (queryParams) {\r\n      return this.http.get<Recipe[]>(this._baseUriRecipe, {params:queryParams})\r\n      .pipe(catchError(this.errorHandler));\r\n    }\r\n    else {\r\n      return this.http.get<Recipe[]>(this._baseUriRecipe)\r\n      .pipe(catchError(this.errorHandler));\r\n    }\r\n\r\n  }\r\n\r\n  getTags(): Observable<String[]> {\r\n\r\n    return this.http.get<String[]>(this._baseUriTags)\r\n    .pipe(catchError(this.errorHandler));\r\n\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse){\r\n    return throwError(error.message || \"Server Error\")\r\n  }\r\n\r\n  public save(recipe: Recipe) {\r\n    return this.http.post<Recipe>(this._baseUriRecipe, recipe);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}