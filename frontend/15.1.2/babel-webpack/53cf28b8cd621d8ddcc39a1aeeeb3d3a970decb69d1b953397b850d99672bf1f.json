{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/IdeaPad 100-15IBD/Desktop/HdM/3-Semester/SE3/se3project/Angular/se3-recipe-generator-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FridgeService {\n  constructor(http) {\n    this.http = http;\n    this.ownerAccount = \"2238550034095900\"; //todo: change back to empty string\n    this._baseUri = \"http://localhost:8085/api/v1/fridgeItems\";\n    this.fridgeItems = [];\n  }\n  getFridgeItems() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this.http.get(`${_this._baseUri}/oa=${_this.ownerAccount}`));\n    })();\n  }\n  saveItem(fridgeItem) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      fridgeItem.ownerAccount = _this2.ownerAccount;\n      return firstValueFrom(_this2.http.post(_this2._baseUri, fridgeItem));\n    })();\n  }\n  updateItem(fridgeItem) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this3.http.put(`${_this3._baseUri}/${fridgeItem.id}`, fridgeItem));\n    })();\n  }\n  deleteItem(fridgeItem) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return firstValueFrom(_this4.http.delete(`${_this4._baseUri}/${fridgeItem.id}`));\n    })();\n  }\n  setOwnerAccount(oa) {\n    // this.ownerAccount = oa;\n  }\n  getUpdatedNotifications() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      console.log(\"oa \" + _this5.ownerAccount);\n      _this5.fridgeItems = yield _this5.getFridgeItems();\n      _this5.expiringFridgeItems = [];\n      for (var item of _this5.fridgeItems) {\n        var fridgeItem = item;\n        if (_this5.expiresSoon(fridgeItem.expirationDate)) {\n          //console.log(\"this expires: \" + fridgeItem.name)\n          _this5.expiringFridgeItems.push(fridgeItem);\n        }\n      }\n      return _this5.expiringFridgeItems;\n    })();\n  }\n  expiresSoon(dateToCheck) {\n    const today = new Date();\n    const itemDate = new Date(dateToCheck);\n    if (itemDate <= today) {\n      return true;\n    }\n    return false;\n  }\n}\nFridgeService.ɵfac = function FridgeService_Factory(t) {\n  return new (t || FridgeService)(i0.ɵɵinject(i1.HttpClient));\n};\nFridgeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FridgeService,\n  factory: FridgeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,cAAc,QAAoB,MAAM;;;AAMjD,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,iBAAY,GAAW,kBAAkB,EAAC;IAC1C,aAAQ,GAAW,0CAA0C;IAE7D,gBAAW,GAAiB,EAAE;EAGE;EAElCC,cAAc;IAAA;IAAA;MAClB,OAAOJ,cAAc,CAAC,KAAI,CAACG,IAAI,CAACE,GAAG,CAAe,GAAG,KAAI,CAACC,QAAQ,OAAO,KAAI,CAACC,YAAY,EAAE,CAAC,CAAC;IAAC;EACjG;EAEMC,QAAQ,CAACC,UAAsB;IAAA;IAAA;MACnCA,UAAU,CAACF,YAAY,GAAG,MAAI,CAACA,YAAY;MAC3C,OAAOP,cAAc,CAAC,MAAI,CAACG,IAAI,CAACO,IAAI,CAAa,MAAI,CAACJ,QAAQ,EAAEG,UAAU,CAAC,CAAC;IAAC;EAC/E;EAEME,UAAU,CAACF,UAAsB;IAAA;IAAA;MACrC,OAAOT,cAAc,CAAC,MAAI,CAACG,IAAI,CAACS,GAAG,CAAC,GAAG,MAAI,CAACN,QAAQ,IAAIG,UAAU,CAACI,EAAE,EAAE,EAAEJ,UAAU,CAAC,CAAC;IAAC;EACxF;EAEMK,UAAU,CAACL,UAAsB;IAAA;IAAA;MACrC,OAAOT,cAAc,CAAC,MAAI,CAACG,IAAI,CAACY,MAAM,CAAC,GAAG,MAAI,CAACT,QAAQ,IAAIG,UAAU,CAACI,EAAE,EAAE,CAAC,CAAC;IAAC;EAC/E;EAEAG,eAAe,CAACC,EAAU;IACzB;EAAA;EAMKC,uBAAuB;IAAA;IAAA;MAC3BC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAG,MAAI,CAACb,YAAY,CAAC;MACtC,MAAI,CAACc,WAAW,SAAS,MAAI,CAACjB,cAAc,EAAE;MAC9C,MAAI,CAACkB,mBAAmB,GAAG,EAAE;MAE7B,KAAK,IAAIC,IAAI,IAAI,MAAI,CAACF,WAAW,EAAE;QACjC,IAAIZ,UAAU,GAAgBc,IAAI;QAClC,IAAI,MAAI,CAACC,WAAW,CAACf,UAAU,CAACgB,cAAc,CAAC,EAAE;UAC/C;UACA,MAAI,CAACH,mBAAmB,CAACI,IAAI,CAACjB,UAAU,CAAC;;;MAI7C,OAAO,MAAI,CAACa,mBAAmB;IAAA;EACjC;EAEAE,WAAW,CAACG,WAAmB;IAC7B,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACF,WAAW,CAAC;IAEtC,IAAIG,QAAQ,IAAIF,KAAK,EAAE;MACrB,OAAO,IAAI;;IAGb,OAAO,KAAK;EACd;;AA1DW3B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA8B,SAAb9B,aAAa;EAAA+B,YAFZ;AAAM","names":["firstValueFrom","FridgeService","constructor","http","getFridgeItems","get","_baseUri","ownerAccount","saveItem","fridgeItem","post","updateItem","put","id","deleteItem","delete","setOwnerAccount","oa","getUpdatedNotifications","console","log","fridgeItems","expiringFridgeItems","item","expiresSoon","expirationDate","push","dateToCheck","today","Date","itemDate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\fridge.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { firstValueFrom, Observable } from 'rxjs';\r\nimport { FridgeItem } from '../models/fridgeItem';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FridgeService {\r\n  private ownerAccount: string = \"2238550034095900\" //todo: change back to empty string\r\n  private _baseUri: string = \"http://localhost:8085/api/v1/fridgeItems\";\r\n\r\n  private fridgeItems: FridgeItem[] = [];\r\n  private expiringFridgeItems: FridgeItem[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async getFridgeItems(): Promise<FridgeItem[]> {\r\n    return firstValueFrom(this.http.get<FridgeItem[]>(`${this._baseUri}/oa=${this.ownerAccount}`));\r\n  }\r\n\r\n  async saveItem(fridgeItem: FridgeItem): Promise<FridgeItem>  {\r\n    fridgeItem.ownerAccount = this.ownerAccount;\r\n    return firstValueFrom(this.http.post<FridgeItem>(this._baseUri, fridgeItem));\r\n  }\r\n\r\n  async updateItem(fridgeItem: FridgeItem): Promise<any> {\r\n    return firstValueFrom(this.http.put(`${this._baseUri}/${fridgeItem.id}`, fridgeItem));\r\n  }\r\n\r\n  async deleteItem(fridgeItem: FridgeItem): Promise<any> {\r\n    return firstValueFrom(this.http.delete(`${this._baseUri}/${fridgeItem.id}`));\r\n  }\r\n\r\n  setOwnerAccount(oa: string): void{\r\n   // this.ownerAccount = oa;\r\n  }\r\n\r\n\r\n\r\n\r\n  async getUpdatedNotifications(): Promise<FridgeItem[]> {\r\n    console.log(\"oa \" + this.ownerAccount)\r\n    this.fridgeItems = await this.getFridgeItems()\r\n    this.expiringFridgeItems = [];\r\n\r\n    for (var item of this.fridgeItems) {\r\n      var fridgeItem = <FridgeItem> item;\r\n      if (this.expiresSoon(fridgeItem.expirationDate)) {\r\n        //console.log(\"this expires: \" + fridgeItem.name)\r\n        this.expiringFridgeItems.push(fridgeItem);\r\n      }\r\n    }\r\n\r\n    return this.expiringFridgeItems\r\n  }\r\n\r\n  expiresSoon(dateToCheck: string): boolean {\r\n    const today = new Date();\r\n    const itemDate = new Date(dateToCheck);\r\n\r\n    if (itemDate <= today) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}