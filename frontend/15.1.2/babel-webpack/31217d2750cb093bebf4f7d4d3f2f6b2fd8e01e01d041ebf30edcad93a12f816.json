{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { RecipeDetailsComponent } from 'src/app/shared/components/recipe-details/recipe-details.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/chips\";\nimport * as i5 from \"@angular/material/core\";\nfunction RecipeGridComponent_mat_card_1_mat_chip_row_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip-row\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tag_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r3, \" \");\n  }\n}\nfunction RecipeGridComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 2);\n    i0.ɵɵlistener(\"click\", function RecipeGridComponent_mat_card_1_Template_mat_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const recipe_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openDialog(recipe_r1));\n    });\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementStart(2, \"mat-card-header\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-footer\");\n    i0.ɵɵtemplate(5, RecipeGridComponent_mat_card_1_mat_chip_row_5_Template, 2, 1, \"mat-chip-row\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const recipe_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", recipe_r1.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(recipe_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", recipe_r1.tags);\n  }\n}\nexport class RecipeGridComponent {\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.recipes = [];\n    this.breakpoint = 6;\n    this.queryParams = new HttpParams();\n  }\n  ngOnInit() {\n    this.breakpoint = window.innerWidth <= 400 ? 1 : 4;\n  }\n  onResize(event) {\n    this.breakpoint = event.target.innerWidth <= 400 ? 1 : 4;\n  }\n  openDialog(selectedRecipe) {\n    this.dialog.open(RecipeDetailsComponent, {\n      width: '600px',\n      //height: '450px',\n      data: {\n        selectedRecipe: selectedRecipe\n      }\n    });\n  }\n}\nRecipeGridComponent.ɵfac = function RecipeGridComponent_Factory(t) {\n  return new (t || RecipeGridComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n};\nRecipeGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeGridComponent,\n  selectors: [[\"app-recipe-grid\"]],\n  inputs: {\n    recipes: \"recipes\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"recipe-grid\"], [\"matRipple\", \"\", \"class\", \"clickable\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"matRipple\", \"\", 1, \"clickable\", 3, \"click\"], [\"mat-card-image\", \"\", \"alt\", \"Recipe photo\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function RecipeGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, RecipeGridComponent_mat_card_1_Template, 6, 3, \"mat-card\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.recipes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i3.MatCardFooter, i3.MatCardHeader, i3.MatCardImage, i4.MatChipRow, i5.MatRipple],\n  styles: [\".recipe-grid[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-flow: row wrap;\\r\\n  justify-content: space-between;\\r\\n  gap: 35px;\\r\\n  margin-left: 10%;\\r\\n  margin-right: 10%;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%] {\\r\\n  background: #2B2B2B;\\r\\n  width: 275px;\\r\\n  height: 400px;\\r\\n}\\r\\n\\r\\n.clickable[_ngcontent-%COMP%] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%]:hover {\\r\\n  background: #333333;\\r\\n}\\r\\n\\r\\n\\r\\nimg[_ngcontent-%COMP%]{\\r\\n  padding-top: 15px;\\r\\n  border-radius: 10px;\\r\\n  height: 200px;\\r\\n  width: 200px;\\r\\n  object-fit: cover;\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\nmat-card-header[_ngcontent-%COMP%] {\\r\\n  font-size: large;\\r\\n  align-self: center;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding-bottom: 15px;\\r\\n}\\r\\n\\r\\nmat-card-footer[_ngcontent-%COMP%] {\\r\\n  padding-top: 10%;\\r\\n  padding-left: 10%;\\r\\n  display: flex;\\r\\n  flex-flow: row wrap;\\r\\n  gap: 5px;\\r\\n}\\r\\n\\r\\nmat-chip-row[_ngcontent-%COMP%] {\\r\\n  max-width: 200px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9ob21lL3JlY2lwZS1ncmlkL3JlY2lwZS1ncmlkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtFQUM5QixTQUFTO0VBQ1QsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7O0FBR0E7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIucmVjaXBlLWdyaWQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgZ2FwOiAzNXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAjMkIyQjJCO1xyXG4gIHdpZHRoOiAyNzVweDtcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG59XHJcblxyXG4uY2xpY2thYmxlIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xyXG59XHJcblxyXG5cclxuaW1ne1xyXG4gIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogbGFyZ2U7XHJcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkLWZvb3RlciB7XHJcbiAgcGFkZGluZy10b3A6IDEwJTtcclxuICBwYWRkaW5nLWxlZnQ6IDEwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XHJcbiAgZ2FwOiA1cHg7XHJcbn1cclxuXHJcbm1hdC1jaGlwLXJvdyB7XHJcbiAgbWF4LXdpZHRoOiAyMDBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAO,sBAAsB;AAChD,SAASC,sBAAsB,QAAQ,mEAAmE;;;;;;;;;ICI9FC,oCAA8C;IAC5CA,YACF;IAAAA,iBAAe;;;;IADbA,eACF;IADEA,uCACF;;;;;;IARNA,mCAAmG;IAA1DA;MAAA;MAAA;MAAA;MAAA,OAAUA,2CAAkB;IAAA,EAAC;IACpEA,yBAA4D;IAE5DA,uCAAiB;IAAAA,YAAe;IAAAA,iBAAkB;IAElDA,uCAAiB;IACbA,iGAEe;IACnBA,iBAAkB;;;;IAREA,eAAoB;IAApBA,uDAAoB;IAEvBA,eAAe;IAAfA,oCAAe;IAGEA,eAAc;IAAdA,wCAAc;;;ADKxD,OAAM,MAAOC,mBAAmB;EAK9BC,YAAmBC,MAAgB;IAAhB,WAAM,GAANA,MAAM;IAHT,YAAO,GAAG,EAAS;IAC5B,eAAU,GAAW,CAAC;IAItB,gBAAW,GAAG,IAAIL,UAAU,EAAE;EAFA;EAIrCM,QAAQ;IACN,IAAI,CAACC,UAAU,GAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,GAAI,CAAC,GAAG,CAAC;EACtD;EAEAC,QAAQ,CAACC,KAAU;IACjB,IAAI,CAACJ,UAAU,GAAII,KAAK,CAACC,MAAM,CAACH,UAAU,IAAI,GAAG,GAAI,CAAC,GAAG,CAAC;EAC5D;EAEAI,UAAU,CAACC,cAAsB;IAC/B,IAAI,CAACT,MAAM,CAACU,IAAI,CAACd,sBAAsB,EAAE;MACvCe,KAAK,EAAE,OAAO;MACd;MACAC,IAAI,EAAE;QACJH,cAAc,EAAEA;;KAEnB,CAAC;EACJ;;AAzBWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAe;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZhCtB,8BAAyB;MACnBA,8EAWW;MACjBA,iBAAM;;;MAZ6BA,eAAU;MAAVA,qCAAU","names":["HttpParams","RecipeDetailsComponent","i0","RecipeGridComponent","constructor","dialog","ngOnInit","breakpoint","window","innerWidth","onResize","event","target","openDialog","selectedRecipe","open","width","data","selectors","inputs","recipes","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\home\\recipe-grid\\recipe-grid.component.ts","C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\modules\\home\\recipe-grid\\recipe-grid.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { RecipeService } from 'src/app/services/recipe.service';\r\nimport { HttpParams} from '@angular/common/http';\r\nimport { RecipeDetailsComponent } from 'src/app/shared/components/recipe-details/recipe-details.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Recipe } from 'src/app/models/recipe';\r\n\r\n@Component({\r\n  selector: 'app-recipe-grid',\r\n  templateUrl: './recipe-grid.component.html',\r\n  styleUrls: ['./recipe-grid.component.css']\r\n})\r\nexport class RecipeGridComponent implements OnInit{\r\n\r\n  @Input() public recipes = [] as any;\r\n  public breakpoint: number = 6;\r\n\r\n  constructor(public dialog:MatDialog){}\r\n\r\n  public queryParams = new HttpParams();\r\n\r\n  ngOnInit(): void {\r\n    this.breakpoint = (window.innerWidth <= 400) ? 1 : 4;\r\n  }\r\n\r\n  onResize(event: any) {\r\n    this.breakpoint = (event.target.innerWidth <= 400) ? 1 : 4;\r\n  }\r\n\r\n  openDialog(selectedRecipe: Recipe){\r\n    this.dialog.open(RecipeDetailsComponent, {\r\n      width: '600px',\r\n      //height: '450px',\r\n      data: {\r\n        selectedRecipe: selectedRecipe\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"recipe-grid\">\r\n      <mat-card *ngFor=\"let recipe of recipes\" (click) =\"openDialog(recipe)\" matRipple class=\"clickable\">\r\n        <img mat-card-image [src]=\"recipe.image\" alt=\"Recipe photo\">\r\n\r\n        <mat-card-header>{{recipe.name}}</mat-card-header>\r\n\r\n        <mat-card-footer>\r\n            <mat-chip-row *ngFor=\"let tag of recipe.tags\">\r\n              {{tag}}\r\n            </mat-chip-row>\r\n        </mat-card-footer>\r\n\r\n      </mat-card>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}