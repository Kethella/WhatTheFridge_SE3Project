{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthenticationService {\n  constructor(router) {\n    this.router = router;\n    this.loggedIn = new BehaviorSubject(false);\n  }\n  isLoggedIn() {\n    return this.loggedIn.asObservable();\n  }\n  login() {\n    this.loggedIn.next(true);\n    this.router.navigate([\"/home\"]);\n  }\n  logout() {\n    this.loggedIn.next(false);\n    this.router.navigate([\"/login\"]);\n  }\n  isLoggedInValue() {\n    return this.loggedIn.value;\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.Router));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAF1B,aAAQ,GAA6B,IAAIH,eAAe,CAAU,KAAK,CAAC;EAElC;EAE/BI,UAAU;IACf,OAAO,IAAI,CAACC,QAAQ,CAACC,YAAY,EAAE;EACrC;EAEOC,KAAK;IACV,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC;IACxB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEOC,MAAM;IACX,IAAI,CAACL,QAAQ,CAACG,IAAI,CAAC,KAAK,CAAC;IACzB,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEOE,eAAe;IACpB,OAAO,IAAI,CAACN,QAAQ,CAACO,KAAK;EAC5B;;AArBWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAY,SAArBZ,qBAAqB;EAAAa,YAFpB;AAAM","names":["BehaviorSubject","AuthenticationService","constructor","router","isLoggedIn","loggedIn","asObservable","login","next","navigate","logout","isLoggedInValue","value","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IdeaPad 100-15IBD\\Desktop\\HdM\\3-Semester\\SE3\\se3project\\Angular\\se3-recipe-generator-frontend\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private router: Router) { }\n\n  public isLoggedIn(): Observable<boolean> {\n    return this.loggedIn.asObservable();\n  }\n\n  public login(): void {\n    this.loggedIn.next(true);\n    this.router.navigate([\"/home\"])\n  }\n\n  public logout(): void {\n    this.loggedIn.next(false);\n    this.router.navigate([\"/login\"])\n  }\n\n  public isLoggedInValue(): boolean {\n    return this.loggedIn.value;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}